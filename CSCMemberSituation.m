/*
	CSCMemberSituation.h
	The implementation of properties and methods for the CSCMemberSituation object.
	Generated by SudzC.com
*/
#import "CSCMemberSituation.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
#import "CSCArrayOfString.h"
#import "CSCArrayOfString.h"
#import "CSCArrayOfString.h"
#import "CSCArrayOfString.h"
#import "CSCOrganization.h"
#import "CSCArrayOfPersonalIncome.h"
#import "CSCInsuredGroup.h"
#import "CSCPerson.h"
@implementation CSCMemberSituation
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize Categorie = _Categorie;
	@synthesize CategorieLabel = _CategorieLabel;
	@synthesize Classement = _Classement;
	@synthesize ClassementLabel = _ClassementLabel;
	@synthesize CollectiveAgreement = _CollectiveAgreement;
	@synthesize CollectiveAgreementLabel = _CollectiveAgreementLabel;
	@synthesize DisagreementLabelList = _DisagreementLabelList;
	@synthesize DisagreementList = _DisagreementList;
	@synthesize EmployeeStatusLabelList = _EmployeeStatusLabelList;
	@synthesize EmployeeStatusList = _EmployeeStatusList;
	@synthesize Employer = _Employer;
	@synthesize EmploymentContract = _EmploymentContract;
	@synthesize EmploymentContractLabel = _EmploymentContractLabel;
	@synthesize EndDate = _EndDate;
	@synthesize EndMotive = _EndMotive;
	@synthesize EndMotiveLabel = _EndMotiveLabel;
	@synthesize HealthOption = _HealthOption;
	@synthesize HealthRatingOption = _HealthRatingOption;
	@synthesize HiringDate = _HiringDate;
	@synthesize IncomeList = _IncomeList;
	@synthesize InsuredGroup = _InsuredGroup;
	@synthesize JobPosition = _JobPosition;
	@synthesize JobPositionLabel = _JobPositionLabel;
	@synthesize MultipleEmployers = _MultipleEmployers;
	@synthesize MultipleOccupations = _MultipleOccupations;
	@synthesize Person = _Person;
	@synthesize ProfessionCode = _ProfessionCode;
	@synthesize ProfessionLabel = _ProfessionLabel;
	@synthesize RegistrationNumber = _RegistrationNumber;
	@synthesize RiskProtectionOption = _RiskProtectionOption;
	@synthesize SalaryGrading = _SalaryGrading;
	@synthesize StartDate = _StartDate;
	@synthesize StartMotive = _StartMotive;
	@synthesize StartMotiveLabel = _StartMotiveLabel;
	@synthesize Status = _Status;
	@synthesize StatutCategoriel = _StatutCategoriel;
	@synthesize StatutCategorielLabel = _StatutCategorielLabel;
	@synthesize StatutProfessionnel = _StatutProfessionnel;
	@synthesize StatutProfessionnelLabel = _StatutProfessionnelLabel;
	@synthesize WorkingTime = _WorkingTime;
	@synthesize WorkingTimeLabel = _WorkingTimeLabel;
	@synthesize WorkingTimeRate = _WorkingTimeRate;

	- (id) init
	{
		if(self = [super init])
		{
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.Categorie = nil;
			self.CategorieLabel = nil;
			self.Classement = nil;
			self.ClassementLabel = nil;
			self.CollectiveAgreement = nil;
			self.CollectiveAgreementLabel = nil;
			self.DisagreementLabelList = [[NSMutableArray alloc] init];
			self.DisagreementList = [[NSMutableArray alloc] init];
			self.EmployeeStatusLabelList = [[NSMutableArray alloc] init];
			self.EmployeeStatusList = [[NSMutableArray alloc] init];
			self.Employer = nil; // [[CSCOrganization alloc] init];
			self.EmploymentContract = nil;
			self.EmploymentContractLabel = nil;
			self.EndDate = nil;
			self.EndMotive = nil;
			self.EndMotiveLabel = nil;
			self.HealthOption = nil;
			self.HealthRatingOption = nil;
			self.HiringDate = nil;
			self.IncomeList = [[NSMutableArray alloc] init];
			self.InsuredGroup = nil; // [[CSCInsuredGroup alloc] init];
			self.JobPosition = nil;
			self.JobPositionLabel = nil;
			self.Person = nil; // [[CSCPerson alloc] init];
			self.ProfessionCode = nil;
			self.ProfessionLabel = nil;
			self.RegistrationNumber = nil;
			self.RiskProtectionOption = nil;
			self.StartDate = nil;
			self.StartMotive = nil;
			self.StartMotiveLabel = nil;
			self.Status = nil;
			self.StatutCategoriel = nil;
			self.StatutCategorielLabel = nil;
			self.StatutProfessionnel = nil;
			self.StatutProfessionnelLabel = nil;
			self.WorkingTime = nil;
			self.WorkingTimeLabel = nil;
			self.WorkingTimeRate = nil;

		}
		return self;
	}

	+ (CSCMemberSituation*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCMemberSituation*)[[CSCMemberSituation alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.Categorie = [Soap getNodeValue: node withName: @"Categorie"];
			self.CategorieLabel = [Soap getNodeValue: node withName: @"CategorieLabel"];
			self.Classement = [Soap getNodeValue: node withName: @"Classement"];
			self.ClassementLabel = [Soap getNodeValue: node withName: @"ClassementLabel"];
			self.CollectiveAgreement = [Soap getNodeValue: node withName: @"CollectiveAgreement"];
			self.CollectiveAgreementLabel = [Soap getNodeValue: node withName: @"CollectiveAgreementLabel"];
			self.DisagreementLabelList = [[CSCArrayOfString createWithNode: [Soap getNode: node withName: @"DisagreementLabelList"]] object];
			self.DisagreementList = [[CSCArrayOfString createWithNode: [Soap getNode: node withName: @"DisagreementList"]] object];
			self.EmployeeStatusLabelList = [[CSCArrayOfString createWithNode: [Soap getNode: node withName: @"EmployeeStatusLabelList"]] object];
			self.EmployeeStatusList = [[CSCArrayOfString createWithNode: [Soap getNode: node withName: @"EmployeeStatusList"]] object];
			self.Employer = [[CSCOrganization createWithNode: [Soap getNode: node withName: @"Employer"]] object];
			self.EmploymentContract = [Soap getNodeValue: node withName: @"EmploymentContract"];
			self.EmploymentContractLabel = [Soap getNodeValue: node withName: @"EmploymentContractLabel"];
			self.EndDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EndDate"]];
			self.EndMotive = [Soap getNodeValue: node withName: @"EndMotive"];
			self.EndMotiveLabel = [Soap getNodeValue: node withName: @"EndMotiveLabel"];
			self.HealthOption = [Soap getNodeValue: node withName: @"HealthOption"];
			self.HealthRatingOption = [Soap getNodeValue: node withName: @"HealthRatingOption"];
			self.HiringDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"HiringDate"]];
			self.IncomeList = [[CSCArrayOfPersonalIncome createWithNode: [Soap getNode: node withName: @"IncomeList"]] object];
			self.InsuredGroup = [[CSCInsuredGroup createWithNode: [Soap getNode: node withName: @"InsuredGroup"]] object];
			self.JobPosition = [Soap getNodeValue: node withName: @"JobPosition"];
			self.JobPositionLabel = [Soap getNodeValue: node withName: @"JobPositionLabel"];
			self.MultipleEmployers = [[Soap getNodeValue: node withName: @"MultipleEmployers"] boolValue];
			self.MultipleOccupations = [[Soap getNodeValue: node withName: @"MultipleOccupations"] boolValue];
			self.Person = [[CSCPerson createWithNode: [Soap getNode: node withName: @"Person"]] object];
			self.ProfessionCode = [Soap getNodeValue: node withName: @"ProfessionCode"];
			self.ProfessionLabel = [Soap getNodeValue: node withName: @"ProfessionLabel"];
			self.RegistrationNumber = [Soap getNodeValue: node withName: @"RegistrationNumber"];
			self.RiskProtectionOption = [Soap getNodeValue: node withName: @"RiskProtectionOption"];
			self.SalaryGrading = [[Soap getNodeValue: node withName: @"SalaryGrading"] intValue];
			self.StartDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"StartDate"]];
			self.StartMotive = [Soap getNodeValue: node withName: @"StartMotive"];
			self.StartMotiveLabel = [Soap getNodeValue: node withName: @"StartMotiveLabel"];
			self.Status = [Soap getNodeValue: node withName: @"Status"];
			self.StatutCategoriel = [Soap getNodeValue: node withName: @"StatutCategoriel"];
			self.StatutCategorielLabel = [Soap getNodeValue: node withName: @"StatutCategorielLabel"];
			self.StatutProfessionnel = [Soap getNodeValue: node withName: @"StatutProfessionnel"];
			self.StatutProfessionnelLabel = [Soap getNodeValue: node withName: @"StatutProfessionnelLabel"];
			self.WorkingTime = [Soap getNodeValue: node withName: @"WorkingTime"];
			self.WorkingTimeLabel = [Soap getNodeValue: node withName: @"WorkingTimeLabel"];
			self.WorkingTimeRate = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"WorkingTimeRate"]];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"MemberSituation"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.Categorie != nil) [s appendFormat: @"<Categorie>%@</Categorie>", [[self.Categorie stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CategorieLabel != nil) [s appendFormat: @"<CategorieLabel>%@</CategorieLabel>", [[self.CategorieLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Classement != nil) [s appendFormat: @"<Classement>%@</Classement>", [[self.Classement stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ClassementLabel != nil) [s appendFormat: @"<ClassementLabel>%@</ClassementLabel>", [[self.ClassementLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CollectiveAgreement != nil) [s appendFormat: @"<CollectiveAgreement>%@</CollectiveAgreement>", [[self.CollectiveAgreement stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CollectiveAgreementLabel != nil) [s appendFormat: @"<CollectiveAgreementLabel>%@</CollectiveAgreementLabel>", [[self.CollectiveAgreementLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.DisagreementLabelList != nil && self.DisagreementLabelList.count > 0) {
			[s appendFormat: @"<DisagreementLabelList>%@</DisagreementLabelList>", [CSCArrayOfString serialize: self.DisagreementLabelList]];
		} else {
			[s appendString: @"<DisagreementLabelList/>"];
		}
		if (self.DisagreementList != nil && self.DisagreementList.count > 0) {
			[s appendFormat: @"<DisagreementList>%@</DisagreementList>", [CSCArrayOfString serialize: self.DisagreementList]];
		} else {
			[s appendString: @"<DisagreementList/>"];
		}
		if (self.EmployeeStatusLabelList != nil && self.EmployeeStatusLabelList.count > 0) {
			[s appendFormat: @"<EmployeeStatusLabelList>%@</EmployeeStatusLabelList>", [CSCArrayOfString serialize: self.EmployeeStatusLabelList]];
		} else {
			[s appendString: @"<EmployeeStatusLabelList/>"];
		}
		if (self.EmployeeStatusList != nil && self.EmployeeStatusList.count > 0) {
			[s appendFormat: @"<EmployeeStatusList>%@</EmployeeStatusList>", [CSCArrayOfString serialize: self.EmployeeStatusList]];
		} else {
			[s appendString: @"<EmployeeStatusList/>"];
		}
		if (self.Employer != nil) [s appendString: [self.Employer serialize: @"Employer"]];
		if (self.EmploymentContract != nil) [s appendFormat: @"<EmploymentContract>%@</EmploymentContract>", [[self.EmploymentContract stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EmploymentContractLabel != nil) [s appendFormat: @"<EmploymentContractLabel>%@</EmploymentContractLabel>", [[self.EmploymentContractLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EndDate != nil) [s appendFormat: @"<EndDate>%@</EndDate>", [Soap getDateString: self.EndDate]];
		if (self.EndMotive != nil) [s appendFormat: @"<EndMotive>%@</EndMotive>", [[self.EndMotive stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EndMotiveLabel != nil) [s appendFormat: @"<EndMotiveLabel>%@</EndMotiveLabel>", [[self.EndMotiveLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.HealthOption != nil) [s appendFormat: @"<HealthOption>%@</HealthOption>", [[self.HealthOption stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.HealthRatingOption != nil) [s appendFormat: @"<HealthRatingOption>%@</HealthRatingOption>", [[self.HealthRatingOption stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.HiringDate != nil) [s appendFormat: @"<HiringDate>%@</HiringDate>", [Soap getDateString: self.HiringDate]];
		if (self.IncomeList != nil && self.IncomeList.count > 0) {
			[s appendFormat: @"<IncomeList>%@</IncomeList>", [CSCArrayOfPersonalIncome serialize: self.IncomeList]];
		} else {
			[s appendString: @"<IncomeList/>"];
		}
		if (self.InsuredGroup != nil) [s appendString: [self.InsuredGroup serialize: @"InsuredGroup"]];
		if (self.JobPosition != nil) [s appendFormat: @"<JobPosition>%@</JobPosition>", [[self.JobPosition stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.JobPositionLabel != nil) [s appendFormat: @"<JobPositionLabel>%@</JobPositionLabel>", [[self.JobPositionLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<MultipleEmployers>%@</MultipleEmployers>", (self.MultipleEmployers)?@"true":@"false"];
		[s appendFormat: @"<MultipleOccupations>%@</MultipleOccupations>", (self.MultipleOccupations)?@"true":@"false"];
		if (self.Person != nil) [s appendString: [self.Person serialize: @"Person"]];
		if (self.ProfessionCode != nil) [s appendFormat: @"<ProfessionCode>%@</ProfessionCode>", [[self.ProfessionCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ProfessionLabel != nil) [s appendFormat: @"<ProfessionLabel>%@</ProfessionLabel>", [[self.ProfessionLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.RegistrationNumber != nil) [s appendFormat: @"<RegistrationNumber>%@</RegistrationNumber>", [[self.RegistrationNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.RiskProtectionOption != nil) [s appendFormat: @"<RiskProtectionOption>%@</RiskProtectionOption>", [[self.RiskProtectionOption stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<SalaryGrading>%@</SalaryGrading>", [NSString stringWithFormat: @"%i", self.SalaryGrading]];
		if (self.StartDate != nil) [s appendFormat: @"<StartDate>%@</StartDate>", [Soap getDateString: self.StartDate]];
		if (self.StartMotive != nil) [s appendFormat: @"<StartMotive>%@</StartMotive>", [[self.StartMotive stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.StartMotiveLabel != nil) [s appendFormat: @"<StartMotiveLabel>%@</StartMotiveLabel>", [[self.StartMotiveLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Status != nil) [s appendFormat: @"<Status>%@</Status>", [[self.Status stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.StatutCategoriel != nil) [s appendFormat: @"<StatutCategoriel>%@</StatutCategoriel>", [[self.StatutCategoriel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.StatutCategorielLabel != nil) [s appendFormat: @"<StatutCategorielLabel>%@</StatutCategorielLabel>", [[self.StatutCategorielLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.StatutProfessionnel != nil) [s appendFormat: @"<StatutProfessionnel>%@</StatutProfessionnel>", [[self.StatutProfessionnel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.StatutProfessionnelLabel != nil) [s appendFormat: @"<StatutProfessionnelLabel>%@</StatutProfessionnelLabel>", [[self.StatutProfessionnelLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.WorkingTime != nil) [s appendFormat: @"<WorkingTime>%@</WorkingTime>", [[self.WorkingTime stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.WorkingTimeLabel != nil) [s appendFormat: @"<WorkingTimeLabel>%@</WorkingTimeLabel>", [[self.WorkingTimeLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.WorkingTimeRate != nil) [s appendFormat: @"<WorkingTimeRate>%@</WorkingTimeRate>", [NSString stringWithFormat: @"%@", self.WorkingTimeRate]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCMemberSituation class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
