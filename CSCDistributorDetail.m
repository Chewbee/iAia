/*
	CSCDistributorDetail.h
	The implementation of properties and methods for the CSCDistributorDetail object.
	Generated by SudzC.com
*/
#import "CSCDistributorDetail.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
@implementation CSCDistributorDetail
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize AgentType = _AgentType;
	@synthesize BusinessUnit = _BusinessUnit;
	@synthesize CommissionRate = _CommissionRate;
	@synthesize CommissionWithheld = _CommissionWithheld;
	@synthesize EndUser = _EndUser;
	@synthesize JobCode = _JobCode;
	@synthesize JobDescription = _JobDescription;
	@synthesize Label = _Label;
	@synthesize PaymentEnabled = _PaymentEnabled;
	@synthesize Status = _Status;
	@synthesize UnderSupervision = _UnderSupervision;

	- (id) init
	{
		if(self = [super init])
		{
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.AgentType = nil;
			self.BusinessUnit = nil;
			self.CommissionRate = nil;
			self.JobCode = nil;
			self.JobDescription = nil;
			self.Label = nil;
			self.Status = nil;

		}
		return self;
	}

	+ (CSCDistributorDetail*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCDistributorDetail*)[[CSCDistributorDetail alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.AgentType = [Soap getNodeValue: node withName: @"AgentType"];
			self.BusinessUnit = [Soap getNodeValue: node withName: @"BusinessUnit"];
			self.CommissionRate = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"CommissionRate"]];
			self.CommissionWithheld = [[Soap getNodeValue: node withName: @"CommissionWithheld"] boolValue];
			self.EndUser = [[Soap getNodeValue: node withName: @"EndUser"] boolValue];
			self.JobCode = [Soap getNodeValue: node withName: @"JobCode"];
			self.JobDescription = [Soap getNodeValue: node withName: @"JobDescription"];
			self.Label = [Soap getNodeValue: node withName: @"Label"];
			self.PaymentEnabled = [[Soap getNodeValue: node withName: @"PaymentEnabled"] boolValue];
			self.Status = [Soap getNodeValue: node withName: @"Status"];
			self.UnderSupervision = [[Soap getNodeValue: node withName: @"UnderSupervision"] boolValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"DistributorDetail"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.AgentType != nil) [s appendFormat: @"<AgentType>%@</AgentType>", [[self.AgentType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.BusinessUnit != nil) [s appendFormat: @"<BusinessUnit>%@</BusinessUnit>", [[self.BusinessUnit stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CommissionRate != nil) [s appendFormat: @"<CommissionRate>%@</CommissionRate>", [NSString stringWithFormat: @"%@", self.CommissionRate]];
		[s appendFormat: @"<CommissionWithheld>%@</CommissionWithheld>", (self.CommissionWithheld)?@"true":@"false"];
		[s appendFormat: @"<EndUser>%@</EndUser>", (self.EndUser)?@"true":@"false"];
		if (self.JobCode != nil) [s appendFormat: @"<JobCode>%@</JobCode>", [[self.JobCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.JobDescription != nil) [s appendFormat: @"<JobDescription>%@</JobDescription>", [[self.JobDescription stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Label != nil) [s appendFormat: @"<Label>%@</Label>", [[self.Label stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<PaymentEnabled>%@</PaymentEnabled>", (self.PaymentEnabled)?@"true":@"false"];
		if (self.Status != nil) [s appendFormat: @"<Status>%@</Status>", [[self.Status stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<UnderSupervision>%@</UnderSupervision>", (self.UnderSupervision)?@"true":@"false"];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCDistributorDetail class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
