/*
	CSCClaimParty.h
	The implementation of properties and methods for the CSCClaimParty object.
	Generated by SudzC.com
*/
#import "CSCClaimParty.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
#import "CSCArrayOfClaimParty.h"
#import "CSCClaimVictim.h"
#import "CSCEMailAddress.h"
#import "CSCExpert.h"
#import "CSCHealthParty.h"
#import "CSCInsurer.h"
#import "CSCLegalParty.h"
#import "CSCOrganization.h"
#import "CSCPerson.h"
#import "CSCPhoneAddress.h"
#import "CSCPostalAddress.h"
#import "CSCRepairer.h"
#import "CSCClaimParty.h"
#import "CSCArrayOfString.h"
@implementation CSCClaimParty
	@synthesize DisplayId = _DisplayId;
	@synthesize EffectiveDate = _EffectiveDate;
	@synthesize EndDate = _EndDate;
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize StartDate = _StartDate;
	@synthesize CarRegistration = _CarRegistration;
	@synthesize ClaimEventIdentifier = _ClaimEventIdentifier;
	@synthesize ClaimPartyList = _ClaimPartyList;
	@synthesize ClaimVictim = _ClaimVictim;
	@synthesize ContractNumber = _ContractNumber;
	@synthesize EMailAddress = _EMailAddress;
	@synthesize Expert = _Expert;
	@synthesize FolderIdentifier = _FolderIdentifier;
	@synthesize FullName = _FullName;
	@synthesize HealthParty = _HealthParty;
	@synthesize InjurySeverity = _InjurySeverity;
	@synthesize Insurer = _Insurer;
	@synthesize LegalParty = _LegalParty;
	@synthesize Organization = _Organization;
	@synthesize Person = _Person;
	@synthesize PhoneAddress = _PhoneAddress;
	@synthesize PostalAddress = _PostalAddress;
	@synthesize Repairer = _Repairer;
	@synthesize RoleCode = _RoleCode;
	@synthesize RoleCodeDetail = _RoleCodeDetail;
	@synthesize SourceClaimParty = _SourceClaimParty;
	@synthesize Text = _Text;

	- (id) init
	{
		if(self = [super init])
		{
			self.DisplayId = nil;
			self.EffectiveDate = nil;
			self.EndDate = nil;
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.StartDate = nil;
			self.CarRegistration = nil;
			self.ClaimEventIdentifier = nil;
			self.ClaimPartyList = [[NSMutableArray alloc] init];
			self.ClaimVictim = nil; // [[CSCClaimVictim alloc] init];
			self.ContractNumber = nil;
			self.EMailAddress = nil; // [[CSCEMailAddress alloc] init];
			self.Expert = nil; // [[CSCExpert alloc] init];
			self.FolderIdentifier = nil;
			self.FullName = nil;
			self.HealthParty = nil; // [[CSCHealthParty alloc] init];
			self.InjurySeverity = nil;
			self.Insurer = nil; // [[CSCInsurer alloc] init];
			self.LegalParty = nil; // [[CSCLegalParty alloc] init];
			self.Organization = nil; // [[CSCOrganization alloc] init];
			self.Person = nil; // [[CSCPerson alloc] init];
			self.PhoneAddress = nil; // [[CSCPhoneAddress alloc] init];
			self.PostalAddress = nil; // [[CSCPostalAddress alloc] init];
			self.Repairer = nil; // [[CSCRepairer alloc] init];
			self.RoleCode = nil;
			self.RoleCodeDetail = nil;
			self.SourceClaimParty = nil; // [[CSCClaimParty alloc] init];
			self.Text = [[NSMutableArray alloc] init];

		}
		return self;
	}

	+ (CSCClaimParty*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCClaimParty*)[[CSCClaimParty alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.DisplayId = [Soap getNodeValue: node withName: @"DisplayId"];
			self.EffectiveDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EffectiveDate"]];
			self.EndDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EndDate"]];
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.StartDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"StartDate"]];
			self.CarRegistration = [Soap getNodeValue: node withName: @"CarRegistration"];
			self.ClaimEventIdentifier = [Soap getNodeValue: node withName: @"ClaimEventIdentifier"];
			self.ClaimPartyList = [[CSCArrayOfClaimParty createWithNode: [Soap getNode: node withName: @"ClaimPartyList"]] object];
			self.ClaimVictim = [[CSCClaimVictim createWithNode: [Soap getNode: node withName: @"ClaimVictim"]] object];
			self.ContractNumber = [Soap getNodeValue: node withName: @"ContractNumber"];
			self.EMailAddress = [[CSCEMailAddress createWithNode: [Soap getNode: node withName: @"EMailAddress"]] object];
			self.Expert = [[CSCExpert createWithNode: [Soap getNode: node withName: @"Expert"]] object];
			self.FolderIdentifier = [Soap getNodeValue: node withName: @"FolderIdentifier"];
			self.FullName = [Soap getNodeValue: node withName: @"FullName"];
			self.HealthParty = [[CSCHealthParty createWithNode: [Soap getNode: node withName: @"HealthParty"]] object];
			self.InjurySeverity = [Soap getNodeValue: node withName: @"InjurySeverity"];
			self.Insurer = [[CSCInsurer createWithNode: [Soap getNode: node withName: @"Insurer"]] object];
			self.LegalParty = [[CSCLegalParty createWithNode: [Soap getNode: node withName: @"LegalParty"]] object];
			self.Organization = [[CSCOrganization createWithNode: [Soap getNode: node withName: @"Organization"]] object];
			self.Person = [[CSCPerson createWithNode: [Soap getNode: node withName: @"Person"]] object];
			self.PhoneAddress = [[CSCPhoneAddress createWithNode: [Soap getNode: node withName: @"PhoneAddress"]] object];
			self.PostalAddress = [[CSCPostalAddress createWithNode: [Soap getNode: node withName: @"PostalAddress"]] object];
			self.Repairer = [[CSCRepairer createWithNode: [Soap getNode: node withName: @"Repairer"]] object];
			self.RoleCode = [Soap getNodeValue: node withName: @"RoleCode"];
			self.RoleCodeDetail = [Soap getNodeValue: node withName: @"RoleCodeDetail"];
			self.SourceClaimParty = [[CSCClaimParty createWithNode: [Soap getNode: node withName: @"SourceClaimParty"]] object];
			self.Text = [[CSCArrayOfString createWithNode: [Soap getNode: node withName: @"Text"]] object];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"ClaimParty"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.DisplayId != nil) [s appendFormat: @"<DisplayId>%@</DisplayId>", [[self.DisplayId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EffectiveDate != nil) [s appendFormat: @"<EffectiveDate>%@</EffectiveDate>", [Soap getDateString: self.EffectiveDate]];
		if (self.EndDate != nil) [s appendFormat: @"<EndDate>%@</EndDate>", [Soap getDateString: self.EndDate]];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.StartDate != nil) [s appendFormat: @"<StartDate>%@</StartDate>", [Soap getDateString: self.StartDate]];
		if (self.CarRegistration != nil) [s appendFormat: @"<CarRegistration>%@</CarRegistration>", [[self.CarRegistration stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ClaimEventIdentifier != nil) [s appendFormat: @"<ClaimEventIdentifier>%@</ClaimEventIdentifier>", [[self.ClaimEventIdentifier stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ClaimPartyList != nil && self.ClaimPartyList.count > 0) {
			[s appendFormat: @"<ClaimPartyList>%@</ClaimPartyList>", [CSCArrayOfClaimParty serialize: self.ClaimPartyList]];
		} else {
			[s appendString: @"<ClaimPartyList/>"];
		}
		if (self.ClaimVictim != nil) [s appendString: [self.ClaimVictim serialize: @"ClaimVictim"]];
		if (self.ContractNumber != nil) [s appendFormat: @"<ContractNumber>%@</ContractNumber>", [[self.ContractNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EMailAddress != nil) [s appendString: [self.EMailAddress serialize: @"EMailAddress"]];
		if (self.Expert != nil) [s appendString: [self.Expert serialize: @"Expert"]];
		if (self.FolderIdentifier != nil) [s appendFormat: @"<FolderIdentifier>%@</FolderIdentifier>", [[self.FolderIdentifier stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.FullName != nil) [s appendFormat: @"<FullName>%@</FullName>", [[self.FullName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.HealthParty != nil) [s appendString: [self.HealthParty serialize: @"HealthParty"]];
		if (self.InjurySeverity != nil) [s appendFormat: @"<InjurySeverity>%@</InjurySeverity>", [[self.InjurySeverity stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Insurer != nil) [s appendString: [self.Insurer serialize: @"Insurer"]];
		if (self.LegalParty != nil) [s appendString: [self.LegalParty serialize: @"LegalParty"]];
		if (self.Organization != nil) [s appendString: [self.Organization serialize: @"Organization"]];
		if (self.Person != nil) [s appendString: [self.Person serialize: @"Person"]];
		if (self.PhoneAddress != nil) [s appendString: [self.PhoneAddress serialize: @"PhoneAddress"]];
		if (self.PostalAddress != nil) [s appendString: [self.PostalAddress serialize: @"PostalAddress"]];
		if (self.Repairer != nil) [s appendString: [self.Repairer serialize: @"Repairer"]];
		if (self.RoleCode != nil) [s appendFormat: @"<RoleCode>%@</RoleCode>", [[self.RoleCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.RoleCodeDetail != nil) [s appendFormat: @"<RoleCodeDetail>%@</RoleCodeDetail>", [[self.RoleCodeDetail stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.SourceClaimParty != nil) [s appendString: [self.SourceClaimParty serialize: @"SourceClaimParty"]];
		if (self.Text != nil && self.Text.count > 0) {
			[s appendFormat: @"<Text>%@</Text>", [CSCArrayOfString serialize: self.Text]];
		} else {
			[s appendString: @"<Text/>"];
		}

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCClaimParty class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
