/*
	CSCOrganizationDetail.h
	The implementation of properties and methods for the CSCOrganizationDetail object.
	Generated by SudzC.com
*/
#import "CSCOrganizationDetail.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
@implementation CSCOrganizationDetail
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize BaseCollectiveAgreement = _BaseCollectiveAgreement;
	@synthesize CollectiveAgreement = _CollectiveAgreement;
	@synthesize FondationCountryCode = _FondationCountryCode;
	@synthesize FondationDate = _FondationDate;
	@synthesize IndicateurRCS = _IndicateurRCS;
	@synthesize IndicateurRM = _IndicateurRM;
	@synthesize MajorAccount = _MajorAccount;
	@synthesize SiteHazard = _SiteHazard;
	@synthesize SiteHazardLabel = _SiteHazardLabel;

	- (id) init
	{
		if(self = [super init])
		{
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.BaseCollectiveAgreement = nil;
			self.CollectiveAgreement = nil;
			self.FondationCountryCode = nil;
			self.FondationDate = nil;
			self.SiteHazard = nil;
			self.SiteHazardLabel = nil;

		}
		return self;
	}

	+ (CSCOrganizationDetail*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCOrganizationDetail*)[[CSCOrganizationDetail alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.BaseCollectiveAgreement = [Soap getNodeValue: node withName: @"BaseCollectiveAgreement"];
			self.CollectiveAgreement = [Soap getNodeValue: node withName: @"CollectiveAgreement"];
			self.FondationCountryCode = [Soap getNodeValue: node withName: @"FondationCountryCode"];
			self.FondationDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"FondationDate"]];
			self.IndicateurRCS = [[Soap getNodeValue: node withName: @"IndicateurRCS"] boolValue];
			self.IndicateurRM = [[Soap getNodeValue: node withName: @"IndicateurRM"] boolValue];
			self.MajorAccount = [[Soap getNodeValue: node withName: @"MajorAccount"] boolValue];
			self.SiteHazard = [Soap getNodeValue: node withName: @"SiteHazard"];
			self.SiteHazardLabel = [Soap getNodeValue: node withName: @"SiteHazardLabel"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"OrganizationDetail"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.BaseCollectiveAgreement != nil) [s appendFormat: @"<BaseCollectiveAgreement>%@</BaseCollectiveAgreement>", [[self.BaseCollectiveAgreement stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CollectiveAgreement != nil) [s appendFormat: @"<CollectiveAgreement>%@</CollectiveAgreement>", [[self.CollectiveAgreement stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.FondationCountryCode != nil) [s appendFormat: @"<FondationCountryCode>%@</FondationCountryCode>", [[self.FondationCountryCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.FondationDate != nil) [s appendFormat: @"<FondationDate>%@</FondationDate>", [Soap getDateString: self.FondationDate]];
		[s appendFormat: @"<IndicateurRCS>%@</IndicateurRCS>", (self.IndicateurRCS)?@"true":@"false"];
		[s appendFormat: @"<IndicateurRM>%@</IndicateurRM>", (self.IndicateurRM)?@"true":@"false"];
		[s appendFormat: @"<MajorAccount>%@</MajorAccount>", (self.MajorAccount)?@"true":@"false"];
		if (self.SiteHazard != nil) [s appendFormat: @"<SiteHazard>%@</SiteHazard>", [[self.SiteHazard stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.SiteHazardLabel != nil) [s appendFormat: @"<SiteHazardLabel>%@</SiteHazardLabel>", [[self.SiteHazardLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCOrganizationDetail class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
