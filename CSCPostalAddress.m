/*
	CSCPostalAddress.h
	The implementation of properties and methods for the CSCPostalAddress object.
	Generated by SudzC.com
*/
#import "CSCPostalAddress.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
#import "CSCOrganization.h"
#import "CSCPerson.h"
#import "CSCArrayOfPhoneAddress.h"
@implementation CSCPostalAddress
	@synthesize DisplayId = _DisplayId;
	@synthesize EffectiveDate = _EffectiveDate;
	@synthesize EndDate = _EndDate;
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize StartDate = _StartDate;
	@synthesize AddressCategory = _AddressCategory;
	@synthesize AddressCategoryLabel = _AddressCategoryLabel;
	@synthesize AddressIdentifier = _AddressIdentifier;
	@synthesize Confidential = _Confidential;
	@synthesize Invalid = _Invalid;
	@synthesize Organization = _Organization;
	@synthesize Person = _Person;
	@synthesize Preferred = _Preferred;
	@synthesize CountryCode = _CountryCode;
	@synthesize AddresseeName = _AddresseeName;
	@synthesize Apartment = _Apartment;
	@synthesize Building = _Building;
	@synthesize CityCode = _CityCode;
	@synthesize CityName = _CityName;
	@synthesize CountyName = _CountyName;
	@synthesize DistrictLine = _DistrictLine;
	@synthesize GeographicalZoneName = _GeographicalZoneName;
	@synthesize House = _House;
	@synthesize INSEECode = _INSEECode;
	@synthesize LocalName = _LocalName;
	@synthesize POBox = _POBox;
	@synthesize PhoneList = _PhoneList;
	@synthesize PostalCode = _PostalCode;
	@synthesize ResidenceLine = _ResidenceLine;
	@synthesize Street = _Street;
	@synthesize StreetLine = _StreetLine;
	@synthesize StreetName = _StreetName;
	@synthesize StreetNumber = _StreetNumber;
	@synthesize StreetNumber2 = _StreetNumber2;
	@synthesize StreetType = _StreetType;
	@synthesize TaxAddress = _TaxAddress;
	@synthesize Text = _Text;
	@synthesize Type = _Type;
	@synthesize TypeLabel = _TypeLabel;

	- (id) init
	{
		if(self = [super init])
		{
			self.DisplayId = nil;
			self.EffectiveDate = nil;
			self.EndDate = nil;
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.StartDate = nil;
			self.AddressCategory = nil;
			self.AddressCategoryLabel = nil;
			self.AddressIdentifier = nil;
			self.Organization = nil; // [[CSCOrganization alloc] init];
			self.Person = nil; // [[CSCPerson alloc] init];
			self.CountryCode = nil;
			self.AddresseeName = nil;
			self.Apartment = nil;
			self.Building = nil;
			self.CityCode = nil;
			self.CityName = nil;
			self.CountyName = nil;
			self.DistrictLine = nil;
			self.GeographicalZoneName = nil;
			self.House = nil;
			self.INSEECode = nil;
			self.LocalName = nil;
			self.POBox = nil;
			self.PhoneList = [[NSMutableArray alloc] init];
			self.PostalCode = nil;
			self.ResidenceLine = nil;
			self.Street = nil;
			self.StreetLine = nil;
			self.StreetName = nil;
			self.StreetNumber = nil;
			self.StreetNumber2 = nil;
			self.StreetType = nil;
			self.Text = nil;
			self.Type = nil;
			self.TypeLabel = nil;

		}
		return self;
	}

	+ (CSCPostalAddress*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCPostalAddress*)[[CSCPostalAddress alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.DisplayId = [Soap getNodeValue: node withName: @"DisplayId"];
			self.EffectiveDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EffectiveDate"]];
			self.EndDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EndDate"]];
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.StartDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"StartDate"]];
			self.AddressCategory = [Soap getNodeValue: node withName: @"AddressCategory"];
			self.AddressCategoryLabel = [Soap getNodeValue: node withName: @"AddressCategoryLabel"];
			self.AddressIdentifier = [Soap getNodeValue: node withName: @"AddressIdentifier"];
			self.Confidential = [[Soap getNodeValue: node withName: @"Confidential"] boolValue];
			self.Invalid = [[Soap getNodeValue: node withName: @"Invalid"] boolValue];
			self.Organization = [[CSCOrganization createWithNode: [Soap getNode: node withName: @"Organization"]] object];
			self.Person = [[CSCPerson createWithNode: [Soap getNode: node withName: @"Person"]] object];
			self.Preferred = [[Soap getNodeValue: node withName: @"Preferred"] boolValue];
			self.CountryCode = [Soap getNodeValue: node withName: @"CountryCode"];
			self.AddresseeName = [Soap getNodeValue: node withName: @"AddresseeName"];
			self.Apartment = [Soap getNodeValue: node withName: @"Apartment"];
			self.Building = [Soap getNodeValue: node withName: @"Building"];
			self.CityCode = [Soap getNodeValue: node withName: @"CityCode"];
			self.CityName = [Soap getNodeValue: node withName: @"CityName"];
			self.CountyName = [Soap getNodeValue: node withName: @"CountyName"];
			self.DistrictLine = [Soap getNodeValue: node withName: @"DistrictLine"];
			self.GeographicalZoneName = [Soap getNodeValue: node withName: @"GeographicalZoneName"];
			self.House = [Soap getNodeValue: node withName: @"House"];
			self.INSEECode = [Soap getNodeValue: node withName: @"INSEECode"];
			self.LocalName = [Soap getNodeValue: node withName: @"LocalName"];
			self.POBox = [Soap getNodeValue: node withName: @"POBox"];
			self.PhoneList = [[CSCArrayOfPhoneAddress createWithNode: [Soap getNode: node withName: @"PhoneList"]] object];
			self.PostalCode = [Soap getNodeValue: node withName: @"PostalCode"];
			self.ResidenceLine = [Soap getNodeValue: node withName: @"ResidenceLine"];
			self.Street = [Soap getNodeValue: node withName: @"Street"];
			self.StreetLine = [Soap getNodeValue: node withName: @"StreetLine"];
			self.StreetName = [Soap getNodeValue: node withName: @"StreetName"];
			self.StreetNumber = [Soap getNodeValue: node withName: @"StreetNumber"];
			self.StreetNumber2 = [Soap getNodeValue: node withName: @"StreetNumber2"];
			self.StreetType = [Soap getNodeValue: node withName: @"StreetType"];
			self.TaxAddress = [[Soap getNodeValue: node withName: @"TaxAddress"] boolValue];
			self.Text = [Soap getNodeValue: node withName: @"Text"];
			self.Type = [Soap getNodeValue: node withName: @"Type"];
			self.TypeLabel = [Soap getNodeValue: node withName: @"TypeLabel"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"PostalAddress"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.DisplayId != nil) [s appendFormat: @"<DisplayId>%@</DisplayId>", [[self.DisplayId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EffectiveDate != nil) [s appendFormat: @"<EffectiveDate>%@</EffectiveDate>", [Soap getDateString: self.EffectiveDate]];
		if (self.EndDate != nil) [s appendFormat: @"<EndDate>%@</EndDate>", [Soap getDateString: self.EndDate]];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.StartDate != nil) [s appendFormat: @"<StartDate>%@</StartDate>", [Soap getDateString: self.StartDate]];
		if (self.AddressCategory != nil) [s appendFormat: @"<AddressCategory>%@</AddressCategory>", [[self.AddressCategory stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.AddressCategoryLabel != nil) [s appendFormat: @"<AddressCategoryLabel>%@</AddressCategoryLabel>", [[self.AddressCategoryLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.AddressIdentifier != nil) [s appendFormat: @"<AddressIdentifier>%@</AddressIdentifier>", [[self.AddressIdentifier stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<Confidential>%@</Confidential>", (self.Confidential)?@"true":@"false"];
		[s appendFormat: @"<Invalid>%@</Invalid>", (self.Invalid)?@"true":@"false"];
		if (self.Organization != nil) [s appendString: [self.Organization serialize: @"Organization"]];
		if (self.Person != nil) [s appendString: [self.Person serialize: @"Person"]];
		[s appendFormat: @"<Preferred>%@</Preferred>", (self.Preferred)?@"true":@"false"];
		if (self.CountryCode != nil) [s appendFormat: @"<CountryCode>%@</CountryCode>", [[self.CountryCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.AddresseeName != nil) [s appendFormat: @"<AddresseeName>%@</AddresseeName>", [[self.AddresseeName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Apartment != nil) [s appendFormat: @"<Apartment>%@</Apartment>", [[self.Apartment stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Building != nil) [s appendFormat: @"<Building>%@</Building>", [[self.Building stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CityCode != nil) [s appendFormat: @"<CityCode>%@</CityCode>", [[self.CityCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CityName != nil) [s appendFormat: @"<CityName>%@</CityName>", [[self.CityName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CountyName != nil) [s appendFormat: @"<CountyName>%@</CountyName>", [[self.CountyName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.DistrictLine != nil) [s appendFormat: @"<DistrictLine>%@</DistrictLine>", [[self.DistrictLine stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.GeographicalZoneName != nil) [s appendFormat: @"<GeographicalZoneName>%@</GeographicalZoneName>", [[self.GeographicalZoneName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.House != nil) [s appendFormat: @"<House>%@</House>", [[self.House stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.INSEECode != nil) [s appendFormat: @"<INSEECode>%@</INSEECode>", [[self.INSEECode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.LocalName != nil) [s appendFormat: @"<LocalName>%@</LocalName>", [[self.LocalName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.POBox != nil) [s appendFormat: @"<POBox>%@</POBox>", [[self.POBox stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.PhoneList != nil && self.PhoneList.count > 0) {
			[s appendFormat: @"<PhoneList>%@</PhoneList>", [CSCArrayOfPhoneAddress serialize: self.PhoneList]];
		} else {
			[s appendString: @"<PhoneList/>"];
		}
		if (self.PostalCode != nil) [s appendFormat: @"<PostalCode>%@</PostalCode>", [[self.PostalCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ResidenceLine != nil) [s appendFormat: @"<ResidenceLine>%@</ResidenceLine>", [[self.ResidenceLine stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Street != nil) [s appendFormat: @"<Street>%@</Street>", [[self.Street stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.StreetLine != nil) [s appendFormat: @"<StreetLine>%@</StreetLine>", [[self.StreetLine stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.StreetName != nil) [s appendFormat: @"<StreetName>%@</StreetName>", [[self.StreetName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.StreetNumber != nil) [s appendFormat: @"<StreetNumber>%@</StreetNumber>", [[self.StreetNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.StreetNumber2 != nil) [s appendFormat: @"<StreetNumber2>%@</StreetNumber2>", [[self.StreetNumber2 stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.StreetType != nil) [s appendFormat: @"<StreetType>%@</StreetType>", [[self.StreetType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<TaxAddress>%@</TaxAddress>", (self.TaxAddress)?@"true":@"false"];
		if (self.Text != nil) [s appendFormat: @"<Text>%@</Text>", [[self.Text stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Type != nil) [s appendFormat: @"<Type>%@</Type>", [[self.Type stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.TypeLabel != nil) [s appendFormat: @"<TypeLabel>%@</TypeLabel>", [[self.TypeLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCPostalAddress class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
