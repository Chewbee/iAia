/*
	CSCError.h
	The implementation of properties and methods for the CSCError object.
	Generated by SudzC.com
*/
#import "CSCError.h"

#import "CSCArrayOfString.h"
@implementation CSCError
	@synthesize Code = _Code;
	@synthesize Level = _Level;
	@synthesize Message = _Message;
	@synthesize MessageDetailList = _MessageDetailList;
	@synthesize Source = _Source;

	- (id) init
	{
		if(self = [super init])
		{
			self.Code = nil;
			self.Level = nil;
			self.Message = nil;
			self.MessageDetailList = [[NSMutableArray alloc] init];
			self.Source = nil;

		}
		return self;
	}

	+ (CSCError*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCError*)[[CSCError alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Code = [Soap getNodeValue: node withName: @"Code"];
			self.Level = [Soap getNodeValue: node withName: @"Level"];
			self.Message = [Soap getNodeValue: node withName: @"Message"];
			self.MessageDetailList = [[CSCArrayOfString createWithNode: [Soap getNode: node withName: @"MessageDetailList"]] object];
			self.Source = [Soap getNodeValue: node withName: @"Source"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Error"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Code != nil) [s appendFormat: @"<Code>%@</Code>", [[self.Code stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Level != nil) [s appendFormat: @"<Level>%@</Level>", [[self.Level stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Message != nil) [s appendFormat: @"<Message>%@</Message>", [[self.Message stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.MessageDetailList != nil && self.MessageDetailList.count > 0) {
			[s appendFormat: @"<MessageDetailList>%@</MessageDetailList>", [CSCArrayOfString serialize: self.MessageDetailList]];
		} else {
			[s appendString: @"<MessageDetailList/>"];
		}
		if (self.Source != nil) [s appendFormat: @"<Source>%@</Source>", [[self.Source stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCError class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
