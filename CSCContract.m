/*
	CSCContract.h
	The implementation of properties and methods for the CSCContract object.
	Generated by SudzC.com
*/
#import "CSCContract.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
#import "CSCArrayOfBilling.h"
#import "CSCArrayOfClause.h"
#import "CSCPeriod.h"
#import "CSCArrayOfCoverageFund.h"
#import "CSCArrayOfCoverage.h"
#import "CSCDuration.h"
#import "CSCArrayOfFeesOverride.h"
#import "CSCArrayOfFinancialActivity.h"
#import "CSCArrayOfFinancialOption.h"
#import "CSCArrayOfGeneralConditions.h"
#import "CSCIndexation.h"
#import "CSCIndicators.h"
#import "CSCArrayOfInsuredGroup.h"
#import "CSCLoanAccount.h"
#import "CSCMedicalFolder.h"
#import "CSCArrayOfOperation.h"
#import "CSCArrayOfPackage.h"
#import "CSCArrayOfPremiumAdjustment.h"
#import "CSCProductOption.h"
#import "CSCArrayOfPartyRole.h"
#import "CSCTaxSystem.h"
#import "CSCTaxes.h"
@implementation CSCContract
	@synthesize DisplayId = _DisplayId;
	@synthesize EffectiveDate = _EffectiveDate;
	@synthesize EndDate = _EndDate;
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize StartDate = _StartDate;
	@synthesize AmendmentNo = _AmendmentNo;
	@synthesize AnnualNetPremium = _AnnualNetPremium;
	@synthesize AnnualPremium = _AnnualPremium;
	@synthesize BankSignatureDate = _BankSignatureDate;
	@synthesize BillingList = _BillingList;
	@synthesize ClauseList = _ClauseList;
	@synthesize CommissionReductionFactor = _CommissionReductionFactor;
	@synthesize CommissionReductionPeriod = _CommissionReductionPeriod;
	@synthesize CommissionType = _CommissionType;
	@synthesize CommonRatingTable = _CommonRatingTable;
	@synthesize ContinuationFunding = _ContinuationFunding;
	@synthesize CoverageFundList = _CoverageFundList;
	@synthesize CoverageList = _CoverageList;
	@synthesize CurrencyCode = _CurrencyCode;
	@synthesize DeferredDividend = _DeferredDividend;
	@synthesize DirectPaymentLock = _DirectPaymentLock;
	@synthesize DirectPaymentLockDate = _DirectPaymentLockDate;
	@synthesize DirectPaymentLockMotive = _DirectPaymentLockMotive;
	@synthesize DividingUp = _DividingUp;
	@synthesize Duration = _Duration;
	@synthesize EntryFees = _EntryFees;
	@synthesize ExternalNumber = _ExternalNumber;
	@synthesize Fees = _Fees;
	@synthesize FeesOverrideList = _FeesOverrideList;
	@synthesize FinancialActivityList = _FinancialActivityList;
	@synthesize FinancialOptionList = _FinancialOptionList;
	@synthesize FormerInsurer = _FormerInsurer;
	@synthesize GeneralConditionsList = _GeneralConditionsList;
	@synthesize GlobalRegularPremium = _GlobalRegularPremium;
	@synthesize Indexation = _Indexation;
	@synthesize Indicators = _Indicators;
	@synthesize InsuranceType = _InsuranceType;
	@synthesize InsuredGroupList = _InsuredGroupList;
	@synthesize InsurerEmployee = _InsurerEmployee;
	@synthesize InvestmentType = _InvestmentType;
	@synthesize LoanAccount = _LoanAccount;
	@synthesize MainContractNumber = _MainContractNumber;
	@synthesize Mandatory = _Mandatory;
	@synthesize MarketingCode = _MarketingCode;
	@synthesize MaximumAge = _MaximumAge;
	@synthesize MaximumInsuredNumber = _MaximumInsuredNumber;
	@synthesize MedicalFolder = _MedicalFolder;
	@synthesize MembershipFees = _MembershipFees;
	@synthesize MinimumAge = _MinimumAge;
	@synthesize MinimumAnnualPayment = _MinimumAnnualPayment;
	@synthesize Number = _Number;
	@synthesize OperationList = _OperationList;
	@synthesize PackageList = _PackageList;
	@synthesize PostalStampDate = _PostalStampDate;
	@synthesize PremiumAdjustmentList = _PremiumAdjustmentList;
	@synthesize PreviousNumber = _PreviousNumber;
	@synthesize ProductIdentifier = _ProductIdentifier;
	@synthesize ProductLabel = _ProductLabel;
	@synthesize ProductName = _ProductName;
	@synthesize ProductOption = _ProductOption;
	@synthesize ProductType = _ProductType;
	@synthesize ProductTypeLabel = _ProductTypeLabel;
	@synthesize ProposalNumber = _ProposalNumber;
	@synthesize PropositionStatus = _PropositionStatus;
	@synthesize ReceivedDate = _ReceivedDate;
	@synthesize Recovery = _Recovery;
	@synthesize RenewalDate = _RenewalDate;
	@synthesize RenewalNumber = _RenewalNumber;
	@synthesize RetirementAge = _RetirementAge;
	@synthesize RetirementDate = _RetirementDate;
	@synthesize RoleList = _RoleList;
	@synthesize SignatureDate = _SignatureDate;
	@synthesize SourceNumber = _SourceNumber;
	@synthesize Status = _Status;
	@synthesize StatusDate = _StatusDate;
	@synthesize StatusLabel = _StatusLabel;
	@synthesize StatusMotive = _StatusMotive;
	@synthesize SurrenderNetValue = _SurrenderNetValue;
	@synthesize SurrenderValue = _SurrenderValue;
	@synthesize TaxType = _TaxType;
	@synthesize Taxes = _Taxes;
	@synthesize Term = _Term;
	@synthesize TotalAdditionalPremium = _TotalAdditionalPremium;
	@synthesize TotalAvailableSaving = _TotalAvailableSaving;
	@synthesize TotalCashValue = _TotalCashValue;
	@synthesize TotalInitialPremium = _TotalInitialPremium;
	@synthesize TotalNetPartialSurrender = _TotalNetPartialSurrender;
	@synthesize TotalNetPremium = _TotalNetPremium;
	@synthesize TotalPartialSurrender = _TotalPartialSurrender;
	@synthesize TotalPendingAllocation = _TotalPendingAllocation;
	@synthesize TotalPremium = _TotalPremium;
	@synthesize TotalPremiumByDeduction = _TotalPremiumByDeduction;
	@synthesize TotalUnavailableSaving = _TotalUnavailableSaving;
	@synthesize TransferDate = _TransferDate;

	- (id) init
	{
		if(self = [super init])
		{
			self.DisplayId = nil;
			self.EffectiveDate = nil;
			self.EndDate = nil;
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.StartDate = nil;
			self.AnnualNetPremium = nil;
			self.AnnualPremium = nil;
			self.BankSignatureDate = nil;
			self.BillingList = [[NSMutableArray alloc] init];
			self.ClauseList = [[NSMutableArray alloc] init];
			self.CommissionReductionFactor = nil;
			self.CommissionReductionPeriod = nil; // [[CSCPeriod alloc] init];
			self.CommissionType = nil;
			self.CommonRatingTable = nil;
			self.ContinuationFunding = nil;
			self.CoverageFundList = [[NSMutableArray alloc] init];
			self.CoverageList = [[NSMutableArray alloc] init];
			self.CurrencyCode = nil;
			self.DeferredDividend = nil;
			self.DirectPaymentLockDate = nil;
			self.DirectPaymentLockMotive = nil;
			self.Duration = nil; // [[CSCDuration alloc] init];
			self.EntryFees = nil;
			self.ExternalNumber = nil;
			self.Fees = nil;
			self.FeesOverrideList = [[NSMutableArray alloc] init];
			self.FinancialActivityList = [[NSMutableArray alloc] init];
			self.FinancialOptionList = [[NSMutableArray alloc] init];
			self.FormerInsurer = nil;
			self.GeneralConditionsList = [[NSMutableArray alloc] init];
			self.GlobalRegularPremium = nil;
			self.Indexation = nil; // [[CSCIndexation alloc] init];
			self.Indicators = nil; // [[CSCIndicators alloc] init];
			self.InsuranceType = nil;
			self.InsuredGroupList = [[NSMutableArray alloc] init];
			self.InvestmentType = nil;
			self.LoanAccount = nil; // [[CSCLoanAccount alloc] init];
			self.MainContractNumber = nil;
			self.MarketingCode = nil;
			self.MedicalFolder = nil; // [[CSCMedicalFolder alloc] init];
			self.MembershipFees = nil;
			self.MinimumAnnualPayment = nil;
			self.Number = nil;
			self.OperationList = [[NSMutableArray alloc] init];
			self.PackageList = [[NSMutableArray alloc] init];
			self.PostalStampDate = nil;
			self.PremiumAdjustmentList = [[NSMutableArray alloc] init];
			self.PreviousNumber = nil;
			self.ProductIdentifier = nil;
			self.ProductLabel = nil;
			self.ProductName = nil;
			self.ProductOption = nil; // [[CSCProductOption alloc] init];
			self.ProductType = nil;
			self.ProductTypeLabel = nil;
			self.ProposalNumber = nil;
			self.PropositionStatus = nil;
			self.ReceivedDate = nil;
			self.RenewalDate = nil;
			self.RetirementDate = nil;
			self.RoleList = [[NSMutableArray alloc] init];
			self.SignatureDate = nil;
			self.SourceNumber = nil;
			self.Status = nil;
			self.StatusDate = nil;
			self.StatusLabel = nil;
			self.StatusMotive = nil;
			self.SurrenderNetValue = nil;
			self.SurrenderValue = nil;
			self.TaxType = nil; // [[CSCTaxSystem alloc] init];
			self.Taxes = nil; // [[CSCTaxes alloc] init];
			self.Term = nil;
			self.TotalAdditionalPremium = nil;
			self.TotalAvailableSaving = nil;
			self.TotalCashValue = nil;
			self.TotalInitialPremium = nil;
			self.TotalNetPartialSurrender = nil;
			self.TotalNetPremium = nil;
			self.TotalPartialSurrender = nil;
			self.TotalPendingAllocation = nil;
			self.TotalPremium = nil;
			self.TotalPremiumByDeduction = nil;
			self.TotalUnavailableSaving = nil;
			self.TransferDate = nil;

		}
		return self;
	}

	+ (CSCContract*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCContract*)[[CSCContract alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.DisplayId = [Soap getNodeValue: node withName: @"DisplayId"];
			self.EffectiveDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EffectiveDate"]];
			self.EndDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EndDate"]];
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.StartDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"StartDate"]];
			self.AmendmentNo = [[Soap getNodeValue: node withName: @"AmendmentNo"] intValue];
			self.AnnualNetPremium = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"AnnualNetPremium"]];
			self.AnnualPremium = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"AnnualPremium"]];
			self.BankSignatureDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"BankSignatureDate"]];
			self.BillingList = [[CSCArrayOfBilling createWithNode: [Soap getNode: node withName: @"BillingList"]] object];
			self.ClauseList = [[CSCArrayOfClause createWithNode: [Soap getNode: node withName: @"ClauseList"]] object];
			self.CommissionReductionFactor = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"CommissionReductionFactor"]];
			self.CommissionReductionPeriod = [[CSCPeriod createWithNode: [Soap getNode: node withName: @"CommissionReductionPeriod"]] object];
			self.CommissionType = [Soap getNodeValue: node withName: @"CommissionType"];
			self.CommonRatingTable = [Soap getNodeValue: node withName: @"CommonRatingTable"];
			self.ContinuationFunding = [Soap getNodeValue: node withName: @"ContinuationFunding"];
			self.CoverageFundList = [[CSCArrayOfCoverageFund createWithNode: [Soap getNode: node withName: @"CoverageFundList"]] object];
			self.CoverageList = [[CSCArrayOfCoverage createWithNode: [Soap getNode: node withName: @"CoverageList"]] object];
			self.CurrencyCode = [Soap getNodeValue: node withName: @"CurrencyCode"];
			self.DeferredDividend = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"DeferredDividend"]];
			self.DirectPaymentLock = [[Soap getNodeValue: node withName: @"DirectPaymentLock"] boolValue];
			self.DirectPaymentLockDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"DirectPaymentLockDate"]];
			self.DirectPaymentLockMotive = [Soap getNodeValue: node withName: @"DirectPaymentLockMotive"];
			self.DividingUp = [[Soap getNodeValue: node withName: @"DividingUp"] boolValue];
			self.Duration = [[CSCDuration createWithNode: [Soap getNode: node withName: @"Duration"]] object];
			self.EntryFees = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"EntryFees"]];
			self.ExternalNumber = [Soap getNodeValue: node withName: @"ExternalNumber"];
			self.Fees = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"Fees"]];
			self.FeesOverrideList = [[CSCArrayOfFeesOverride createWithNode: [Soap getNode: node withName: @"FeesOverrideList"]] object];
			self.FinancialActivityList = [[CSCArrayOfFinancialActivity createWithNode: [Soap getNode: node withName: @"FinancialActivityList"]] object];
			self.FinancialOptionList = [[CSCArrayOfFinancialOption createWithNode: [Soap getNode: node withName: @"FinancialOptionList"]] object];
			self.FormerInsurer = [Soap getNodeValue: node withName: @"FormerInsurer"];
			self.GeneralConditionsList = [[CSCArrayOfGeneralConditions createWithNode: [Soap getNode: node withName: @"GeneralConditionsList"]] object];
			self.GlobalRegularPremium = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"GlobalRegularPremium"]];
			self.Indexation = [[CSCIndexation createWithNode: [Soap getNode: node withName: @"Indexation"]] object];
			self.Indicators = [[CSCIndicators createWithNode: [Soap getNode: node withName: @"Indicators"]] object];
			self.InsuranceType = [Soap getNodeValue: node withName: @"InsuranceType"];
			self.InsuredGroupList = [[CSCArrayOfInsuredGroup createWithNode: [Soap getNode: node withName: @"InsuredGroupList"]] object];
			self.InsurerEmployee = [[Soap getNodeValue: node withName: @"InsurerEmployee"] boolValue];
			self.InvestmentType = [Soap getNodeValue: node withName: @"InvestmentType"];
			self.LoanAccount = [[CSCLoanAccount createWithNode: [Soap getNode: node withName: @"LoanAccount"]] object];
			self.MainContractNumber = [Soap getNodeValue: node withName: @"MainContractNumber"];
			self.Mandatory = [[Soap getNodeValue: node withName: @"Mandatory"] boolValue];
			self.MarketingCode = [Soap getNodeValue: node withName: @"MarketingCode"];
			self.MaximumAge = [[Soap getNodeValue: node withName: @"MaximumAge"] intValue];
			self.MaximumInsuredNumber = [[Soap getNodeValue: node withName: @"MaximumInsuredNumber"] intValue];
			self.MedicalFolder = [[CSCMedicalFolder createWithNode: [Soap getNode: node withName: @"MedicalFolder"]] object];
			self.MembershipFees = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"MembershipFees"]];
			self.MinimumAge = [[Soap getNodeValue: node withName: @"MinimumAge"] intValue];
			self.MinimumAnnualPayment = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"MinimumAnnualPayment"]];
			self.Number = [Soap getNodeValue: node withName: @"Number"];
			self.OperationList = [[CSCArrayOfOperation createWithNode: [Soap getNode: node withName: @"OperationList"]] object];
			self.PackageList = [[CSCArrayOfPackage createWithNode: [Soap getNode: node withName: @"PackageList"]] object];
			self.PostalStampDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"PostalStampDate"]];
			self.PremiumAdjustmentList = [[CSCArrayOfPremiumAdjustment createWithNode: [Soap getNode: node withName: @"PremiumAdjustmentList"]] object];
			self.PreviousNumber = [Soap getNodeValue: node withName: @"PreviousNumber"];
			self.ProductIdentifier = [Soap getNodeValue: node withName: @"ProductIdentifier"];
			self.ProductLabel = [Soap getNodeValue: node withName: @"ProductLabel"];
			self.ProductName = [Soap getNodeValue: node withName: @"ProductName"];
			self.ProductOption = [[CSCProductOption createWithNode: [Soap getNode: node withName: @"ProductOption"]] object];
			self.ProductType = [Soap getNodeValue: node withName: @"ProductType"];
			self.ProductTypeLabel = [Soap getNodeValue: node withName: @"ProductTypeLabel"];
			self.ProposalNumber = [Soap getNodeValue: node withName: @"ProposalNumber"];
			self.PropositionStatus = [Soap getNodeValue: node withName: @"PropositionStatus"];
			self.ReceivedDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"ReceivedDate"]];
			self.Recovery = [[Soap getNodeValue: node withName: @"Recovery"] boolValue];
			self.RenewalDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"RenewalDate"]];
			self.RenewalNumber = [[Soap getNodeValue: node withName: @"RenewalNumber"] intValue];
			self.RetirementAge = [[Soap getNodeValue: node withName: @"RetirementAge"] intValue];
			self.RetirementDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"RetirementDate"]];
			self.RoleList = [[CSCArrayOfPartyRole createWithNode: [Soap getNode: node withName: @"RoleList"]] object];
			self.SignatureDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"SignatureDate"]];
			self.SourceNumber = [Soap getNodeValue: node withName: @"SourceNumber"];
			self.Status = [Soap getNodeValue: node withName: @"Status"];
			self.StatusDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"StatusDate"]];
			self.StatusLabel = [Soap getNodeValue: node withName: @"StatusLabel"];
			self.StatusMotive = [Soap getNodeValue: node withName: @"StatusMotive"];
			self.SurrenderNetValue = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"SurrenderNetValue"]];
			self.SurrenderValue = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"SurrenderValue"]];
			self.TaxType = [[CSCTaxSystem createWithNode: [Soap getNode: node withName: @"TaxType"]] object];
			self.Taxes = [[CSCTaxes createWithNode: [Soap getNode: node withName: @"Taxes"]] object];
			self.Term = [Soap getNodeValue: node withName: @"Term"];
			self.TotalAdditionalPremium = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"TotalAdditionalPremium"]];
			self.TotalAvailableSaving = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"TotalAvailableSaving"]];
			self.TotalCashValue = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"TotalCashValue"]];
			self.TotalInitialPremium = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"TotalInitialPremium"]];
			self.TotalNetPartialSurrender = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"TotalNetPartialSurrender"]];
			self.TotalNetPremium = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"TotalNetPremium"]];
			self.TotalPartialSurrender = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"TotalPartialSurrender"]];
			self.TotalPendingAllocation = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"TotalPendingAllocation"]];
			self.TotalPremium = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"TotalPremium"]];
			self.TotalPremiumByDeduction = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"TotalPremiumByDeduction"]];
			self.TotalUnavailableSaving = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"TotalUnavailableSaving"]];
			self.TransferDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"TransferDate"]];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Contract"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.DisplayId != nil) [s appendFormat: @"<DisplayId>%@</DisplayId>", [[self.DisplayId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EffectiveDate != nil) [s appendFormat: @"<EffectiveDate>%@</EffectiveDate>", [Soap getDateString: self.EffectiveDate]];
		if (self.EndDate != nil) [s appendFormat: @"<EndDate>%@</EndDate>", [Soap getDateString: self.EndDate]];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.StartDate != nil) [s appendFormat: @"<StartDate>%@</StartDate>", [Soap getDateString: self.StartDate]];
		[s appendFormat: @"<AmendmentNo>%@</AmendmentNo>", [NSString stringWithFormat: @"%i", self.AmendmentNo]];
		if (self.AnnualNetPremium != nil) [s appendFormat: @"<AnnualNetPremium>%@</AnnualNetPremium>", [NSString stringWithFormat: @"%@", self.AnnualNetPremium]];
		if (self.AnnualPremium != nil) [s appendFormat: @"<AnnualPremium>%@</AnnualPremium>", [NSString stringWithFormat: @"%@", self.AnnualPremium]];
		if (self.BankSignatureDate != nil) [s appendFormat: @"<BankSignatureDate>%@</BankSignatureDate>", [Soap getDateString: self.BankSignatureDate]];
		if (self.BillingList != nil && self.BillingList.count > 0) {
			[s appendFormat: @"<BillingList>%@</BillingList>", [CSCArrayOfBilling serialize: self.BillingList]];
		} else {
			[s appendString: @"<BillingList/>"];
		}
		if (self.ClauseList != nil && self.ClauseList.count > 0) {
			[s appendFormat: @"<ClauseList>%@</ClauseList>", [CSCArrayOfClause serialize: self.ClauseList]];
		} else {
			[s appendString: @"<ClauseList/>"];
		}
		if (self.CommissionReductionFactor != nil) [s appendFormat: @"<CommissionReductionFactor>%@</CommissionReductionFactor>", [NSString stringWithFormat: @"%@", self.CommissionReductionFactor]];
		if (self.CommissionReductionPeriod != nil) [s appendString: [self.CommissionReductionPeriod serialize: @"CommissionReductionPeriod"]];
		if (self.CommissionType != nil) [s appendFormat: @"<CommissionType>%@</CommissionType>", [[self.CommissionType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CommonRatingTable != nil) [s appendFormat: @"<CommonRatingTable>%@</CommonRatingTable>", [[self.CommonRatingTable stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ContinuationFunding != nil) [s appendFormat: @"<ContinuationFunding>%@</ContinuationFunding>", [[self.ContinuationFunding stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CoverageFundList != nil && self.CoverageFundList.count > 0) {
			[s appendFormat: @"<CoverageFundList>%@</CoverageFundList>", [CSCArrayOfCoverageFund serialize: self.CoverageFundList]];
		} else {
			[s appendString: @"<CoverageFundList/>"];
		}
		if (self.CoverageList != nil && self.CoverageList.count > 0) {
			[s appendFormat: @"<CoverageList>%@</CoverageList>", [CSCArrayOfCoverage serialize: self.CoverageList]];
		} else {
			[s appendString: @"<CoverageList/>"];
		}
		if (self.CurrencyCode != nil) [s appendFormat: @"<CurrencyCode>%@</CurrencyCode>", [[self.CurrencyCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.DeferredDividend != nil) [s appendFormat: @"<DeferredDividend>%@</DeferredDividend>", [NSString stringWithFormat: @"%@", self.DeferredDividend]];
		[s appendFormat: @"<DirectPaymentLock>%@</DirectPaymentLock>", (self.DirectPaymentLock)?@"true":@"false"];
		if (self.DirectPaymentLockDate != nil) [s appendFormat: @"<DirectPaymentLockDate>%@</DirectPaymentLockDate>", [Soap getDateString: self.DirectPaymentLockDate]];
		if (self.DirectPaymentLockMotive != nil) [s appendFormat: @"<DirectPaymentLockMotive>%@</DirectPaymentLockMotive>", [[self.DirectPaymentLockMotive stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<DividingUp>%@</DividingUp>", (self.DividingUp)?@"true":@"false"];
		if (self.Duration != nil) [s appendString: [self.Duration serialize: @"Duration"]];
		if (self.EntryFees != nil) [s appendFormat: @"<EntryFees>%@</EntryFees>", [NSString stringWithFormat: @"%@", self.EntryFees]];
		if (self.ExternalNumber != nil) [s appendFormat: @"<ExternalNumber>%@</ExternalNumber>", [[self.ExternalNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Fees != nil) [s appendFormat: @"<Fees>%@</Fees>", [NSString stringWithFormat: @"%@", self.Fees]];
		if (self.FeesOverrideList != nil && self.FeesOverrideList.count > 0) {
			[s appendFormat: @"<FeesOverrideList>%@</FeesOverrideList>", [CSCArrayOfFeesOverride serialize: self.FeesOverrideList]];
		} else {
			[s appendString: @"<FeesOverrideList/>"];
		}
		if (self.FinancialActivityList != nil && self.FinancialActivityList.count > 0) {
			[s appendFormat: @"<FinancialActivityList>%@</FinancialActivityList>", [CSCArrayOfFinancialActivity serialize: self.FinancialActivityList]];
		} else {
			[s appendString: @"<FinancialActivityList/>"];
		}
		if (self.FinancialOptionList != nil && self.FinancialOptionList.count > 0) {
			[s appendFormat: @"<FinancialOptionList>%@</FinancialOptionList>", [CSCArrayOfFinancialOption serialize: self.FinancialOptionList]];
		} else {
			[s appendString: @"<FinancialOptionList/>"];
		}
		if (self.FormerInsurer != nil) [s appendFormat: @"<FormerInsurer>%@</FormerInsurer>", [[self.FormerInsurer stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.GeneralConditionsList != nil && self.GeneralConditionsList.count > 0) {
			[s appendFormat: @"<GeneralConditionsList>%@</GeneralConditionsList>", [CSCArrayOfGeneralConditions serialize: self.GeneralConditionsList]];
		} else {
			[s appendString: @"<GeneralConditionsList/>"];
		}
		if (self.GlobalRegularPremium != nil) [s appendFormat: @"<GlobalRegularPremium>%@</GlobalRegularPremium>", [NSString stringWithFormat: @"%@", self.GlobalRegularPremium]];
		if (self.Indexation != nil) [s appendString: [self.Indexation serialize: @"Indexation"]];
		if (self.Indicators != nil) [s appendString: [self.Indicators serialize: @"Indicators"]];
		if (self.InsuranceType != nil) [s appendFormat: @"<InsuranceType>%@</InsuranceType>", [[self.InsuranceType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.InsuredGroupList != nil && self.InsuredGroupList.count > 0) {
			[s appendFormat: @"<InsuredGroupList>%@</InsuredGroupList>", [CSCArrayOfInsuredGroup serialize: self.InsuredGroupList]];
		} else {
			[s appendString: @"<InsuredGroupList/>"];
		}
		[s appendFormat: @"<InsurerEmployee>%@</InsurerEmployee>", (self.InsurerEmployee)?@"true":@"false"];
		if (self.InvestmentType != nil) [s appendFormat: @"<InvestmentType>%@</InvestmentType>", [[self.InvestmentType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.LoanAccount != nil) [s appendString: [self.LoanAccount serialize: @"LoanAccount"]];
		if (self.MainContractNumber != nil) [s appendFormat: @"<MainContractNumber>%@</MainContractNumber>", [[self.MainContractNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<Mandatory>%@</Mandatory>", (self.Mandatory)?@"true":@"false"];
		if (self.MarketingCode != nil) [s appendFormat: @"<MarketingCode>%@</MarketingCode>", [[self.MarketingCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<MaximumAge>%@</MaximumAge>", [NSString stringWithFormat: @"%i", self.MaximumAge]];
		[s appendFormat: @"<MaximumInsuredNumber>%@</MaximumInsuredNumber>", [NSString stringWithFormat: @"%i", self.MaximumInsuredNumber]];
		if (self.MedicalFolder != nil) [s appendString: [self.MedicalFolder serialize: @"MedicalFolder"]];
		if (self.MembershipFees != nil) [s appendFormat: @"<MembershipFees>%@</MembershipFees>", [NSString stringWithFormat: @"%@", self.MembershipFees]];
		[s appendFormat: @"<MinimumAge>%@</MinimumAge>", [NSString stringWithFormat: @"%i", self.MinimumAge]];
		if (self.MinimumAnnualPayment != nil) [s appendFormat: @"<MinimumAnnualPayment>%@</MinimumAnnualPayment>", [NSString stringWithFormat: @"%@", self.MinimumAnnualPayment]];
		if (self.Number != nil) [s appendFormat: @"<Number>%@</Number>", [[self.Number stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.OperationList != nil && self.OperationList.count > 0) {
			[s appendFormat: @"<OperationList>%@</OperationList>", [CSCArrayOfOperation serialize: self.OperationList]];
		} else {
			[s appendString: @"<OperationList/>"];
		}
		if (self.PackageList != nil && self.PackageList.count > 0) {
			[s appendFormat: @"<PackageList>%@</PackageList>", [CSCArrayOfPackage serialize: self.PackageList]];
		} else {
			[s appendString: @"<PackageList/>"];
		}
		if (self.PostalStampDate != nil) [s appendFormat: @"<PostalStampDate>%@</PostalStampDate>", [Soap getDateString: self.PostalStampDate]];
		if (self.PremiumAdjustmentList != nil && self.PremiumAdjustmentList.count > 0) {
			[s appendFormat: @"<PremiumAdjustmentList>%@</PremiumAdjustmentList>", [CSCArrayOfPremiumAdjustment serialize: self.PremiumAdjustmentList]];
		} else {
			[s appendString: @"<PremiumAdjustmentList/>"];
		}
		if (self.PreviousNumber != nil) [s appendFormat: @"<PreviousNumber>%@</PreviousNumber>", [[self.PreviousNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ProductIdentifier != nil) [s appendFormat: @"<ProductIdentifier>%@</ProductIdentifier>", [[self.ProductIdentifier stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ProductLabel != nil) [s appendFormat: @"<ProductLabel>%@</ProductLabel>", [[self.ProductLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ProductName != nil) [s appendFormat: @"<ProductName>%@</ProductName>", [[self.ProductName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ProductOption != nil) [s appendString: [self.ProductOption serialize: @"ProductOption"]];
		if (self.ProductType != nil) [s appendFormat: @"<ProductType>%@</ProductType>", [[self.ProductType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ProductTypeLabel != nil) [s appendFormat: @"<ProductTypeLabel>%@</ProductTypeLabel>", [[self.ProductTypeLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ProposalNumber != nil) [s appendFormat: @"<ProposalNumber>%@</ProposalNumber>", [[self.ProposalNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.PropositionStatus != nil) [s appendFormat: @"<PropositionStatus>%@</PropositionStatus>", [[self.PropositionStatus stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ReceivedDate != nil) [s appendFormat: @"<ReceivedDate>%@</ReceivedDate>", [Soap getDateString: self.ReceivedDate]];
		[s appendFormat: @"<Recovery>%@</Recovery>", (self.Recovery)?@"true":@"false"];
		if (self.RenewalDate != nil) [s appendFormat: @"<RenewalDate>%@</RenewalDate>", [Soap getDateString: self.RenewalDate]];
		[s appendFormat: @"<RenewalNumber>%@</RenewalNumber>", [NSString stringWithFormat: @"%i", self.RenewalNumber]];
		[s appendFormat: @"<RetirementAge>%@</RetirementAge>", [NSString stringWithFormat: @"%i", self.RetirementAge]];
		if (self.RetirementDate != nil) [s appendFormat: @"<RetirementDate>%@</RetirementDate>", [Soap getDateString: self.RetirementDate]];
		if (self.RoleList != nil && self.RoleList.count > 0) {
			[s appendFormat: @"<RoleList>%@</RoleList>", [CSCArrayOfPartyRole serialize: self.RoleList]];
		} else {
			[s appendString: @"<RoleList/>"];
		}
		if (self.SignatureDate != nil) [s appendFormat: @"<SignatureDate>%@</SignatureDate>", [Soap getDateString: self.SignatureDate]];
		if (self.SourceNumber != nil) [s appendFormat: @"<SourceNumber>%@</SourceNumber>", [[self.SourceNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Status != nil) [s appendFormat: @"<Status>%@</Status>", [[self.Status stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.StatusDate != nil) [s appendFormat: @"<StatusDate>%@</StatusDate>", [Soap getDateString: self.StatusDate]];
		if (self.StatusLabel != nil) [s appendFormat: @"<StatusLabel>%@</StatusLabel>", [[self.StatusLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.StatusMotive != nil) [s appendFormat: @"<StatusMotive>%@</StatusMotive>", [[self.StatusMotive stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.SurrenderNetValue != nil) [s appendFormat: @"<SurrenderNetValue>%@</SurrenderNetValue>", [NSString stringWithFormat: @"%@", self.SurrenderNetValue]];
		if (self.SurrenderValue != nil) [s appendFormat: @"<SurrenderValue>%@</SurrenderValue>", [NSString stringWithFormat: @"%@", self.SurrenderValue]];
		if (self.TaxType != nil) [s appendString: [self.TaxType serialize: @"TaxType"]];
		if (self.Taxes != nil) [s appendString: [self.Taxes serialize: @"Taxes"]];
		if (self.Term != nil) [s appendFormat: @"<Term>%@</Term>", [[self.Term stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.TotalAdditionalPremium != nil) [s appendFormat: @"<TotalAdditionalPremium>%@</TotalAdditionalPremium>", [NSString stringWithFormat: @"%@", self.TotalAdditionalPremium]];
		if (self.TotalAvailableSaving != nil) [s appendFormat: @"<TotalAvailableSaving>%@</TotalAvailableSaving>", [NSString stringWithFormat: @"%@", self.TotalAvailableSaving]];
		if (self.TotalCashValue != nil) [s appendFormat: @"<TotalCashValue>%@</TotalCashValue>", [NSString stringWithFormat: @"%@", self.TotalCashValue]];
		if (self.TotalInitialPremium != nil) [s appendFormat: @"<TotalInitialPremium>%@</TotalInitialPremium>", [NSString stringWithFormat: @"%@", self.TotalInitialPremium]];
		if (self.TotalNetPartialSurrender != nil) [s appendFormat: @"<TotalNetPartialSurrender>%@</TotalNetPartialSurrender>", [NSString stringWithFormat: @"%@", self.TotalNetPartialSurrender]];
		if (self.TotalNetPremium != nil) [s appendFormat: @"<TotalNetPremium>%@</TotalNetPremium>", [NSString stringWithFormat: @"%@", self.TotalNetPremium]];
		if (self.TotalPartialSurrender != nil) [s appendFormat: @"<TotalPartialSurrender>%@</TotalPartialSurrender>", [NSString stringWithFormat: @"%@", self.TotalPartialSurrender]];
		if (self.TotalPendingAllocation != nil) [s appendFormat: @"<TotalPendingAllocation>%@</TotalPendingAllocation>", [NSString stringWithFormat: @"%@", self.TotalPendingAllocation]];
		if (self.TotalPremium != nil) [s appendFormat: @"<TotalPremium>%@</TotalPremium>", [NSString stringWithFormat: @"%@", self.TotalPremium]];
		if (self.TotalPremiumByDeduction != nil) [s appendFormat: @"<TotalPremiumByDeduction>%@</TotalPremiumByDeduction>", [NSString stringWithFormat: @"%@", self.TotalPremiumByDeduction]];
		if (self.TotalUnavailableSaving != nil) [s appendFormat: @"<TotalUnavailableSaving>%@</TotalUnavailableSaving>", [NSString stringWithFormat: @"%@", self.TotalUnavailableSaving]];
		if (self.TransferDate != nil) [s appendFormat: @"<TransferDate>%@</TransferDate>", [Soap getDateString: self.TransferDate]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCContract class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
