/*
	CSCClaimEvent.h
	The implementation of properties and methods for the CSCClaimEvent object.
	Generated by SudzC.com
*/
#import "CSCClaimEvent.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
#import "CSCClaimCause.h"
#import "CSCArrayOfClaimFolder.h"
#import "CSCArrayOfClaimParty.h"
#import "CSCInsuredRisk.h"
#import "CSCPostalAddress.h"
#import "CSCLoss.h"
#import "CSCArrayOfOperation.h"
#import "CSCPerson.h"
#import "CSCArrayOfClaimEventPeriod.h"
#import "CSCArrayOfRelatedFolder.h"
#import "CSCArrayOfString.h"
#import "CSCArrayOfPartyRole.h"
#import "CSCArrayOfSettlementTax.h"
@implementation CSCClaimEvent
	@synthesize DisplayId = _DisplayId;
	@synthesize EffectiveDate = _EffectiveDate;
	@synthesize EndDate = _EndDate;
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize StartDate = _StartDate;
	@synthesize AcceptanceDate = _AcceptanceDate;
	@synthesize CircumstanceCode = _CircumstanceCode;
	@synthesize CircumstanceLabel = _CircumstanceLabel;
	@synthesize ClaimCause = _ClaimCause;
	@synthesize ClaimFolderList = _ClaimFolderList;
	@synthesize ClaimPartyList = _ClaimPartyList;
	@synthesize Date = _Date;
	@synthesize Identifier = _Identifier;
	@synthesize InsuredRisk = _InsuredRisk;
	@synthesize LearnedAboutDate = _LearnedAboutDate;
	@synthesize Liability = _Liability;
	@synthesize Location = _Location;
	@synthesize LocationAddress = _LocationAddress;
	@synthesize Loss = _Loss;
	@synthesize NotificationDate = _NotificationDate;
	@synthesize OperationList = _OperationList;
	@synthesize Owner = _Owner;
	@synthesize PeriodList = _PeriodList;
	@synthesize PlaceCode = _PlaceCode;
	@synthesize PlaceLabel = _PlaceLabel;
	@synthesize RejectCount = _RejectCount;
	@synthesize RelatedFolderList = _RelatedFolderList;
	@synthesize Remark = _Remark;
	@synthesize RoleList = _RoleList;
	@synthesize Status = _Status;
	@synthesize StatusDate = _StatusDate;
	@synthesize StatusLabel = _StatusLabel;
	@synthesize StatusMotive = _StatusMotive;
	@synthesize StatusMotiveLabel = _StatusMotiveLabel;
	@synthesize TaxList = _TaxList;
	@synthesize Time = _Time;
	@synthesize TotalAmount = _TotalAmount;
	@synthesize Type = _Type;
	@synthesize TypeLabel = _TypeLabel;
	@synthesize User = _User;

	- (id) init
	{
		if(self = [super init])
		{
			self.DisplayId = nil;
			self.EffectiveDate = nil;
			self.EndDate = nil;
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.StartDate = nil;
			self.AcceptanceDate = nil;
			self.CircumstanceCode = nil;
			self.CircumstanceLabel = nil;
			self.ClaimCause = nil; // [[CSCClaimCause alloc] init];
			self.ClaimFolderList = [[NSMutableArray alloc] init];
			self.ClaimPartyList = [[NSMutableArray alloc] init];
			self.Date = nil;
			self.Identifier = nil;
			self.InsuredRisk = nil; // [[CSCInsuredRisk alloc] init];
			self.LearnedAboutDate = nil;
			self.Liability = nil;
			self.Location = nil;
			self.LocationAddress = nil; // [[CSCPostalAddress alloc] init];
			self.Loss = nil; // [[CSCLoss alloc] init];
			self.NotificationDate = nil;
			self.OperationList = [[NSMutableArray alloc] init];
			self.Owner = nil; // [[CSCPerson alloc] init];
			self.PeriodList = [[NSMutableArray alloc] init];
			self.PlaceCode = nil;
			self.PlaceLabel = nil;
			self.RelatedFolderList = [[NSMutableArray alloc] init];
			self.Remark = [[NSMutableArray alloc] init];
			self.RoleList = [[NSMutableArray alloc] init];
			self.Status = nil;
			self.StatusDate = nil;
			self.StatusLabel = nil;
			self.StatusMotive = nil;
			self.StatusMotiveLabel = nil;
			self.TaxList = [[NSMutableArray alloc] init];
			self.Time = nil;
			self.TotalAmount = nil;
			self.Type = nil;
			self.TypeLabel = nil;
			self.User = nil;

		}
		return self;
	}

	+ (CSCClaimEvent*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCClaimEvent*)[[CSCClaimEvent alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.DisplayId = [Soap getNodeValue: node withName: @"DisplayId"];
			self.EffectiveDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EffectiveDate"]];
			self.EndDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EndDate"]];
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.StartDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"StartDate"]];
			self.AcceptanceDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"AcceptanceDate"]];
			self.CircumstanceCode = [Soap getNodeValue: node withName: @"CircumstanceCode"];
			self.CircumstanceLabel = [Soap getNodeValue: node withName: @"CircumstanceLabel"];
			self.ClaimCause = [[CSCClaimCause createWithNode: [Soap getNode: node withName: @"ClaimCause"]] object];
			self.ClaimFolderList = [[CSCArrayOfClaimFolder createWithNode: [Soap getNode: node withName: @"ClaimFolderList"]] object];
			self.ClaimPartyList = [[CSCArrayOfClaimParty createWithNode: [Soap getNode: node withName: @"ClaimPartyList"]] object];
			self.Date = [Soap dateFromString: [Soap getNodeValue: node withName: @"Date"]];
			self.Identifier = [Soap getNodeValue: node withName: @"Identifier"];
			self.InsuredRisk = [[CSCInsuredRisk createWithNode: [Soap getNode: node withName: @"InsuredRisk"]] object];
			self.LearnedAboutDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"LearnedAboutDate"]];
			self.Liability = [Soap getNodeValue: node withName: @"Liability"];
			self.Location = [Soap getNodeValue: node withName: @"Location"];
			self.LocationAddress = [[CSCPostalAddress createWithNode: [Soap getNode: node withName: @"LocationAddress"]] object];
			self.Loss = [[CSCLoss createWithNode: [Soap getNode: node withName: @"Loss"]] object];
			self.NotificationDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"NotificationDate"]];
			self.OperationList = [[CSCArrayOfOperation createWithNode: [Soap getNode: node withName: @"OperationList"]] object];
			self.Owner = [[CSCPerson createWithNode: [Soap getNode: node withName: @"Owner"]] object];
			self.PeriodList = [[CSCArrayOfClaimEventPeriod createWithNode: [Soap getNode: node withName: @"PeriodList"]] object];
			self.PlaceCode = [Soap getNodeValue: node withName: @"PlaceCode"];
			self.PlaceLabel = [Soap getNodeValue: node withName: @"PlaceLabel"];
			self.RejectCount = [[Soap getNodeValue: node withName: @"RejectCount"] intValue];
			self.RelatedFolderList = [[CSCArrayOfRelatedFolder createWithNode: [Soap getNode: node withName: @"RelatedFolderList"]] object];
			self.Remark = [[CSCArrayOfString createWithNode: [Soap getNode: node withName: @"Remark"]] object];
			self.RoleList = [[CSCArrayOfPartyRole createWithNode: [Soap getNode: node withName: @"RoleList"]] object];
			self.Status = [Soap getNodeValue: node withName: @"Status"];
			self.StatusDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"StatusDate"]];
			self.StatusLabel = [Soap getNodeValue: node withName: @"StatusLabel"];
			self.StatusMotive = [Soap getNodeValue: node withName: @"StatusMotive"];
			self.StatusMotiveLabel = [Soap getNodeValue: node withName: @"StatusMotiveLabel"];
			self.TaxList = [[CSCArrayOfSettlementTax createWithNode: [Soap getNode: node withName: @"TaxList"]] object];
			self.Time = [Soap getNodeValue: node withName: @"Time"];
			self.TotalAmount = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"TotalAmount"]];
			self.Type = [Soap getNodeValue: node withName: @"Type"];
			self.TypeLabel = [Soap getNodeValue: node withName: @"TypeLabel"];
			self.User = [Soap getNodeValue: node withName: @"User"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"ClaimEvent"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.DisplayId != nil) [s appendFormat: @"<DisplayId>%@</DisplayId>", [[self.DisplayId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EffectiveDate != nil) [s appendFormat: @"<EffectiveDate>%@</EffectiveDate>", [Soap getDateString: self.EffectiveDate]];
		if (self.EndDate != nil) [s appendFormat: @"<EndDate>%@</EndDate>", [Soap getDateString: self.EndDate]];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.StartDate != nil) [s appendFormat: @"<StartDate>%@</StartDate>", [Soap getDateString: self.StartDate]];
		if (self.AcceptanceDate != nil) [s appendFormat: @"<AcceptanceDate>%@</AcceptanceDate>", [Soap getDateString: self.AcceptanceDate]];
		if (self.CircumstanceCode != nil) [s appendFormat: @"<CircumstanceCode>%@</CircumstanceCode>", [[self.CircumstanceCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CircumstanceLabel != nil) [s appendFormat: @"<CircumstanceLabel>%@</CircumstanceLabel>", [[self.CircumstanceLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ClaimCause != nil) [s appendString: [self.ClaimCause serialize: @"ClaimCause"]];
		if (self.ClaimFolderList != nil && self.ClaimFolderList.count > 0) {
			[s appendFormat: @"<ClaimFolderList>%@</ClaimFolderList>", [CSCArrayOfClaimFolder serialize: self.ClaimFolderList]];
		} else {
			[s appendString: @"<ClaimFolderList/>"];
		}
		if (self.ClaimPartyList != nil && self.ClaimPartyList.count > 0) {
			[s appendFormat: @"<ClaimPartyList>%@</ClaimPartyList>", [CSCArrayOfClaimParty serialize: self.ClaimPartyList]];
		} else {
			[s appendString: @"<ClaimPartyList/>"];
		}
		if (self.Date != nil) [s appendFormat: @"<Date>%@</Date>", [Soap getDateString: self.Date]];
		if (self.Identifier != nil) [s appendFormat: @"<Identifier>%@</Identifier>", [[self.Identifier stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.InsuredRisk != nil) [s appendString: [self.InsuredRisk serialize: @"InsuredRisk"]];
		if (self.LearnedAboutDate != nil) [s appendFormat: @"<LearnedAboutDate>%@</LearnedAboutDate>", [Soap getDateString: self.LearnedAboutDate]];
		if (self.Liability != nil) [s appendFormat: @"<Liability>%@</Liability>", [[self.Liability stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Location != nil) [s appendFormat: @"<Location>%@</Location>", [[self.Location stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.LocationAddress != nil) [s appendString: [self.LocationAddress serialize: @"LocationAddress"]];
		if (self.Loss != nil) [s appendString: [self.Loss serialize: @"Loss"]];
		if (self.NotificationDate != nil) [s appendFormat: @"<NotificationDate>%@</NotificationDate>", [Soap getDateString: self.NotificationDate]];
		if (self.OperationList != nil && self.OperationList.count > 0) {
			[s appendFormat: @"<OperationList>%@</OperationList>", [CSCArrayOfOperation serialize: self.OperationList]];
		} else {
			[s appendString: @"<OperationList/>"];
		}
		if (self.Owner != nil) [s appendString: [self.Owner serialize: @"Owner"]];
		if (self.PeriodList != nil && self.PeriodList.count > 0) {
			[s appendFormat: @"<PeriodList>%@</PeriodList>", [CSCArrayOfClaimEventPeriod serialize: self.PeriodList]];
		} else {
			[s appendString: @"<PeriodList/>"];
		}
		if (self.PlaceCode != nil) [s appendFormat: @"<PlaceCode>%@</PlaceCode>", [[self.PlaceCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.PlaceLabel != nil) [s appendFormat: @"<PlaceLabel>%@</PlaceLabel>", [[self.PlaceLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<RejectCount>%@</RejectCount>", [NSString stringWithFormat: @"%i", self.RejectCount]];
		if (self.RelatedFolderList != nil && self.RelatedFolderList.count > 0) {
			[s appendFormat: @"<RelatedFolderList>%@</RelatedFolderList>", [CSCArrayOfRelatedFolder serialize: self.RelatedFolderList]];
		} else {
			[s appendString: @"<RelatedFolderList/>"];
		}
		if (self.Remark != nil && self.Remark.count > 0) {
			[s appendFormat: @"<Remark>%@</Remark>", [CSCArrayOfString serialize: self.Remark]];
		} else {
			[s appendString: @"<Remark/>"];
		}
		if (self.RoleList != nil && self.RoleList.count > 0) {
			[s appendFormat: @"<RoleList>%@</RoleList>", [CSCArrayOfPartyRole serialize: self.RoleList]];
		} else {
			[s appendString: @"<RoleList/>"];
		}
		if (self.Status != nil) [s appendFormat: @"<Status>%@</Status>", [[self.Status stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.StatusDate != nil) [s appendFormat: @"<StatusDate>%@</StatusDate>", [Soap getDateString: self.StatusDate]];
		if (self.StatusLabel != nil) [s appendFormat: @"<StatusLabel>%@</StatusLabel>", [[self.StatusLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.StatusMotive != nil) [s appendFormat: @"<StatusMotive>%@</StatusMotive>", [[self.StatusMotive stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.StatusMotiveLabel != nil) [s appendFormat: @"<StatusMotiveLabel>%@</StatusMotiveLabel>", [[self.StatusMotiveLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.TaxList != nil && self.TaxList.count > 0) {
			[s appendFormat: @"<TaxList>%@</TaxList>", [CSCArrayOfSettlementTax serialize: self.TaxList]];
		} else {
			[s appendString: @"<TaxList/>"];
		}
		if (self.Time != nil) [s appendFormat: @"<Time>%@</Time>", [[self.Time stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.TotalAmount != nil) [s appendFormat: @"<TotalAmount>%@</TotalAmount>", [NSString stringWithFormat: @"%@", self.TotalAmount]];
		if (self.Type != nil) [s appendFormat: @"<Type>%@</Type>", [[self.Type stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.TypeLabel != nil) [s appendFormat: @"<TypeLabel>%@</TypeLabel>", [[self.TypeLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.User != nil) [s appendFormat: @"<User>%@</User>", [[self.User stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCClaimEvent class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
