/*
	CSCBeneficiary.h
	The implementation of properties and methods for the CSCBeneficiary object.
	Generated by SudzC.com
*/
#import "CSCBeneficiary.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
#import "CSCArrayOfString.h"
#import "CSCOrganization.h"
#import "CSCPerson.h"
#import "CSCArrayOfString.h"
#import "CSCArrayOfString.h"
@implementation CSCBeneficiary
	@synthesize DisplayId = _DisplayId;
	@synthesize EffectiveDate = _EffectiveDate;
	@synthesize EndDate = _EndDate;
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize StartDate = _StartDate;
	@synthesize Acceptance = _Acceptance;
	@synthesize AcceptanceDate = _AcceptanceDate;
	@synthesize Amount = _Amount;
	@synthesize ClaimEventList = _ClaimEventList;
	@synthesize CreditorType = _CreditorType;
	@synthesize LoanAmount = _LoanAmount;
	@synthesize Organization = _Organization;
	@synthesize PartyType = _PartyType;
	@synthesize Person = _Person;
	@synthesize Priority = _Priority;
	@synthesize QuotaShare = _QuotaShare;
	@synthesize Rank = _Rank;
	@synthesize RestrictionCodeList = _RestrictionCodeList;
	@synthesize RestrictionLabelList = _RestrictionLabelList;
	@synthesize Type = _Type;
	@synthesize TypeLabel = _TypeLabel;

	- (id) init
	{
		if(self = [super init])
		{
			self.DisplayId = nil;
			self.EffectiveDate = nil;
			self.EndDate = nil;
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.StartDate = nil;
			self.Acceptance = nil;
			self.AcceptanceDate = nil;
			self.Amount = nil;
			self.ClaimEventList = [[NSMutableArray alloc] init];
			self.CreditorType = nil;
			self.LoanAmount = nil;
			self.Organization = nil; // [[CSCOrganization alloc] init];
			self.PartyType = nil;
			self.Person = nil; // [[CSCPerson alloc] init];
			self.QuotaShare = nil;
			self.RestrictionCodeList = [[NSMutableArray alloc] init];
			self.RestrictionLabelList = [[NSMutableArray alloc] init];
			self.Type = nil;
			self.TypeLabel = nil;

		}
		return self;
	}

	+ (CSCBeneficiary*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCBeneficiary*)[[CSCBeneficiary alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.DisplayId = [Soap getNodeValue: node withName: @"DisplayId"];
			self.EffectiveDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EffectiveDate"]];
			self.EndDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EndDate"]];
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.StartDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"StartDate"]];
			self.Acceptance = [Soap getNodeValue: node withName: @"Acceptance"];
			self.AcceptanceDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"AcceptanceDate"]];
			self.Amount = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"Amount"]];
			self.ClaimEventList = [[CSCArrayOfString createWithNode: [Soap getNode: node withName: @"ClaimEventList"]] object];
			self.CreditorType = [Soap getNodeValue: node withName: @"CreditorType"];
			self.LoanAmount = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"LoanAmount"]];
			self.Organization = [[CSCOrganization createWithNode: [Soap getNode: node withName: @"Organization"]] object];
			self.PartyType = [Soap getNodeValue: node withName: @"PartyType"];
			self.Person = [[CSCPerson createWithNode: [Soap getNode: node withName: @"Person"]] object];
			self.Priority = [[Soap getNodeValue: node withName: @"Priority"] intValue];
			self.QuotaShare = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"QuotaShare"]];
			self.Rank = [[Soap getNodeValue: node withName: @"Rank"] intValue];
			self.RestrictionCodeList = [[CSCArrayOfString createWithNode: [Soap getNode: node withName: @"RestrictionCodeList"]] object];
			self.RestrictionLabelList = [[CSCArrayOfString createWithNode: [Soap getNode: node withName: @"RestrictionLabelList"]] object];
			self.Type = [Soap getNodeValue: node withName: @"Type"];
			self.TypeLabel = [Soap getNodeValue: node withName: @"TypeLabel"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Beneficiary"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.DisplayId != nil) [s appendFormat: @"<DisplayId>%@</DisplayId>", [[self.DisplayId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EffectiveDate != nil) [s appendFormat: @"<EffectiveDate>%@</EffectiveDate>", [Soap getDateString: self.EffectiveDate]];
		if (self.EndDate != nil) [s appendFormat: @"<EndDate>%@</EndDate>", [Soap getDateString: self.EndDate]];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.StartDate != nil) [s appendFormat: @"<StartDate>%@</StartDate>", [Soap getDateString: self.StartDate]];
		if (self.Acceptance != nil) [s appendFormat: @"<Acceptance>%@</Acceptance>", [[self.Acceptance stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.AcceptanceDate != nil) [s appendFormat: @"<AcceptanceDate>%@</AcceptanceDate>", [Soap getDateString: self.AcceptanceDate]];
		if (self.Amount != nil) [s appendFormat: @"<Amount>%@</Amount>", [NSString stringWithFormat: @"%@", self.Amount]];
		if (self.ClaimEventList != nil && self.ClaimEventList.count > 0) {
			[s appendFormat: @"<ClaimEventList>%@</ClaimEventList>", [CSCArrayOfString serialize: self.ClaimEventList]];
		} else {
			[s appendString: @"<ClaimEventList/>"];
		}
		if (self.CreditorType != nil) [s appendFormat: @"<CreditorType>%@</CreditorType>", [[self.CreditorType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.LoanAmount != nil) [s appendFormat: @"<LoanAmount>%@</LoanAmount>", [NSString stringWithFormat: @"%@", self.LoanAmount]];
		if (self.Organization != nil) [s appendString: [self.Organization serialize: @"Organization"]];
		if (self.PartyType != nil) [s appendFormat: @"<PartyType>%@</PartyType>", [[self.PartyType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Person != nil) [s appendString: [self.Person serialize: @"Person"]];
		[s appendFormat: @"<Priority>%@</Priority>", [NSString stringWithFormat: @"%i", self.Priority]];
		if (self.QuotaShare != nil) [s appendFormat: @"<QuotaShare>%@</QuotaShare>", [NSString stringWithFormat: @"%@", self.QuotaShare]];
		[s appendFormat: @"<Rank>%@</Rank>", [NSString stringWithFormat: @"%i", self.Rank]];
		if (self.RestrictionCodeList != nil && self.RestrictionCodeList.count > 0) {
			[s appendFormat: @"<RestrictionCodeList>%@</RestrictionCodeList>", [CSCArrayOfString serialize: self.RestrictionCodeList]];
		} else {
			[s appendString: @"<RestrictionCodeList/>"];
		}
		if (self.RestrictionLabelList != nil && self.RestrictionLabelList.count > 0) {
			[s appendFormat: @"<RestrictionLabelList>%@</RestrictionLabelList>", [CSCArrayOfString serialize: self.RestrictionLabelList]];
		} else {
			[s appendString: @"<RestrictionLabelList/>"];
		}
		if (self.Type != nil) [s appendFormat: @"<Type>%@</Type>", [[self.Type stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.TypeLabel != nil) [s appendFormat: @"<TypeLabel>%@</TypeLabel>", [[self.TypeLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCBeneficiary class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
