/*
	CSCHealthBenefit.h
	The implementation of properties and methods for the CSCHealthBenefit object.
	Generated by SudzC.com
*/
#import "CSCHealthBenefit.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
#import "CSCHealthParty.h"
#import "CSCArrayOfPartyRole.h"
#import "CSCArrayOfHealthItem.h"
#import "CSCArrayOfMessage.h"
#import "CSCArrayOfSignedStatement.h"
@implementation CSCHealthBenefit
	@synthesize DisplayId = _DisplayId;
	@synthesize EffectiveDate = _EffectiveDate;
	@synthesize EndDate = _EndDate;
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize StartDate = _StartDate;
	@synthesize Identifier = _Identifier;
	@synthesize Issuer = _Issuer;
	@synthesize RoleList = _RoleList;
	@synthesize CheckLevel = _CheckLevel;
	@synthesize EditionDate = _EditionDate;
	@synthesize ItemList = _ItemList;
	@synthesize MedicalEndDate = _MedicalEndDate;
	@synthesize MedicalStartDate = _MedicalStartDate;
	@synthesize MessageList = _MessageList;
	@synthesize NotificationDate = _NotificationDate;
	@synthesize PaymentDate = _PaymentDate;
	@synthesize RetourNoemie = _RetourNoemie;
	@synthesize SignedStatementList = _SignedStatementList;
	@synthesize SignedStatements = _SignedStatements;
	@synthesize TotalAmount = _TotalAmount;
	@synthesize Type = _Type;

	- (id) init
	{
		if(self = [super init])
		{
			self.DisplayId = nil;
			self.EffectiveDate = nil;
			self.EndDate = nil;
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.StartDate = nil;
			self.Identifier = nil;
			self.Issuer = nil; // [[CSCHealthParty alloc] init];
			self.RoleList = [[NSMutableArray alloc] init];
			self.CheckLevel = nil;
			self.EditionDate = nil;
			self.ItemList = [[NSMutableArray alloc] init];
			self.MedicalEndDate = nil;
			self.MedicalStartDate = nil;
			self.MessageList = [[NSMutableArray alloc] init];
			self.NotificationDate = nil;
			self.PaymentDate = nil;
			self.SignedStatementList = [[NSMutableArray alloc] init];
			self.TotalAmount = nil;
			self.Type = nil;

		}
		return self;
	}

	+ (CSCHealthBenefit*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCHealthBenefit*)[[CSCHealthBenefit alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.DisplayId = [Soap getNodeValue: node withName: @"DisplayId"];
			self.EffectiveDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EffectiveDate"]];
			self.EndDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EndDate"]];
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.StartDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"StartDate"]];
			self.Identifier = [Soap getNodeValue: node withName: @"Identifier"];
			self.Issuer = [[CSCHealthParty createWithNode: [Soap getNode: node withName: @"Issuer"]] object];
			self.RoleList = [[CSCArrayOfPartyRole createWithNode: [Soap getNode: node withName: @"RoleList"]] object];
			self.CheckLevel = [Soap getNodeValue: node withName: @"CheckLevel"];
			self.EditionDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EditionDate"]];
			self.ItemList = [[CSCArrayOfHealthItem createWithNode: [Soap getNode: node withName: @"ItemList"]] object];
			self.MedicalEndDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"MedicalEndDate"]];
			self.MedicalStartDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"MedicalStartDate"]];
			self.MessageList = [[CSCArrayOfMessage createWithNode: [Soap getNode: node withName: @"MessageList"]] object];
			self.NotificationDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"NotificationDate"]];
			self.PaymentDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"PaymentDate"]];
			self.RetourNoemie = [[Soap getNodeValue: node withName: @"RetourNoemie"] boolValue];
			self.SignedStatementList = [[CSCArrayOfSignedStatement createWithNode: [Soap getNode: node withName: @"SignedStatementList"]] object];
			self.SignedStatements = [[Soap getNodeValue: node withName: @"SignedStatements"] intValue];
			self.TotalAmount = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"TotalAmount"]];
			self.Type = [Soap getNodeValue: node withName: @"Type"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"HealthBenefit"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.DisplayId != nil) [s appendFormat: @"<DisplayId>%@</DisplayId>", [[self.DisplayId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EffectiveDate != nil) [s appendFormat: @"<EffectiveDate>%@</EffectiveDate>", [Soap getDateString: self.EffectiveDate]];
		if (self.EndDate != nil) [s appendFormat: @"<EndDate>%@</EndDate>", [Soap getDateString: self.EndDate]];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.StartDate != nil) [s appendFormat: @"<StartDate>%@</StartDate>", [Soap getDateString: self.StartDate]];
		if (self.Identifier != nil) [s appendFormat: @"<Identifier>%@</Identifier>", [[self.Identifier stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Issuer != nil) [s appendString: [self.Issuer serialize: @"Issuer"]];
		if (self.RoleList != nil && self.RoleList.count > 0) {
			[s appendFormat: @"<RoleList>%@</RoleList>", [CSCArrayOfPartyRole serialize: self.RoleList]];
		} else {
			[s appendString: @"<RoleList/>"];
		}
		if (self.CheckLevel != nil) [s appendFormat: @"<CheckLevel>%@</CheckLevel>", [[self.CheckLevel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EditionDate != nil) [s appendFormat: @"<EditionDate>%@</EditionDate>", [Soap getDateString: self.EditionDate]];
		if (self.ItemList != nil && self.ItemList.count > 0) {
			[s appendFormat: @"<ItemList>%@</ItemList>", [CSCArrayOfHealthItem serialize: self.ItemList]];
		} else {
			[s appendString: @"<ItemList/>"];
		}
		if (self.MedicalEndDate != nil) [s appendFormat: @"<MedicalEndDate>%@</MedicalEndDate>", [Soap getDateString: self.MedicalEndDate]];
		if (self.MedicalStartDate != nil) [s appendFormat: @"<MedicalStartDate>%@</MedicalStartDate>", [Soap getDateString: self.MedicalStartDate]];
		if (self.MessageList != nil && self.MessageList.count > 0) {
			[s appendFormat: @"<MessageList>%@</MessageList>", [CSCArrayOfMessage serialize: self.MessageList]];
		} else {
			[s appendString: @"<MessageList/>"];
		}
		if (self.NotificationDate != nil) [s appendFormat: @"<NotificationDate>%@</NotificationDate>", [Soap getDateString: self.NotificationDate]];
		if (self.PaymentDate != nil) [s appendFormat: @"<PaymentDate>%@</PaymentDate>", [Soap getDateString: self.PaymentDate]];
		[s appendFormat: @"<RetourNoemie>%@</RetourNoemie>", (self.RetourNoemie)?@"true":@"false"];
		if (self.SignedStatementList != nil && self.SignedStatementList.count > 0) {
			[s appendFormat: @"<SignedStatementList>%@</SignedStatementList>", [CSCArrayOfSignedStatement serialize: self.SignedStatementList]];
		} else {
			[s appendString: @"<SignedStatementList/>"];
		}
		[s appendFormat: @"<SignedStatements>%@</SignedStatements>", [NSString stringWithFormat: @"%i", self.SignedStatements]];
		if (self.TotalAmount != nil) [s appendFormat: @"<TotalAmount>%@</TotalAmount>", [NSString stringWithFormat: @"%@", self.TotalAmount]];
		if (self.Type != nil) [s appendFormat: @"<Type>%@</Type>", [[self.Type stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCHealthBenefit class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
