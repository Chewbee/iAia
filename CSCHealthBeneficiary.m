/*
	CSCHealthBeneficiary.h
	The implementation of properties and methods for the CSCHealthBeneficiary object.
	Generated by SudzC.com
*/
#import "CSCHealthBeneficiary.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
#import "CSCArrayOfHealthDomain.h"
@implementation CSCHealthBeneficiary
	@synthesize DisplayId = _DisplayId;
	@synthesize EffectiveDate = _EffectiveDate;
	@synthesize EndDate = _EndDate;
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize StartDate = _StartDate;
	@synthesize BirthDate = _BirthDate;
	@synthesize CodeCaisse = _CodeCaisse;
	@synthesize CodeCentre = _CodeCentre;
	@synthesize CodeRegime = _CodeRegime;
	@synthesize FirstName = _FirstName;
	@synthesize FootnoteNumber = _FootnoteNumber;
	@synthesize HealthDomainList = _HealthDomainList;
	@synthesize LastName = _LastName;
	@synthesize PersonTitle = _PersonTitle;
	@synthesize PostalAddress = _PostalAddress;
	@synthesize Qualite = _Qualite;
	@synthesize SocialSecurityKey = _SocialSecurityKey;
	@synthesize SocialSecurityNumber = _SocialSecurityNumber;

	- (id) init
	{
		if(self = [super init])
		{
			self.DisplayId = nil;
			self.EffectiveDate = nil;
			self.EndDate = nil;
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.StartDate = nil;
			self.BirthDate = nil;
			self.CodeCaisse = nil;
			self.CodeCentre = nil;
			self.CodeRegime = nil;
			self.FirstName = nil;
			self.FootnoteNumber = nil;
			self.HealthDomainList = [[NSMutableArray alloc] init];
			self.LastName = nil;
			self.PersonTitle = nil;
			self.PostalAddress = nil;
			self.Qualite = nil;
			self.SocialSecurityKey = nil;
			self.SocialSecurityNumber = nil;

		}
		return self;
	}

	+ (CSCHealthBeneficiary*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCHealthBeneficiary*)[[CSCHealthBeneficiary alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.DisplayId = [Soap getNodeValue: node withName: @"DisplayId"];
			self.EffectiveDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EffectiveDate"]];
			self.EndDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EndDate"]];
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.StartDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"StartDate"]];
			self.BirthDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"BirthDate"]];
			self.CodeCaisse = [Soap getNodeValue: node withName: @"CodeCaisse"];
			self.CodeCentre = [Soap getNodeValue: node withName: @"CodeCentre"];
			self.CodeRegime = [Soap getNodeValue: node withName: @"CodeRegime"];
			self.FirstName = [Soap getNodeValue: node withName: @"FirstName"];
			self.FootnoteNumber = [Soap getNodeValue: node withName: @"FootnoteNumber"];
			self.HealthDomainList = [[CSCArrayOfHealthDomain createWithNode: [Soap getNode: node withName: @"HealthDomainList"]] object];
			self.LastName = [Soap getNodeValue: node withName: @"LastName"];
			self.PersonTitle = [Soap getNodeValue: node withName: @"PersonTitle"];
			self.PostalAddress = [Soap getNodeValue: node withName: @"PostalAddress"];
			self.Qualite = [Soap getNodeValue: node withName: @"Qualite"];
			self.SocialSecurityKey = [Soap getNodeValue: node withName: @"SocialSecurityKey"];
			self.SocialSecurityNumber = [Soap getNodeValue: node withName: @"SocialSecurityNumber"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"HealthBeneficiary"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.DisplayId != nil) [s appendFormat: @"<DisplayId>%@</DisplayId>", [[self.DisplayId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EffectiveDate != nil) [s appendFormat: @"<EffectiveDate>%@</EffectiveDate>", [Soap getDateString: self.EffectiveDate]];
		if (self.EndDate != nil) [s appendFormat: @"<EndDate>%@</EndDate>", [Soap getDateString: self.EndDate]];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.StartDate != nil) [s appendFormat: @"<StartDate>%@</StartDate>", [Soap getDateString: self.StartDate]];
		if (self.BirthDate != nil) [s appendFormat: @"<BirthDate>%@</BirthDate>", [Soap getDateString: self.BirthDate]];
		if (self.CodeCaisse != nil) [s appendFormat: @"<CodeCaisse>%@</CodeCaisse>", [[self.CodeCaisse stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CodeCentre != nil) [s appendFormat: @"<CodeCentre>%@</CodeCentre>", [[self.CodeCentre stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CodeRegime != nil) [s appendFormat: @"<CodeRegime>%@</CodeRegime>", [[self.CodeRegime stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.FirstName != nil) [s appendFormat: @"<FirstName>%@</FirstName>", [[self.FirstName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.FootnoteNumber != nil) [s appendFormat: @"<FootnoteNumber>%@</FootnoteNumber>", [[self.FootnoteNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.HealthDomainList != nil && self.HealthDomainList.count > 0) {
			[s appendFormat: @"<HealthDomainList>%@</HealthDomainList>", [CSCArrayOfHealthDomain serialize: self.HealthDomainList]];
		} else {
			[s appendString: @"<HealthDomainList/>"];
		}
		if (self.LastName != nil) [s appendFormat: @"<LastName>%@</LastName>", [[self.LastName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.PersonTitle != nil) [s appendFormat: @"<PersonTitle>%@</PersonTitle>", [[self.PersonTitle stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.PostalAddress != nil) [s appendFormat: @"<PostalAddress>%@</PostalAddress>", [[self.PostalAddress stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Qualite != nil) [s appendFormat: @"<Qualite>%@</Qualite>", [[self.Qualite stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.SocialSecurityKey != nil) [s appendFormat: @"<SocialSecurityKey>%@</SocialSecurityKey>", [[self.SocialSecurityKey stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.SocialSecurityNumber != nil) [s appendFormat: @"<SocialSecurityNumber>%@</SocialSecurityNumber>", [[self.SocialSecurityNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCHealthBeneficiary class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
