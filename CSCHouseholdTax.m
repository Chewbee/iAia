/*
	CSCHouseholdTax.h
	The implementation of properties and methods for the CSCHouseholdTax object.
	Generated by SudzC.com
*/
#import "CSCHouseholdTax.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
@implementation CSCHouseholdTax
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize ChildrenDependents = _ChildrenDependents;
	@synthesize CountryCode = _CountryCode;
	@synthesize FiscalEndDate = _FiscalEndDate;
	@synthesize FiscalStartDate = _FiscalStartDate;
	@synthesize IncomeRange = _IncomeRange;
	@synthesize Residence = _Residence;
	@synthesize SpouseFullName = _SpouseFullName;
	@synthesize TaxOffice = _TaxOffice;
	@synthesize TaxType = _TaxType;

	- (id) init
	{
		if(self = [super init])
		{
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.CountryCode = nil;
			self.FiscalEndDate = nil;
			self.FiscalStartDate = nil;
			self.IncomeRange = nil;
			self.Residence = nil;
			self.SpouseFullName = nil;
			self.TaxOffice = nil;
			self.TaxType = nil;

		}
		return self;
	}

	+ (CSCHouseholdTax*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCHouseholdTax*)[[CSCHouseholdTax alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.ChildrenDependents = [[Soap getNodeValue: node withName: @"ChildrenDependents"] intValue];
			self.CountryCode = [Soap getNodeValue: node withName: @"CountryCode"];
			self.FiscalEndDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"FiscalEndDate"]];
			self.FiscalStartDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"FiscalStartDate"]];
			self.IncomeRange = [Soap getNodeValue: node withName: @"IncomeRange"];
			self.Residence = [Soap getNodeValue: node withName: @"Residence"];
			self.SpouseFullName = [Soap getNodeValue: node withName: @"SpouseFullName"];
			self.TaxOffice = [Soap getNodeValue: node withName: @"TaxOffice"];
			self.TaxType = [Soap getNodeValue: node withName: @"TaxType"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"HouseholdTax"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		[s appendFormat: @"<ChildrenDependents>%@</ChildrenDependents>", [NSString stringWithFormat: @"%i", self.ChildrenDependents]];
		if (self.CountryCode != nil) [s appendFormat: @"<CountryCode>%@</CountryCode>", [[self.CountryCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.FiscalEndDate != nil) [s appendFormat: @"<FiscalEndDate>%@</FiscalEndDate>", [Soap getDateString: self.FiscalEndDate]];
		if (self.FiscalStartDate != nil) [s appendFormat: @"<FiscalStartDate>%@</FiscalStartDate>", [Soap getDateString: self.FiscalStartDate]];
		if (self.IncomeRange != nil) [s appendFormat: @"<IncomeRange>%@</IncomeRange>", [[self.IncomeRange stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Residence != nil) [s appendFormat: @"<Residence>%@</Residence>", [[self.Residence stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.SpouseFullName != nil) [s appendFormat: @"<SpouseFullName>%@</SpouseFullName>", [[self.SpouseFullName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.TaxOffice != nil) [s appendFormat: @"<TaxOffice>%@</TaxOffice>", [[self.TaxOffice stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.TaxType != nil) [s appendFormat: @"<TaxType>%@</TaxType>", [[self.TaxType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCHouseholdTax class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
