/*
	CSCCoverage.h
	The implementation of properties and methods for the CSCCoverage object.
	Generated by SudzC.com
*/
#import "CSCCoverage.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
#import "CSCArrayOfBeneficiary.h"
#import "CSCArrayOfClause.h"
#import "CSCBankingLoan.h"
#import "CSCArrayOfBenefitItem.h"
#import "CSCContract.h"
#import "CSCDeathCoverage.h"
#import "CSCHealthCoverageDetail.h"
#import "CSCIndexation.h"
#import "CSCArrayOfMembership.h"
@implementation CSCCoverage
	@synthesize DisplayId = _DisplayId;
	@synthesize EffectiveDate = _EffectiveDate;
	@synthesize EndDate = _EndDate;
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize StartDate = _StartDate;
	@synthesize BeneficiaryList = _BeneficiaryList;
	@synthesize ClauseList = _ClauseList;
	@synthesize Eligibility = _Eligibility;
	@synthesize Identifier = _Identifier;
	@synthesize Label = _Label;
	@synthesize Mandatory = _Mandatory;
	@synthesize Number = _Number;
	@synthesize Amount = _Amount;
	@synthesize AmountType = _AmountType;
	@synthesize BankingLoan = _BankingLoan;
	@synthesize BenefitItemList = _BenefitItemList;
	@synthesize BillingDuration = _BillingDuration;
	@synthesize BillingDurationUnit = _BillingDurationUnit;
	@synthesize BillingEndDate = _BillingEndDate;
	@synthesize BillingStartDate = _BillingStartDate;
	@synthesize Contract = _Contract;
	@synthesize DeathCoverage = _DeathCoverage;
	@synthesize DeductibleClause = _DeductibleClause;
	@synthesize DefinitionNumber = _DefinitionNumber;
	@synthesize Duration = _Duration;
	@synthesize HealthCoverageDetail = _HealthCoverageDetail;
	@synthesize Indexation = _Indexation;
	@synthesize IndexationClause = _IndexationClause;
	@synthesize MaximumAge = _MaximumAge;
	@synthesize MembershipList = _MembershipList;
	@synthesize MinimumAge = _MinimumAge;
	@synthesize RiskCode = _RiskCode;
	@synthesize SettlementDuration = _SettlementDuration;
	@synthesize SettlementDurationUnit = _SettlementDurationUnit;
	@synthesize SettlementEndDate = _SettlementEndDate;
	@synthesize TaxClause = _TaxClause;
	@synthesize Type = _Type;
	@synthesize WaitingPeriodClause = _WaitingPeriodClause;

	- (id) init
	{
		if(self = [super init])
		{
			self.DisplayId = nil;
			self.EffectiveDate = nil;
			self.EndDate = nil;
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.StartDate = nil;
			self.BeneficiaryList = [[NSMutableArray alloc] init];
			self.ClauseList = [[NSMutableArray alloc] init];
			self.Eligibility = nil;
			self.Identifier = nil;
			self.Label = nil;
			self.Amount = nil;
			self.AmountType = nil;
			self.BankingLoan = nil; // [[CSCBankingLoan alloc] init];
			self.BenefitItemList = [[NSMutableArray alloc] init];
			self.BillingDurationUnit = nil;
			self.BillingEndDate = nil;
			self.BillingStartDate = nil;
			self.Contract = nil; // [[CSCContract alloc] init];
			self.DeathCoverage = nil; // [[CSCDeathCoverage alloc] init];
			self.DeductibleClause = nil;
			self.HealthCoverageDetail = nil; // [[CSCHealthCoverageDetail alloc] init];
			self.Indexation = nil; // [[CSCIndexation alloc] init];
			self.IndexationClause = nil;
			self.MembershipList = [[NSMutableArray alloc] init];
			self.RiskCode = nil;
			self.SettlementDurationUnit = nil;
			self.SettlementEndDate = nil;
			self.TaxClause = nil;
			self.Type = nil;
			self.WaitingPeriodClause = nil;

		}
		return self;
	}

	+ (CSCCoverage*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCCoverage*)[[CSCCoverage alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.DisplayId = [Soap getNodeValue: node withName: @"DisplayId"];
			self.EffectiveDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EffectiveDate"]];
			self.EndDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EndDate"]];
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.StartDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"StartDate"]];
			self.BeneficiaryList = [[CSCArrayOfBeneficiary createWithNode: [Soap getNode: node withName: @"BeneficiaryList"]] object];
			self.ClauseList = [[CSCArrayOfClause createWithNode: [Soap getNode: node withName: @"ClauseList"]] object];
			self.Eligibility = [Soap getNodeValue: node withName: @"Eligibility"];
			self.Identifier = [Soap getNodeValue: node withName: @"Identifier"];
			self.Label = [Soap getNodeValue: node withName: @"Label"];
			self.Mandatory = [[Soap getNodeValue: node withName: @"Mandatory"] boolValue];
			self.Number = [[Soap getNodeValue: node withName: @"Number"] intValue];
			self.Amount = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"Amount"]];
			self.AmountType = [Soap getNodeValue: node withName: @"AmountType"];
			self.BankingLoan = [[CSCBankingLoan createWithNode: [Soap getNode: node withName: @"BankingLoan"]] object];
			self.BenefitItemList = [[CSCArrayOfBenefitItem createWithNode: [Soap getNode: node withName: @"BenefitItemList"]] object];
			self.BillingDuration = [[Soap getNodeValue: node withName: @"BillingDuration"] intValue];
			self.BillingDurationUnit = [Soap getNodeValue: node withName: @"BillingDurationUnit"];
			self.BillingEndDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"BillingEndDate"]];
			self.BillingStartDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"BillingStartDate"]];
			self.Contract = [[CSCContract createWithNode: [Soap getNode: node withName: @"Contract"]] object];
			self.DeathCoverage = [[CSCDeathCoverage createWithNode: [Soap getNode: node withName: @"DeathCoverage"]] object];
			self.DeductibleClause = [Soap getNodeValue: node withName: @"DeductibleClause"];
			self.DefinitionNumber = [[Soap getNodeValue: node withName: @"DefinitionNumber"] intValue];
			self.Duration = [[Soap getNodeValue: node withName: @"Duration"] intValue];
			self.HealthCoverageDetail = [[CSCHealthCoverageDetail createWithNode: [Soap getNode: node withName: @"HealthCoverageDetail"]] object];
			self.Indexation = [[CSCIndexation createWithNode: [Soap getNode: node withName: @"Indexation"]] object];
			self.IndexationClause = [Soap getNodeValue: node withName: @"IndexationClause"];
			self.MaximumAge = [[Soap getNodeValue: node withName: @"MaximumAge"] intValue];
			self.MembershipList = [[CSCArrayOfMembership createWithNode: [Soap getNode: node withName: @"MembershipList"]] object];
			self.MinimumAge = [[Soap getNodeValue: node withName: @"MinimumAge"] intValue];
			self.RiskCode = [Soap getNodeValue: node withName: @"RiskCode"];
			self.SettlementDuration = [[Soap getNodeValue: node withName: @"SettlementDuration"] intValue];
			self.SettlementDurationUnit = [Soap getNodeValue: node withName: @"SettlementDurationUnit"];
			self.SettlementEndDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"SettlementEndDate"]];
			self.TaxClause = [Soap getNodeValue: node withName: @"TaxClause"];
			self.Type = [Soap getNodeValue: node withName: @"Type"];
			self.WaitingPeriodClause = [Soap getNodeValue: node withName: @"WaitingPeriodClause"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Coverage"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.DisplayId != nil) [s appendFormat: @"<DisplayId>%@</DisplayId>", [[self.DisplayId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EffectiveDate != nil) [s appendFormat: @"<EffectiveDate>%@</EffectiveDate>", [Soap getDateString: self.EffectiveDate]];
		if (self.EndDate != nil) [s appendFormat: @"<EndDate>%@</EndDate>", [Soap getDateString: self.EndDate]];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.StartDate != nil) [s appendFormat: @"<StartDate>%@</StartDate>", [Soap getDateString: self.StartDate]];
		if (self.BeneficiaryList != nil && self.BeneficiaryList.count > 0) {
			[s appendFormat: @"<BeneficiaryList>%@</BeneficiaryList>", [CSCArrayOfBeneficiary serialize: self.BeneficiaryList]];
		} else {
			[s appendString: @"<BeneficiaryList/>"];
		}
		if (self.ClauseList != nil && self.ClauseList.count > 0) {
			[s appendFormat: @"<ClauseList>%@</ClauseList>", [CSCArrayOfClause serialize: self.ClauseList]];
		} else {
			[s appendString: @"<ClauseList/>"];
		}
		if (self.Eligibility != nil) [s appendFormat: @"<Eligibility>%@</Eligibility>", [[self.Eligibility stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Identifier != nil) [s appendFormat: @"<Identifier>%@</Identifier>", [[self.Identifier stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Label != nil) [s appendFormat: @"<Label>%@</Label>", [[self.Label stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<Mandatory>%@</Mandatory>", (self.Mandatory)?@"true":@"false"];
		[s appendFormat: @"<Number>%@</Number>", [NSString stringWithFormat: @"%i", self.Number]];
		if (self.Amount != nil) [s appendFormat: @"<Amount>%@</Amount>", [NSString stringWithFormat: @"%@", self.Amount]];
		if (self.AmountType != nil) [s appendFormat: @"<AmountType>%@</AmountType>", [[self.AmountType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.BankingLoan != nil) [s appendString: [self.BankingLoan serialize: @"BankingLoan"]];
		if (self.BenefitItemList != nil && self.BenefitItemList.count > 0) {
			[s appendFormat: @"<BenefitItemList>%@</BenefitItemList>", [CSCArrayOfBenefitItem serialize: self.BenefitItemList]];
		} else {
			[s appendString: @"<BenefitItemList/>"];
		}
		[s appendFormat: @"<BillingDuration>%@</BillingDuration>", [NSString stringWithFormat: @"%i", self.BillingDuration]];
		if (self.BillingDurationUnit != nil) [s appendFormat: @"<BillingDurationUnit>%@</BillingDurationUnit>", [[self.BillingDurationUnit stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.BillingEndDate != nil) [s appendFormat: @"<BillingEndDate>%@</BillingEndDate>", [Soap getDateString: self.BillingEndDate]];
		if (self.BillingStartDate != nil) [s appendFormat: @"<BillingStartDate>%@</BillingStartDate>", [Soap getDateString: self.BillingStartDate]];
		if (self.Contract != nil) [s appendString: [self.Contract serialize: @"Contract"]];
		if (self.DeathCoverage != nil) [s appendString: [self.DeathCoverage serialize: @"DeathCoverage"]];
		if (self.DeductibleClause != nil) [s appendFormat: @"<DeductibleClause>%@</DeductibleClause>", [[self.DeductibleClause stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<DefinitionNumber>%@</DefinitionNumber>", [NSString stringWithFormat: @"%i", self.DefinitionNumber]];
		[s appendFormat: @"<Duration>%@</Duration>", [NSString stringWithFormat: @"%i", self.Duration]];
		if (self.HealthCoverageDetail != nil) [s appendString: [self.HealthCoverageDetail serialize: @"HealthCoverageDetail"]];
		if (self.Indexation != nil) [s appendString: [self.Indexation serialize: @"Indexation"]];
		if (self.IndexationClause != nil) [s appendFormat: @"<IndexationClause>%@</IndexationClause>", [[self.IndexationClause stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<MaximumAge>%@</MaximumAge>", [NSString stringWithFormat: @"%i", self.MaximumAge]];
		if (self.MembershipList != nil && self.MembershipList.count > 0) {
			[s appendFormat: @"<MembershipList>%@</MembershipList>", [CSCArrayOfMembership serialize: self.MembershipList]];
		} else {
			[s appendString: @"<MembershipList/>"];
		}
		[s appendFormat: @"<MinimumAge>%@</MinimumAge>", [NSString stringWithFormat: @"%i", self.MinimumAge]];
		if (self.RiskCode != nil) [s appendFormat: @"<RiskCode>%@</RiskCode>", [[self.RiskCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<SettlementDuration>%@</SettlementDuration>", [NSString stringWithFormat: @"%i", self.SettlementDuration]];
		if (self.SettlementDurationUnit != nil) [s appendFormat: @"<SettlementDurationUnit>%@</SettlementDurationUnit>", [[self.SettlementDurationUnit stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.SettlementEndDate != nil) [s appendFormat: @"<SettlementEndDate>%@</SettlementEndDate>", [Soap getDateString: self.SettlementEndDate]];
		if (self.TaxClause != nil) [s appendFormat: @"<TaxClause>%@</TaxClause>", [[self.TaxClause stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Type != nil) [s appendFormat: @"<Type>%@</Type>", [[self.Type stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.WaitingPeriodClause != nil) [s appendFormat: @"<WaitingPeriodClause>%@</WaitingPeriodClause>", [[self.WaitingPeriodClause stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCCoverage class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
