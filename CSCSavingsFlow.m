/*
	CSCSavingsFlow.h
	The implementation of properties and methods for the CSCSavingsFlow object.
	Generated by SudzC.com
*/
#import "CSCSavingsFlow.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
#import "CSCCoverageFund.h"
@implementation CSCSavingsFlow
	@synthesize DisplayId = _DisplayId;
	@synthesize EffectiveDate = _EffectiveDate;
	@synthesize EndDate = _EndDate;
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize StartDate = _StartDate;
	@synthesize Amount = _Amount;
	@synthesize CoverageFund = _CoverageFund;
	@synthesize DebitCredit = _DebitCredit;
	@synthesize FundIdentifier = _FundIdentifier;
	@synthesize FundValueDate = _FundValueDate;
	@synthesize InvestmentDate = _InvestmentDate;
	@synthesize Label = _Label;
	@synthesize Status = _Status;
	@synthesize Type = _Type;
	@synthesize UnitValue = _UnitValue;
	@synthesize Units = _Units;
	@synthesize ValueDate = _ValueDate;

	- (id) init
	{
		if(self = [super init])
		{
			self.DisplayId = nil;
			self.EffectiveDate = nil;
			self.EndDate = nil;
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.StartDate = nil;
			self.Amount = nil;
			self.CoverageFund = nil; // [[CSCCoverageFund alloc] init];
			self.DebitCredit = nil;
			self.FundIdentifier = nil;
			self.FundValueDate = nil;
			self.InvestmentDate = nil;
			self.Label = nil;
			self.Status = nil;
			self.Type = nil;
			self.UnitValue = nil;
			self.Units = nil;
			self.ValueDate = nil;

		}
		return self;
	}

	+ (CSCSavingsFlow*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCSavingsFlow*)[[CSCSavingsFlow alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.DisplayId = [Soap getNodeValue: node withName: @"DisplayId"];
			self.EffectiveDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EffectiveDate"]];
			self.EndDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EndDate"]];
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.StartDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"StartDate"]];
			self.Amount = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"Amount"]];
			self.CoverageFund = [[CSCCoverageFund createWithNode: [Soap getNode: node withName: @"CoverageFund"]] object];
			self.DebitCredit = [Soap getNodeValue: node withName: @"DebitCredit"];
			self.FundIdentifier = [Soap getNodeValue: node withName: @"FundIdentifier"];
			self.FundValueDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"FundValueDate"]];
			self.InvestmentDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"InvestmentDate"]];
			self.Label = [Soap getNodeValue: node withName: @"Label"];
			self.Status = [Soap getNodeValue: node withName: @"Status"];
			self.Type = [Soap getNodeValue: node withName: @"Type"];
			self.UnitValue = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"UnitValue"]];
			self.Units = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"Units"]];
			self.ValueDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"ValueDate"]];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"SavingsFlow"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.DisplayId != nil) [s appendFormat: @"<DisplayId>%@</DisplayId>", [[self.DisplayId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EffectiveDate != nil) [s appendFormat: @"<EffectiveDate>%@</EffectiveDate>", [Soap getDateString: self.EffectiveDate]];
		if (self.EndDate != nil) [s appendFormat: @"<EndDate>%@</EndDate>", [Soap getDateString: self.EndDate]];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.StartDate != nil) [s appendFormat: @"<StartDate>%@</StartDate>", [Soap getDateString: self.StartDate]];
		if (self.Amount != nil) [s appendFormat: @"<Amount>%@</Amount>", [NSString stringWithFormat: @"%@", self.Amount]];
		if (self.CoverageFund != nil) [s appendString: [self.CoverageFund serialize: @"CoverageFund"]];
		if (self.DebitCredit != nil) [s appendFormat: @"<DebitCredit>%@</DebitCredit>", [[self.DebitCredit stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.FundIdentifier != nil) [s appendFormat: @"<FundIdentifier>%@</FundIdentifier>", [[self.FundIdentifier stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.FundValueDate != nil) [s appendFormat: @"<FundValueDate>%@</FundValueDate>", [Soap getDateString: self.FundValueDate]];
		if (self.InvestmentDate != nil) [s appendFormat: @"<InvestmentDate>%@</InvestmentDate>", [Soap getDateString: self.InvestmentDate]];
		if (self.Label != nil) [s appendFormat: @"<Label>%@</Label>", [[self.Label stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Status != nil) [s appendFormat: @"<Status>%@</Status>", [[self.Status stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Type != nil) [s appendFormat: @"<Type>%@</Type>", [[self.Type stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.UnitValue != nil) [s appendFormat: @"<UnitValue>%@</UnitValue>", [NSString stringWithFormat: @"%@", self.UnitValue]];
		if (self.Units != nil) [s appendFormat: @"<Units>%@</Units>", [NSString stringWithFormat: @"%@", self.Units]];
		if (self.ValueDate != nil) [s appendFormat: @"<ValueDate>%@</ValueDate>", [Soap getDateString: self.ValueDate]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCSavingsFlow class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
