/*
	CSCMedicalTreatmentGroup.h
	The implementation of properties and methods for the CSCMedicalTreatmentGroup object.
	Generated by SudzC.com
*/
#import "CSCMedicalTreatmentGroup.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
#import "CSCArrayOfHealthConditionalLimit.h"
#import "CSCArrayOfMedicalTreatment.h"
@implementation CSCMedicalTreatmentGroup
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize Base = _Base;
	@synthesize Code = _Code;
	@synthesize ConditionalLimitList = _ConditionalLimitList;
	@synthesize MedicalTreatmentList = _MedicalTreatmentList;

	- (id) init
	{
		if(self = [super init])
		{
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.ConditionalLimitList = [[NSMutableArray alloc] init];
			self.MedicalTreatmentList = [[NSMutableArray alloc] init];

		}
		return self;
	}

	+ (CSCMedicalTreatmentGroup*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCMedicalTreatmentGroup*)[[CSCMedicalTreatmentGroup alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.Base = [[Soap getNodeValue: node withName: @"Base"] intValue];
			self.Code = [[Soap getNodeValue: node withName: @"Code"] intValue];
			self.ConditionalLimitList = [[CSCArrayOfHealthConditionalLimit createWithNode: [Soap getNode: node withName: @"ConditionalLimitList"]] object];
			self.MedicalTreatmentList = [[CSCArrayOfMedicalTreatment createWithNode: [Soap getNode: node withName: @"MedicalTreatmentList"]] object];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"MedicalTreatmentGroup"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		[s appendFormat: @"<Base>%@</Base>", [NSString stringWithFormat: @"%i", self.Base]];
		[s appendFormat: @"<Code>%@</Code>", [NSString stringWithFormat: @"%i", self.Code]];
		if (self.ConditionalLimitList != nil && self.ConditionalLimitList.count > 0) {
			[s appendFormat: @"<ConditionalLimitList>%@</ConditionalLimitList>", [CSCArrayOfHealthConditionalLimit serialize: self.ConditionalLimitList]];
		} else {
			[s appendString: @"<ConditionalLimitList/>"];
		}
		if (self.MedicalTreatmentList != nil && self.MedicalTreatmentList.count > 0) {
			[s appendFormat: @"<MedicalTreatmentList>%@</MedicalTreatmentList>", [CSCArrayOfMedicalTreatment serialize: self.MedicalTreatmentList]];
		} else {
			[s appendString: @"<MedicalTreatmentList/>"];
		}

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCMedicalTreatmentGroup class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
