/*
	CSCPersonDetail.h
	The implementation of properties and methods for the CSCPersonDetail object.
	Generated by SudzC.com
*/
#import "CSCPersonDetail.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
@implementation CSCPersonDetail
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize BirthCity = _BirthCity;
	@synthesize BirthCountryCode = _BirthCountryCode;
	@synthesize BirthRegionCode = _BirthRegionCode;
	@synthesize EducationLevel = _EducationLevel;
	@synthesize Gender = _Gender;
	@synthesize MaritalStatus = _MaritalStatus;
	@synthesize MarriageAgreement = _MarriageAgreement;
	@synthesize MarriageAgreementDate = _MarriageAgreementDate;
	@synthesize MiddleName = _MiddleName;
	@synthesize Nationality = _Nationality;
	@synthesize Particle = _Particle;
	@synthesize PreviousSurname = _PreviousSurname;
	@synthesize Pseudonym = _Pseudonym;
	@synthesize ResidenceCountryCode = _ResidenceCountryCode;
	@synthesize Salutation = _Salutation;
	@synthesize Suffix = _Suffix;

	- (id) init
	{
		if(self = [super init])
		{
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.BirthCity = nil;
			self.BirthCountryCode = nil;
			self.BirthRegionCode = nil;
			self.EducationLevel = nil;
			self.Gender = nil;
			self.MaritalStatus = nil;
			self.MarriageAgreement = nil;
			self.MarriageAgreementDate = nil;
			self.MiddleName = nil;
			self.Nationality = nil;
			self.Particle = nil;
			self.PreviousSurname = nil;
			self.Pseudonym = nil;
			self.ResidenceCountryCode = nil;
			self.Salutation = nil;
			self.Suffix = nil;

		}
		return self;
	}

	+ (CSCPersonDetail*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCPersonDetail*)[[CSCPersonDetail alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.BirthCity = [Soap getNodeValue: node withName: @"BirthCity"];
			self.BirthCountryCode = [Soap getNodeValue: node withName: @"BirthCountryCode"];
			self.BirthRegionCode = [Soap getNodeValue: node withName: @"BirthRegionCode"];
			self.EducationLevel = [Soap getNodeValue: node withName: @"EducationLevel"];
			self.Gender = [Soap getNodeValue: node withName: @"Gender"];
			self.MaritalStatus = [Soap getNodeValue: node withName: @"MaritalStatus"];
			self.MarriageAgreement = [Soap getNodeValue: node withName: @"MarriageAgreement"];
			self.MarriageAgreementDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"MarriageAgreementDate"]];
			self.MiddleName = [Soap getNodeValue: node withName: @"MiddleName"];
			self.Nationality = [Soap getNodeValue: node withName: @"Nationality"];
			self.Particle = [Soap getNodeValue: node withName: @"Particle"];
			self.PreviousSurname = [Soap getNodeValue: node withName: @"PreviousSurname"];
			self.Pseudonym = [Soap getNodeValue: node withName: @"Pseudonym"];
			self.ResidenceCountryCode = [Soap getNodeValue: node withName: @"ResidenceCountryCode"];
			self.Salutation = [Soap getNodeValue: node withName: @"Salutation"];
			self.Suffix = [Soap getNodeValue: node withName: @"Suffix"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"PersonDetail"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.BirthCity != nil) [s appendFormat: @"<BirthCity>%@</BirthCity>", [[self.BirthCity stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.BirthCountryCode != nil) [s appendFormat: @"<BirthCountryCode>%@</BirthCountryCode>", [[self.BirthCountryCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.BirthRegionCode != nil) [s appendFormat: @"<BirthRegionCode>%@</BirthRegionCode>", [[self.BirthRegionCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EducationLevel != nil) [s appendFormat: @"<EducationLevel>%@</EducationLevel>", [[self.EducationLevel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Gender != nil) [s appendFormat: @"<Gender>%@</Gender>", [[self.Gender stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.MaritalStatus != nil) [s appendFormat: @"<MaritalStatus>%@</MaritalStatus>", [[self.MaritalStatus stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.MarriageAgreement != nil) [s appendFormat: @"<MarriageAgreement>%@</MarriageAgreement>", [[self.MarriageAgreement stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.MarriageAgreementDate != nil) [s appendFormat: @"<MarriageAgreementDate>%@</MarriageAgreementDate>", [Soap getDateString: self.MarriageAgreementDate]];
		if (self.MiddleName != nil) [s appendFormat: @"<MiddleName>%@</MiddleName>", [[self.MiddleName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Nationality != nil) [s appendFormat: @"<Nationality>%@</Nationality>", [[self.Nationality stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Particle != nil) [s appendFormat: @"<Particle>%@</Particle>", [[self.Particle stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.PreviousSurname != nil) [s appendFormat: @"<PreviousSurname>%@</PreviousSurname>", [[self.PreviousSurname stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Pseudonym != nil) [s appendFormat: @"<Pseudonym>%@</Pseudonym>", [[self.Pseudonym stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ResidenceCountryCode != nil) [s appendFormat: @"<ResidenceCountryCode>%@</ResidenceCountryCode>", [[self.ResidenceCountryCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Salutation != nil) [s appendFormat: @"<Salutation>%@</Salutation>", [[self.Salutation stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Suffix != nil) [s appendFormat: @"<Suffix>%@</Suffix>", [[self.Suffix stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCPersonDetail class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
