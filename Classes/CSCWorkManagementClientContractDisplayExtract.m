/*
 CSCWorkManagementClientExample.m
 Provides example and test runs the service's proxy methods.
 Generated by SudzC.com
 */
#import "CSCWorkManagementClientContractDisplayExtract.h"
#import "CSCContractDisplayExtractService.h"

@implementation CSCWorkManagementClientContractDisplayExtract
@synthesize faulty ;

- (void)invokeService
{
	// Create the service
    
    NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults] ;
    NSString *login = [defaults stringForKey:@"login_preference" ] ;
    NSString *password = [defaults stringForKey:@"password_preference" ] ;
    NSString *clientNumber = [defaults stringForKey:@"number_preference" ] ;
    
	CSCContractDisplayExtractService* service = [CSCContractDisplayExtractService serviceWithUsername:login andPassword:password] ;
    
	service.logging = YES;
	
    if (self->cscContract == nil) {
        cscContract = [[CSCContract alloc]init];
        CSCPartyRole *role = [[CSCPartyRole alloc]init];
        CSCPerson *dude = [[CSCPerson alloc]init] ;
        [dude setFirstName:@"Georges-Henry"];
        [dude setLastName:@"PORTEFAIT"];
        [dude setClientNumber:clientNumber];
        [role setPerson:dude];
        [cscContract.RoleList addObject:role];
    }
	// Returns NSMutableArray*.
	[service ContractDisplayExtract:self action:@selector(ContractDisplayExtractHandler:) Environment: [[CSCWMEnv alloc] init] Contract: cscContract ];
}
// Handle the response from ContractDisplayExtract.
- (void) ContractDisplayExtractHandler: (id) value {
    
	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"ERROR : %@", value);
        [self setFaulty:TRUE];
		return;
	}
    
	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"SOAP FAULT :%@", value);
        [self setFaulty:TRUE];
		return;
	}
    
	// Do something with the NSMutableArray* result
    NSMutableArray* result = (NSMutableArray*)value ;
    self->serviceAnswer = result ;
    [self setFaulty:FALSE];
	NSLog(@"ContractDisplayExtract returned the value: %@", self->serviceAnswer);
    
}


@end
