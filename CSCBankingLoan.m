/*
	CSCBankingLoan.h
	The implementation of properties and methods for the CSCBankingLoan object.
	Generated by SudzC.com
*/
#import "CSCBankingLoan.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
#import "CSCArrayOfLoanInstalment.h"
#import "CSCOrganization.h"
#import "CSCArrayOfBankingLoanRole.h"
@implementation CSCBankingLoan
	@synthesize DisplayId = _DisplayId;
	@synthesize EffectiveDate = _EffectiveDate;
	@synthesize EndDate = _EndDate;
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize StartDate = _StartDate;
	@synthesize AmortizationTable = _AmortizationTable;
	@synthesize Amount = _Amount;
	@synthesize DelayedAmortization = _DelayedAmortization;
	@synthesize Duration = _Duration;
	@synthesize Identifier = _Identifier;
	@synthesize InterestRate = _InterestRate;
	@synthesize LenderOrganization = _LenderOrganization;
	@synthesize LoanMode = _LoanMode;
	@synthesize LoanModeLabel = _LoanModeLabel;
	@synthesize LoanType = _LoanType;
	@synthesize RateMode = _RateMode;
	@synthesize RateType = _RateType;
	@synthesize RefundDifferedInterests = _RefundDifferedInterests;
	@synthesize RefundsFrequency = _RefundsFrequency;
	@synthesize RefundsFrequencyLabel = _RefundsFrequencyLabel;
	@synthesize ReleasingDate = _ReleasingDate;
	@synthesize RoleList = _RoleList;

	- (id) init
	{
		if(self = [super init])
		{
			self.DisplayId = nil;
			self.EffectiveDate = nil;
			self.EndDate = nil;
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.StartDate = nil;
			self.AmortizationTable = [[NSMutableArray alloc] init];
			self.Amount = nil;
			self.Identifier = nil;
			self.InterestRate = nil;
			self.LenderOrganization = nil; // [[CSCOrganization alloc] init];
			self.LoanMode = nil;
			self.LoanModeLabel = nil;
			self.LoanType = nil;
			self.RateMode = nil;
			self.RateType = nil;
			self.RefundsFrequency = nil;
			self.RefundsFrequencyLabel = nil;
			self.ReleasingDate = nil;
			self.RoleList = [[NSMutableArray alloc] init];

		}
		return self;
	}

	+ (CSCBankingLoan*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCBankingLoan*)[[CSCBankingLoan alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.DisplayId = [Soap getNodeValue: node withName: @"DisplayId"];
			self.EffectiveDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EffectiveDate"]];
			self.EndDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EndDate"]];
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.StartDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"StartDate"]];
			self.AmortizationTable = [[CSCArrayOfLoanInstalment createWithNode: [Soap getNode: node withName: @"AmortizationTable"]] object];
			self.Amount = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"Amount"]];
			self.DelayedAmortization = [[Soap getNodeValue: node withName: @"DelayedAmortization"] intValue];
			self.Duration = [[Soap getNodeValue: node withName: @"Duration"] intValue];
			self.Identifier = [Soap getNodeValue: node withName: @"Identifier"];
			self.InterestRate = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"InterestRate"]];
			self.LenderOrganization = [[CSCOrganization createWithNode: [Soap getNode: node withName: @"LenderOrganization"]] object];
			self.LoanMode = [Soap getNodeValue: node withName: @"LoanMode"];
			self.LoanModeLabel = [Soap getNodeValue: node withName: @"LoanModeLabel"];
			self.LoanType = [Soap getNodeValue: node withName: @"LoanType"];
			self.RateMode = [Soap getNodeValue: node withName: @"RateMode"];
			self.RateType = [Soap getNodeValue: node withName: @"RateType"];
			self.RefundDifferedInterests = [[Soap getNodeValue: node withName: @"RefundDifferedInterests"] boolValue];
			self.RefundsFrequency = [Soap getNodeValue: node withName: @"RefundsFrequency"];
			self.RefundsFrequencyLabel = [Soap getNodeValue: node withName: @"RefundsFrequencyLabel"];
			self.ReleasingDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"ReleasingDate"]];
			self.RoleList = [[CSCArrayOfBankingLoanRole createWithNode: [Soap getNode: node withName: @"RoleList"]] object];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"BankingLoan"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.DisplayId != nil) [s appendFormat: @"<DisplayId>%@</DisplayId>", [[self.DisplayId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EffectiveDate != nil) [s appendFormat: @"<EffectiveDate>%@</EffectiveDate>", [Soap getDateString: self.EffectiveDate]];
		if (self.EndDate != nil) [s appendFormat: @"<EndDate>%@</EndDate>", [Soap getDateString: self.EndDate]];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.StartDate != nil) [s appendFormat: @"<StartDate>%@</StartDate>", [Soap getDateString: self.StartDate]];
		if (self.AmortizationTable != nil && self.AmortizationTable.count > 0) {
			[s appendFormat: @"<AmortizationTable>%@</AmortizationTable>", [CSCArrayOfLoanInstalment serialize: self.AmortizationTable]];
		} else {
			[s appendString: @"<AmortizationTable/>"];
		}
		if (self.Amount != nil) [s appendFormat: @"<Amount>%@</Amount>", [NSString stringWithFormat: @"%@", self.Amount]];
		[s appendFormat: @"<DelayedAmortization>%@</DelayedAmortization>", [NSString stringWithFormat: @"%i", self.DelayedAmortization]];
		[s appendFormat: @"<Duration>%@</Duration>", [NSString stringWithFormat: @"%i", self.Duration]];
		if (self.Identifier != nil) [s appendFormat: @"<Identifier>%@</Identifier>", [[self.Identifier stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.InterestRate != nil) [s appendFormat: @"<InterestRate>%@</InterestRate>", [NSString stringWithFormat: @"%@", self.InterestRate]];
		if (self.LenderOrganization != nil) [s appendString: [self.LenderOrganization serialize: @"LenderOrganization"]];
		if (self.LoanMode != nil) [s appendFormat: @"<LoanMode>%@</LoanMode>", [[self.LoanMode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.LoanModeLabel != nil) [s appendFormat: @"<LoanModeLabel>%@</LoanModeLabel>", [[self.LoanModeLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.LoanType != nil) [s appendFormat: @"<LoanType>%@</LoanType>", [[self.LoanType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.RateMode != nil) [s appendFormat: @"<RateMode>%@</RateMode>", [[self.RateMode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.RateType != nil) [s appendFormat: @"<RateType>%@</RateType>", [[self.RateType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<RefundDifferedInterests>%@</RefundDifferedInterests>", (self.RefundDifferedInterests)?@"true":@"false"];
		if (self.RefundsFrequency != nil) [s appendFormat: @"<RefundsFrequency>%@</RefundsFrequency>", [[self.RefundsFrequency stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.RefundsFrequencyLabel != nil) [s appendFormat: @"<RefundsFrequencyLabel>%@</RefundsFrequencyLabel>", [[self.RefundsFrequencyLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ReleasingDate != nil) [s appendFormat: @"<ReleasingDate>%@</ReleasingDate>", [Soap getDateString: self.ReleasingDate]];
		if (self.RoleList != nil && self.RoleList.count > 0) {
			[s appendFormat: @"<RoleList>%@</RoleList>", [CSCArrayOfBankingLoanRole serialize: self.RoleList]];
		} else {
			[s appendString: @"<RoleList/>"];
		}

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCBankingLoan class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
