/*
	CSCPremium.h
	The implementation of properties and methods for the CSCPremium object.
	Generated by SudzC.com
*/
#import "CSCPremium.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
#import "CSCBilling.h"
@implementation CSCPremium
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize Billing = _Billing;
	@synthesize DirectDebitDate = _DirectDebitDate;
	@synthesize InvestedAmount = _InvestedAmount;
	@synthesize PaymentType = _PaymentType;
	@synthesize Status = _Status;
	@synthesize Type = _Type;
	@synthesize TypeLabel = _TypeLabel;

	- (id) init
	{
		if(self = [super init])
		{
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.Billing = nil; // [[CSCBilling alloc] init];
			self.DirectDebitDate = nil;
			self.InvestedAmount = nil;
			self.PaymentType = nil;
			self.Status = nil;
			self.Type = nil;
			self.TypeLabel = nil;

		}
		return self;
	}

	+ (CSCPremium*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCPremium*)[[CSCPremium alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.Billing = [[CSCBilling createWithNode: [Soap getNode: node withName: @"Billing"]] object];
			self.DirectDebitDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"DirectDebitDate"]];
			self.InvestedAmount = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"InvestedAmount"]];
			self.PaymentType = [Soap getNodeValue: node withName: @"PaymentType"];
			self.Status = [Soap getNodeValue: node withName: @"Status"];
			self.Type = [Soap getNodeValue: node withName: @"Type"];
			self.TypeLabel = [Soap getNodeValue: node withName: @"TypeLabel"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Premium"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.Billing != nil) [s appendString: [self.Billing serialize: @"Billing"]];
		if (self.DirectDebitDate != nil) [s appendFormat: @"<DirectDebitDate>%@</DirectDebitDate>", [Soap getDateString: self.DirectDebitDate]];
		if (self.InvestedAmount != nil) [s appendFormat: @"<InvestedAmount>%@</InvestedAmount>", [NSString stringWithFormat: @"%@", self.InvestedAmount]];
		if (self.PaymentType != nil) [s appendFormat: @"<PaymentType>%@</PaymentType>", [[self.PaymentType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Status != nil) [s appendFormat: @"<Status>%@</Status>", [[self.Status stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Type != nil) [s appendFormat: @"<Type>%@</Type>", [[self.Type stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.TypeLabel != nil) [s appendFormat: @"<TypeLabel>%@</TypeLabel>", [[self.TypeLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCPremium class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
