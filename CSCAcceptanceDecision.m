/*
	CSCAcceptanceDecision.h
	The implementation of properties and methods for the CSCAcceptanceDecision object.
	Generated by SudzC.com
*/
#import "CSCAcceptanceDecision.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
#import "CSCAdditionalClauseDetail.h"
#import "CSCArrayOfAdditionalClauseDetail.h"
#import "CSCExtraPremiumDetail.h"
#import "CSCArrayOfExtraPremiumDetail.h"
@implementation CSCAcceptanceDecision
	@synthesize DisplayId = _DisplayId;
	@synthesize EffectiveDate = _EffectiveDate;
	@synthesize EndDate = _EndDate;
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize StartDate = _StartDate;
	@synthesize AdditionalClauseDetail = _AdditionalClauseDetail;
	@synthesize AdditionalClauseDetailList = _AdditionalClauseDetailList;
	@synthesize CoverageIdentifier = _CoverageIdentifier;
	@synthesize DeferralDurationMonth = _DeferralDurationMonth;
	@synthesize DeferralDurationYear = _DeferralDurationYear;
	@synthesize ExtraPremiumDetail = _ExtraPremiumDetail;
	@synthesize ExtraPremiumDetailList = _ExtraPremiumDetailList;
	@synthesize Motive = _Motive;
	@synthesize Type = _Type;

	- (id) init
	{
		if(self = [super init])
		{
			self.DisplayId = nil;
			self.EffectiveDate = nil;
			self.EndDate = nil;
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.StartDate = nil;
			self.AdditionalClauseDetail = nil; // [[CSCAdditionalClauseDetail alloc] init];
			self.AdditionalClauseDetailList = [[NSMutableArray alloc] init];
			self.CoverageIdentifier = nil;
			self.DeferralDurationMonth = nil;
			self.DeferralDurationYear = nil;
			self.ExtraPremiumDetail = nil; // [[CSCExtraPremiumDetail alloc] init];
			self.ExtraPremiumDetailList = [[NSMutableArray alloc] init];
			self.Motive = nil;
			self.Type = nil;

		}
		return self;
	}

	+ (CSCAcceptanceDecision*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCAcceptanceDecision*)[[CSCAcceptanceDecision alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.DisplayId = [Soap getNodeValue: node withName: @"DisplayId"];
			self.EffectiveDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EffectiveDate"]];
			self.EndDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EndDate"]];
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.StartDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"StartDate"]];
			self.AdditionalClauseDetail = [[CSCAdditionalClauseDetail createWithNode: [Soap getNode: node withName: @"AdditionalClauseDetail"]] object];
			self.AdditionalClauseDetailList = [[CSCArrayOfAdditionalClauseDetail createWithNode: [Soap getNode: node withName: @"AdditionalClauseDetailList"]] object];
			self.CoverageIdentifier = [Soap getNodeValue: node withName: @"CoverageIdentifier"];
			self.DeferralDurationMonth = [Soap getNodeValue: node withName: @"DeferralDurationMonth"];
			self.DeferralDurationYear = [Soap getNodeValue: node withName: @"DeferralDurationYear"];
			self.ExtraPremiumDetail = [[CSCExtraPremiumDetail createWithNode: [Soap getNode: node withName: @"ExtraPremiumDetail"]] object];
			self.ExtraPremiumDetailList = [[CSCArrayOfExtraPremiumDetail createWithNode: [Soap getNode: node withName: @"ExtraPremiumDetailList"]] object];
			self.Motive = [Soap getNodeValue: node withName: @"Motive"];
			self.Type = [Soap getNodeValue: node withName: @"Type"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"AcceptanceDecision"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.DisplayId != nil) [s appendFormat: @"<DisplayId>%@</DisplayId>", [[self.DisplayId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EffectiveDate != nil) [s appendFormat: @"<EffectiveDate>%@</EffectiveDate>", [Soap getDateString: self.EffectiveDate]];
		if (self.EndDate != nil) [s appendFormat: @"<EndDate>%@</EndDate>", [Soap getDateString: self.EndDate]];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.StartDate != nil) [s appendFormat: @"<StartDate>%@</StartDate>", [Soap getDateString: self.StartDate]];
		if (self.AdditionalClauseDetail != nil) [s appendString: [self.AdditionalClauseDetail serialize: @"AdditionalClauseDetail"]];
		if (self.AdditionalClauseDetailList != nil && self.AdditionalClauseDetailList.count > 0) {
			[s appendFormat: @"<AdditionalClauseDetailList>%@</AdditionalClauseDetailList>", [CSCArrayOfAdditionalClauseDetail serialize: self.AdditionalClauseDetailList]];
		} else {
			[s appendString: @"<AdditionalClauseDetailList/>"];
		}
		if (self.CoverageIdentifier != nil) [s appendFormat: @"<CoverageIdentifier>%@</CoverageIdentifier>", [[self.CoverageIdentifier stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.DeferralDurationMonth != nil) [s appendFormat: @"<DeferralDurationMonth>%@</DeferralDurationMonth>", [[self.DeferralDurationMonth stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.DeferralDurationYear != nil) [s appendFormat: @"<DeferralDurationYear>%@</DeferralDurationYear>", [[self.DeferralDurationYear stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ExtraPremiumDetail != nil) [s appendString: [self.ExtraPremiumDetail serialize: @"ExtraPremiumDetail"]];
		if (self.ExtraPremiumDetailList != nil && self.ExtraPremiumDetailList.count > 0) {
			[s appendFormat: @"<ExtraPremiumDetailList>%@</ExtraPremiumDetailList>", [CSCArrayOfExtraPremiumDetail serialize: self.ExtraPremiumDetailList]];
		} else {
			[s appendString: @"<ExtraPremiumDetailList/>"];
		}
		if (self.Motive != nil) [s appendFormat: @"<Motive>%@</Motive>", [[self.Motive stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Type != nil) [s appendFormat: @"<Type>%@</Type>", [[self.Type stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCAcceptanceDecision class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
