/*
	CSCRegimeObligatoire.h
	The implementation of properties and methods for the CSCRegimeObligatoire object.
	Generated by SudzC.com
*/
#import "CSCRegimeObligatoire.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
#import "CSCPerson.h"
#import "CSCPostalAddress.h"
#import "CSCPerson.h"
#import "CSCBankAccount.h"
#import "CSCArrayOfPartyRole.h"
#import "CSCPerson.h"
@implementation CSCRegimeObligatoire
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize AccordNoemie = _AccordNoemie;
	@synthesize Addressee = _Addressee;
	@synthesize AddresseePostalAddress = _AddresseePostalAddress;
	@synthesize Categorie = _Categorie;
	@synthesize Code = _Code;
	@synthesize CodeCaisse = _CodeCaisse;
	@synthesize CodeCentre = _CodeCentre;
	@synthesize CodeCle = _CodeCle;
	@synthesize CodeRegime = _CodeRegime;
	@synthesize DateNaissance = _DateNaissance;
	@synthesize Exoneration = _Exoneration;
	@synthesize IdentifiantRegime = _IdentifiantRegime;
	@synthesize Payee = _Payee;
	@synthesize PayeeBankAccount = _PayeeBankAccount;
	@synthesize Preferred = _Preferred;
	@synthesize Qualite = _Qualite;
	@synthesize RangAssurance = _RangAssurance;
	@synthesize RangLaser = _RangLaser;
	@synthesize RoleList = _RoleList;
	@synthesize SocialInsured = _SocialInsured;
	@synthesize Status = _Status;
	@synthesize StatusDate = _StatusDate;

	- (id) init
	{
		if(self = [super init])
		{
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.AccordNoemie = nil;
			self.Addressee = nil; // [[CSCPerson alloc] init];
			self.AddresseePostalAddress = nil; // [[CSCPostalAddress alloc] init];
			self.Categorie = nil;
			self.Code = nil;
			self.CodeCaisse = nil;
			self.CodeCentre = nil;
			self.CodeCle = nil;
			self.CodeRegime = nil;
			self.DateNaissance = nil;
			self.Exoneration = nil;
			self.IdentifiantRegime = nil;
			self.Payee = nil; // [[CSCPerson alloc] init];
			self.PayeeBankAccount = nil; // [[CSCBankAccount alloc] init];
			self.Qualite = nil;
			self.RoleList = [[NSMutableArray alloc] init];
			self.SocialInsured = nil; // [[CSCPerson alloc] init];
			self.Status = nil;
			self.StatusDate = nil;

		}
		return self;
	}

	+ (CSCRegimeObligatoire*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCRegimeObligatoire*)[[CSCRegimeObligatoire alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.AccordNoemie = [Soap getNodeValue: node withName: @"AccordNoemie"];
			self.Addressee = [[CSCPerson createWithNode: [Soap getNode: node withName: @"Addressee"]] object];
			self.AddresseePostalAddress = [[CSCPostalAddress createWithNode: [Soap getNode: node withName: @"AddresseePostalAddress"]] object];
			self.Categorie = [Soap getNodeValue: node withName: @"Categorie"];
			self.Code = [Soap getNodeValue: node withName: @"Code"];
			self.CodeCaisse = [Soap getNodeValue: node withName: @"CodeCaisse"];
			self.CodeCentre = [Soap getNodeValue: node withName: @"CodeCentre"];
			self.CodeCle = [Soap getNodeValue: node withName: @"CodeCle"];
			self.CodeRegime = [Soap getNodeValue: node withName: @"CodeRegime"];
			self.DateNaissance = [Soap getNodeValue: node withName: @"DateNaissance"];
			self.Exoneration = [Soap getNodeValue: node withName: @"Exoneration"];
			self.IdentifiantRegime = [Soap getNodeValue: node withName: @"IdentifiantRegime"];
			self.Payee = [[CSCPerson createWithNode: [Soap getNode: node withName: @"Payee"]] object];
			self.PayeeBankAccount = [[CSCBankAccount createWithNode: [Soap getNode: node withName: @"PayeeBankAccount"]] object];
			self.Preferred = [[Soap getNodeValue: node withName: @"Preferred"] boolValue];
			self.Qualite = [Soap getNodeValue: node withName: @"Qualite"];
			self.RangAssurance = [[Soap getNodeValue: node withName: @"RangAssurance"] intValue];
			self.RangLaser = [[Soap getNodeValue: node withName: @"RangLaser"] intValue];
			self.RoleList = [[CSCArrayOfPartyRole createWithNode: [Soap getNode: node withName: @"RoleList"]] object];
			self.SocialInsured = [[CSCPerson createWithNode: [Soap getNode: node withName: @"SocialInsured"]] object];
			self.Status = [Soap getNodeValue: node withName: @"Status"];
			self.StatusDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"StatusDate"]];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"RegimeObligatoire"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.AccordNoemie != nil) [s appendFormat: @"<AccordNoemie>%@</AccordNoemie>", [[self.AccordNoemie stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Addressee != nil) [s appendString: [self.Addressee serialize: @"Addressee"]];
		if (self.AddresseePostalAddress != nil) [s appendString: [self.AddresseePostalAddress serialize: @"AddresseePostalAddress"]];
		if (self.Categorie != nil) [s appendFormat: @"<Categorie>%@</Categorie>", [[self.Categorie stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Code != nil) [s appendFormat: @"<Code>%@</Code>", [[self.Code stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CodeCaisse != nil) [s appendFormat: @"<CodeCaisse>%@</CodeCaisse>", [[self.CodeCaisse stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CodeCentre != nil) [s appendFormat: @"<CodeCentre>%@</CodeCentre>", [[self.CodeCentre stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CodeCle != nil) [s appendFormat: @"<CodeCle>%@</CodeCle>", [[self.CodeCle stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CodeRegime != nil) [s appendFormat: @"<CodeRegime>%@</CodeRegime>", [[self.CodeRegime stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.DateNaissance != nil) [s appendFormat: @"<DateNaissance>%@</DateNaissance>", [[self.DateNaissance stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Exoneration != nil) [s appendFormat: @"<Exoneration>%@</Exoneration>", [[self.Exoneration stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.IdentifiantRegime != nil) [s appendFormat: @"<IdentifiantRegime>%@</IdentifiantRegime>", [[self.IdentifiantRegime stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Payee != nil) [s appendString: [self.Payee serialize: @"Payee"]];
		if (self.PayeeBankAccount != nil) [s appendString: [self.PayeeBankAccount serialize: @"PayeeBankAccount"]];
		[s appendFormat: @"<Preferred>%@</Preferred>", (self.Preferred)?@"true":@"false"];
		if (self.Qualite != nil) [s appendFormat: @"<Qualite>%@</Qualite>", [[self.Qualite stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<RangAssurance>%@</RangAssurance>", [NSString stringWithFormat: @"%i", self.RangAssurance]];
		[s appendFormat: @"<RangLaser>%@</RangLaser>", [NSString stringWithFormat: @"%i", self.RangLaser]];
		if (self.RoleList != nil && self.RoleList.count > 0) {
			[s appendFormat: @"<RoleList>%@</RoleList>", [CSCArrayOfPartyRole serialize: self.RoleList]];
		} else {
			[s appendString: @"<RoleList/>"];
		}
		if (self.SocialInsured != nil) [s appendString: [self.SocialInsured serialize: @"SocialInsured"]];
		if (self.Status != nil) [s appendFormat: @"<Status>%@</Status>", [[self.Status stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.StatusDate != nil) [s appendFormat: @"<StatusDate>%@</StatusDate>", [Soap getDateString: self.StatusDate]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCRegimeObligatoire class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
