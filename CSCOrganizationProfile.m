/*
	CSCOrganizationProfile.h
	The implementation of properties and methods for the CSCOrganizationProfile object.
	Generated by SudzC.com
*/
#import "CSCOrganizationProfile.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
@implementation CSCOrganizationProfile
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize DomesticRate = _DomesticRate;
	@synthesize ExecutivePayroll = _ExecutivePayroll;
	@synthesize HeadCount = _HeadCount;
	@synthesize Imposition = _Imposition;
	@synthesize InternationalRate = _InternationalRate;
	@synthesize LumpSum = _LumpSum;
	@synthesize NonExecutivePayroll = _NonExecutivePayroll;
	@synthesize ProfitAmount = _ProfitAmount;
	@synthesize TurnoverAmount = _TurnoverAmount;
	@synthesize TurnoverProgressionRate = _TurnoverProgressionRate;

	- (id) init
	{
		if(self = [super init])
		{
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.DomesticRate = nil;
			self.Imposition = nil;
			self.InternationalRate = nil;
			self.LumpSum = nil;
			self.ProfitAmount = nil;
			self.TurnoverAmount = nil;
			self.TurnoverProgressionRate = nil;

		}
		return self;
	}

	+ (CSCOrganizationProfile*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCOrganizationProfile*)[[CSCOrganizationProfile alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.DomesticRate = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"DomesticRate"]];
			self.ExecutivePayroll = [[Soap getNodeValue: node withName: @"ExecutivePayroll"] intValue];
			self.HeadCount = [[Soap getNodeValue: node withName: @"HeadCount"] intValue];
			self.Imposition = [Soap getNodeValue: node withName: @"Imposition"];
			self.InternationalRate = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"InternationalRate"]];
			self.LumpSum = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"LumpSum"]];
			self.NonExecutivePayroll = [[Soap getNodeValue: node withName: @"NonExecutivePayroll"] intValue];
			self.ProfitAmount = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"ProfitAmount"]];
			self.TurnoverAmount = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"TurnoverAmount"]];
			self.TurnoverProgressionRate = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"TurnoverProgressionRate"]];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"OrganizationProfile"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.DomesticRate != nil) [s appendFormat: @"<DomesticRate>%@</DomesticRate>", [NSString stringWithFormat: @"%@", self.DomesticRate]];
		[s appendFormat: @"<ExecutivePayroll>%@</ExecutivePayroll>", [NSString stringWithFormat: @"%i", self.ExecutivePayroll]];
		[s appendFormat: @"<HeadCount>%@</HeadCount>", [NSString stringWithFormat: @"%i", self.HeadCount]];
		if (self.Imposition != nil) [s appendFormat: @"<Imposition>%@</Imposition>", [[self.Imposition stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.InternationalRate != nil) [s appendFormat: @"<InternationalRate>%@</InternationalRate>", [NSString stringWithFormat: @"%@", self.InternationalRate]];
		if (self.LumpSum != nil) [s appendFormat: @"<LumpSum>%@</LumpSum>", [NSString stringWithFormat: @"%@", self.LumpSum]];
		[s appendFormat: @"<NonExecutivePayroll>%@</NonExecutivePayroll>", [NSString stringWithFormat: @"%i", self.NonExecutivePayroll]];
		if (self.ProfitAmount != nil) [s appendFormat: @"<ProfitAmount>%@</ProfitAmount>", [NSString stringWithFormat: @"%@", self.ProfitAmount]];
		if (self.TurnoverAmount != nil) [s appendFormat: @"<TurnoverAmount>%@</TurnoverAmount>", [NSString stringWithFormat: @"%@", self.TurnoverAmount]];
		if (self.TurnoverProgressionRate != nil) [s appendFormat: @"<TurnoverProgressionRate>%@</TurnoverProgressionRate>", [NSString stringWithFormat: @"%@", self.TurnoverProgressionRate]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCOrganizationProfile class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
