/*
	CSCQuestionAnswer.h
	The implementation of properties and methods for the CSCQuestionAnswer object.
	Generated by SudzC.com
*/
#import "CSCQuestionAnswer.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
#import "CSCArrayOfQuestionAnswer.h"
@implementation CSCQuestionAnswer
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize AnswerBoolean = _AnswerBoolean;
	@synthesize AnswerDate = _AnswerDate;
	@synthesize AnswerInteger = _AnswerInteger;
	@synthesize AnswerReal = _AnswerReal;
	@synthesize AnswerText = _AnswerText;
	@synthesize AnswerType = _AnswerType;
	@synthesize QuestionAnswerList = _QuestionAnswerList;
	@synthesize QuestionIdentifier = _QuestionIdentifier;
	@synthesize QuestionNo = _QuestionNo;
	@synthesize QuestionText = _QuestionText;

	- (id) init
	{
		if(self = [super init])
		{
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.AnswerDate = nil;
			self.AnswerReal = nil;
			self.AnswerText = nil;
			self.AnswerType = nil;
			self.QuestionAnswerList = [[NSMutableArray alloc] init];
			self.QuestionIdentifier = nil;
			self.QuestionText = nil;

		}
		return self;
	}

	+ (CSCQuestionAnswer*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCQuestionAnswer*)[[CSCQuestionAnswer alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.AnswerBoolean = [[Soap getNodeValue: node withName: @"AnswerBoolean"] boolValue];
			self.AnswerDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"AnswerDate"]];
			self.AnswerInteger = [[Soap getNodeValue: node withName: @"AnswerInteger"] intValue];
			self.AnswerReal = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"AnswerReal"]];
			self.AnswerText = [Soap getNodeValue: node withName: @"AnswerText"];
			self.AnswerType = [Soap getNodeValue: node withName: @"AnswerType"];
			self.QuestionAnswerList = [[CSCArrayOfQuestionAnswer createWithNode: [Soap getNode: node withName: @"QuestionAnswerList"]] object];
			self.QuestionIdentifier = [Soap getNodeValue: node withName: @"QuestionIdentifier"];
			self.QuestionNo = [[Soap getNodeValue: node withName: @"QuestionNo"] intValue];
			self.QuestionText = [Soap getNodeValue: node withName: @"QuestionText"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"QuestionAnswer"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		[s appendFormat: @"<AnswerBoolean>%@</AnswerBoolean>", (self.AnswerBoolean)?@"true":@"false"];
		if (self.AnswerDate != nil) [s appendFormat: @"<AnswerDate>%@</AnswerDate>", [Soap getDateString: self.AnswerDate]];
		[s appendFormat: @"<AnswerInteger>%@</AnswerInteger>", [NSString stringWithFormat: @"%i", self.AnswerInteger]];
		if (self.AnswerReal != nil) [s appendFormat: @"<AnswerReal>%@</AnswerReal>", [NSString stringWithFormat: @"%@", self.AnswerReal]];
		if (self.AnswerText != nil) [s appendFormat: @"<AnswerText>%@</AnswerText>", [[self.AnswerText stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.AnswerType != nil) [s appendFormat: @"<AnswerType>%@</AnswerType>", [[self.AnswerType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.QuestionAnswerList != nil && self.QuestionAnswerList.count > 0) {
			[s appendFormat: @"<QuestionAnswerList>%@</QuestionAnswerList>", [CSCArrayOfQuestionAnswer serialize: self.QuestionAnswerList]];
		} else {
			[s appendString: @"<QuestionAnswerList/>"];
		}
		if (self.QuestionIdentifier != nil) [s appendFormat: @"<QuestionIdentifier>%@</QuestionIdentifier>", [[self.QuestionIdentifier stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<QuestionNo>%@</QuestionNo>", [NSString stringWithFormat: @"%i", self.QuestionNo]];
		if (self.QuestionText != nil) [s appendFormat: @"<QuestionText>%@</QuestionText>", [[self.QuestionText stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCQuestionAnswer class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
