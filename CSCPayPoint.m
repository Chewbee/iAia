/*
	CSCPayPoint.h
	The implementation of properties and methods for the CSCPayPoint object.
	Generated by SudzC.com
*/
#import "CSCPayPoint.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
#import "CSCOrganization.h"
#import "CSCOrganization.h"
#import "CSCOrganization.h"
#import "CSCArrayOfEmployeeGroup.h"
#import "CSCOrganization.h"
@implementation CSCPayPoint
	@synthesize DisplayId = _DisplayId;
	@synthesize EffectiveDate = _EffectiveDate;
	@synthesize EndDate = _EndDate;
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize StartDate = _StartDate;
	@synthesize AdjusmentMode = _AdjusmentMode;
	@synthesize AdjustmentDeclarer = _AdjustmentDeclarer;
	@synthesize AdjustmentMethod = _AdjustmentMethod;
	@synthesize AdjustmentType = _AdjustmentType;
	@synthesize BillReceiver = _BillReceiver;
	@synthesize CalculationMethod = _CalculationMethod;
	@synthesize CalculationMode = _CalculationMode;
	@synthesize Channel = _Channel;
	@synthesize Client = _Client;
	@synthesize Declarer = _Declarer;
	@synthesize EmployeeGroupList = _EmployeeGroupList;
	@synthesize FrequencyType = _FrequencyType;
	@synthesize Identifier = _Identifier;
	@synthesize Label = _Label;
	@synthesize Payer = _Payer;

	- (id) init
	{
		if(self = [super init])
		{
			self.DisplayId = nil;
			self.EffectiveDate = nil;
			self.EndDate = nil;
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.StartDate = nil;
			self.AdjusmentMode = nil;
			self.AdjustmentDeclarer = nil; // [[CSCOrganization alloc] init];
			self.AdjustmentMethod = nil;
			self.AdjustmentType = nil;
			self.BillReceiver = nil;
			self.CalculationMethod = nil;
			self.CalculationMode = nil;
			self.Channel = nil;
			self.Client = nil; // [[CSCOrganization alloc] init];
			self.Declarer = nil; // [[CSCOrganization alloc] init];
			self.EmployeeGroupList = [[NSMutableArray alloc] init];
			self.FrequencyType = nil;
			self.Identifier = nil;
			self.Label = nil;
			self.Payer = nil; // [[CSCOrganization alloc] init];

		}
		return self;
	}

	+ (CSCPayPoint*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCPayPoint*)[[CSCPayPoint alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.DisplayId = [Soap getNodeValue: node withName: @"DisplayId"];
			self.EffectiveDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EffectiveDate"]];
			self.EndDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EndDate"]];
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.StartDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"StartDate"]];
			self.AdjusmentMode = [Soap getNodeValue: node withName: @"AdjusmentMode"];
			self.AdjustmentDeclarer = [[CSCOrganization createWithNode: [Soap getNode: node withName: @"AdjustmentDeclarer"]] object];
			self.AdjustmentMethod = [Soap getNodeValue: node withName: @"AdjustmentMethod"];
			self.AdjustmentType = [Soap getNodeValue: node withName: @"AdjustmentType"];
			self.BillReceiver = [Soap getNodeValue: node withName: @"BillReceiver"];
			self.CalculationMethod = [Soap getNodeValue: node withName: @"CalculationMethod"];
			self.CalculationMode = [Soap getNodeValue: node withName: @"CalculationMode"];
			self.Channel = [Soap getNodeValue: node withName: @"Channel"];
			self.Client = [[CSCOrganization createWithNode: [Soap getNode: node withName: @"Client"]] object];
			self.Declarer = [[CSCOrganization createWithNode: [Soap getNode: node withName: @"Declarer"]] object];
			self.EmployeeGroupList = [[CSCArrayOfEmployeeGroup createWithNode: [Soap getNode: node withName: @"EmployeeGroupList"]] object];
			self.FrequencyType = [Soap getNodeValue: node withName: @"FrequencyType"];
			self.Identifier = [Soap getNodeValue: node withName: @"Identifier"];
			self.Label = [Soap getNodeValue: node withName: @"Label"];
			self.Payer = [[CSCOrganization createWithNode: [Soap getNode: node withName: @"Payer"]] object];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"PayPoint"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.DisplayId != nil) [s appendFormat: @"<DisplayId>%@</DisplayId>", [[self.DisplayId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EffectiveDate != nil) [s appendFormat: @"<EffectiveDate>%@</EffectiveDate>", [Soap getDateString: self.EffectiveDate]];
		if (self.EndDate != nil) [s appendFormat: @"<EndDate>%@</EndDate>", [Soap getDateString: self.EndDate]];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.StartDate != nil) [s appendFormat: @"<StartDate>%@</StartDate>", [Soap getDateString: self.StartDate]];
		if (self.AdjusmentMode != nil) [s appendFormat: @"<AdjusmentMode>%@</AdjusmentMode>", [[self.AdjusmentMode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.AdjustmentDeclarer != nil) [s appendString: [self.AdjustmentDeclarer serialize: @"AdjustmentDeclarer"]];
		if (self.AdjustmentMethod != nil) [s appendFormat: @"<AdjustmentMethod>%@</AdjustmentMethod>", [[self.AdjustmentMethod stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.AdjustmentType != nil) [s appendFormat: @"<AdjustmentType>%@</AdjustmentType>", [[self.AdjustmentType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.BillReceiver != nil) [s appendFormat: @"<BillReceiver>%@</BillReceiver>", [[self.BillReceiver stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CalculationMethod != nil) [s appendFormat: @"<CalculationMethod>%@</CalculationMethod>", [[self.CalculationMethod stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CalculationMode != nil) [s appendFormat: @"<CalculationMode>%@</CalculationMode>", [[self.CalculationMode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Channel != nil) [s appendFormat: @"<Channel>%@</Channel>", [[self.Channel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Client != nil) [s appendString: [self.Client serialize: @"Client"]];
		if (self.Declarer != nil) [s appendString: [self.Declarer serialize: @"Declarer"]];
		if (self.EmployeeGroupList != nil && self.EmployeeGroupList.count > 0) {
			[s appendFormat: @"<EmployeeGroupList>%@</EmployeeGroupList>", [CSCArrayOfEmployeeGroup serialize: self.EmployeeGroupList]];
		} else {
			[s appendString: @"<EmployeeGroupList/>"];
		}
		if (self.FrequencyType != nil) [s appendFormat: @"<FrequencyType>%@</FrequencyType>", [[self.FrequencyType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Identifier != nil) [s appendFormat: @"<Identifier>%@</Identifier>", [[self.Identifier stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Label != nil) [s appendFormat: @"<Label>%@</Label>", [[self.Label stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Payer != nil) [s appendString: [self.Payer serialize: @"Payer"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCPayPoint class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
