/*
	CSCSettlementItem.h
	The implementation of properties and methods for the CSCSettlementItem object.
	Generated by SudzC.com
*/
#import "CSCSettlementItem.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
@implementation CSCSettlementItem
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize Amount = _Amount;
	@synthesize Denominator = _Denominator;
	@synthesize DistributionMethod = _DistributionMethod;
	@synthesize DistributionMethodLabel = _DistributionMethodLabel;
	@synthesize EndDate = _EndDate;
	@synthesize Frequency = _Frequency;
	@synthesize FrequencyLabel = _FrequencyLabel;
	@synthesize Identifier = _Identifier;
	@synthesize Label = _Label;
	@synthesize Numerator = _Numerator;
	@synthesize Rate = _Rate;
	@synthesize StartDate = _StartDate;
	@synthesize Type = _Type;
	@synthesize TypeLabel = _TypeLabel;

	- (id) init
	{
		if(self = [super init])
		{
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.Amount = nil;
			self.DistributionMethod = nil;
			self.DistributionMethodLabel = nil;
			self.EndDate = nil;
			self.Frequency = nil;
			self.FrequencyLabel = nil;
			self.Identifier = nil;
			self.Label = nil;
			self.Rate = nil;
			self.StartDate = nil;
			self.Type = nil;
			self.TypeLabel = nil;

		}
		return self;
	}

	+ (CSCSettlementItem*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCSettlementItem*)[[CSCSettlementItem alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.Amount = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"Amount"]];
			self.Denominator = [[Soap getNodeValue: node withName: @"Denominator"] intValue];
			self.DistributionMethod = [Soap getNodeValue: node withName: @"DistributionMethod"];
			self.DistributionMethodLabel = [Soap getNodeValue: node withName: @"DistributionMethodLabel"];
			self.EndDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EndDate"]];
			self.Frequency = [Soap getNodeValue: node withName: @"Frequency"];
			self.FrequencyLabel = [Soap getNodeValue: node withName: @"FrequencyLabel"];
			self.Identifier = [Soap getNodeValue: node withName: @"Identifier"];
			self.Label = [Soap getNodeValue: node withName: @"Label"];
			self.Numerator = [[Soap getNodeValue: node withName: @"Numerator"] intValue];
			self.Rate = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"Rate"]];
			self.StartDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"StartDate"]];
			self.Type = [Soap getNodeValue: node withName: @"Type"];
			self.TypeLabel = [Soap getNodeValue: node withName: @"TypeLabel"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"SettlementItem"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.Amount != nil) [s appendFormat: @"<Amount>%@</Amount>", [NSString stringWithFormat: @"%@", self.Amount]];
		[s appendFormat: @"<Denominator>%@</Denominator>", [NSString stringWithFormat: @"%i", self.Denominator]];
		if (self.DistributionMethod != nil) [s appendFormat: @"<DistributionMethod>%@</DistributionMethod>", [[self.DistributionMethod stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.DistributionMethodLabel != nil) [s appendFormat: @"<DistributionMethodLabel>%@</DistributionMethodLabel>", [[self.DistributionMethodLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EndDate != nil) [s appendFormat: @"<EndDate>%@</EndDate>", [Soap getDateString: self.EndDate]];
		if (self.Frequency != nil) [s appendFormat: @"<Frequency>%@</Frequency>", [[self.Frequency stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.FrequencyLabel != nil) [s appendFormat: @"<FrequencyLabel>%@</FrequencyLabel>", [[self.FrequencyLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Identifier != nil) [s appendFormat: @"<Identifier>%@</Identifier>", [[self.Identifier stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Label != nil) [s appendFormat: @"<Label>%@</Label>", [[self.Label stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<Numerator>%@</Numerator>", [NSString stringWithFormat: @"%i", self.Numerator]];
		if (self.Rate != nil) [s appendFormat: @"<Rate>%@</Rate>", [NSString stringWithFormat: @"%@", self.Rate]];
		if (self.StartDate != nil) [s appendFormat: @"<StartDate>%@</StartDate>", [Soap getDateString: self.StartDate]];
		if (self.Type != nil) [s appendFormat: @"<Type>%@</Type>", [[self.Type stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.TypeLabel != nil) [s appendFormat: @"<TypeLabel>%@</TypeLabel>", [[self.TypeLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCSettlementItem class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
