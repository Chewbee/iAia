/*
	CSCInjuryCompensation.h
	The implementation of properties and methods for the CSCInjuryCompensation object.
	Generated by SudzC.com
*/
#import "CSCInjuryCompensation.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
@implementation CSCInjuryCompensation
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize Amount = _Amount;
	@synthesize Code = _Code;
	@synthesize Label = _Label;
	@synthesize LowerValuation = _LowerValuation;
	@synthesize MoneyInAmount = _MoneyInAmount;
	@synthesize RecoveryAmount = _RecoveryAmount;
	@synthesize SettlementAmount = _SettlementAmount;
	@synthesize Type = _Type;
	@synthesize TypeLabel = _TypeLabel;
	@synthesize UpperValuation = _UpperValuation;

	- (id) init
	{
		if(self = [super init])
		{
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.Amount = nil;
			self.Code = nil;
			self.Label = nil;
			self.LowerValuation = nil;
			self.MoneyInAmount = nil;
			self.RecoveryAmount = nil;
			self.SettlementAmount = nil;
			self.Type = nil;
			self.TypeLabel = nil;
			self.UpperValuation = nil;

		}
		return self;
	}

	+ (CSCInjuryCompensation*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCInjuryCompensation*)[[CSCInjuryCompensation alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.Amount = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"Amount"]];
			self.Code = [Soap getNodeValue: node withName: @"Code"];
			self.Label = [Soap getNodeValue: node withName: @"Label"];
			self.LowerValuation = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"LowerValuation"]];
			self.MoneyInAmount = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"MoneyInAmount"]];
			self.RecoveryAmount = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"RecoveryAmount"]];
			self.SettlementAmount = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"SettlementAmount"]];
			self.Type = [Soap getNodeValue: node withName: @"Type"];
			self.TypeLabel = [Soap getNodeValue: node withName: @"TypeLabel"];
			self.UpperValuation = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"UpperValuation"]];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"InjuryCompensation"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.Amount != nil) [s appendFormat: @"<Amount>%@</Amount>", [NSString stringWithFormat: @"%@", self.Amount]];
		if (self.Code != nil) [s appendFormat: @"<Code>%@</Code>", [[self.Code stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Label != nil) [s appendFormat: @"<Label>%@</Label>", [[self.Label stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.LowerValuation != nil) [s appendFormat: @"<LowerValuation>%@</LowerValuation>", [NSString stringWithFormat: @"%@", self.LowerValuation]];
		if (self.MoneyInAmount != nil) [s appendFormat: @"<MoneyInAmount>%@</MoneyInAmount>", [NSString stringWithFormat: @"%@", self.MoneyInAmount]];
		if (self.RecoveryAmount != nil) [s appendFormat: @"<RecoveryAmount>%@</RecoveryAmount>", [NSString stringWithFormat: @"%@", self.RecoveryAmount]];
		if (self.SettlementAmount != nil) [s appendFormat: @"<SettlementAmount>%@</SettlementAmount>", [NSString stringWithFormat: @"%@", self.SettlementAmount]];
		if (self.Type != nil) [s appendFormat: @"<Type>%@</Type>", [[self.Type stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.TypeLabel != nil) [s appendFormat: @"<TypeLabel>%@</TypeLabel>", [[self.TypeLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.UpperValuation != nil) [s appendFormat: @"<UpperValuation>%@</UpperValuation>", [NSString stringWithFormat: @"%@", self.UpperValuation]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCInjuryCompensation class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
