/*
	CSCTaxSystem.h
	The implementation of properties and methods for the CSCTaxSystem object.
	Generated by SudzC.com
*/
#import "CSCTaxSystem.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
#import "CSCArrayOfDeathTax.h"
#import "CSCLoiMadelin.h"
@implementation CSCTaxSystem
	@synthesize DisplayId = _DisplayId;
	@synthesize EffectiveDate = _EffectiveDate;
	@synthesize EndDate = _EndDate;
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize StartDate = _StartDate;
	@synthesize DeathTaxList = _DeathTaxList;
	@synthesize FractionExoneree = _FractionExoneree;
	@synthesize FractionImposee = _FractionImposee;
	@synthesize Identifier = _Identifier;
	@synthesize LoiMadelin = _LoiMadelin;
	@synthesize Option = _Option;
	@synthesize Residence = _Residence;
	@synthesize TotalPrimesExonerees = _TotalPrimesExonerees;
	@synthesize TotalPrimesImposees = _TotalPrimesImposees;
	@synthesize TotalRachatsExoneres = _TotalRachatsExoneres;
	@synthesize TotalRachatsImposes = _TotalRachatsImposes;
	@synthesize TotalSocialContribution = _TotalSocialContribution;

	- (id) init
	{
		if(self = [super init])
		{
			self.DisplayId = nil;
			self.EffectiveDate = nil;
			self.EndDate = nil;
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.StartDate = nil;
			self.DeathTaxList = [[NSMutableArray alloc] init];
			self.FractionExoneree = nil;
			self.FractionImposee = nil;
			self.Identifier = nil;
			self.LoiMadelin = nil; // [[CSCLoiMadelin alloc] init];
			self.Option = nil;
			self.Residence = nil;
			self.TotalPrimesExonerees = nil;
			self.TotalPrimesImposees = nil;
			self.TotalRachatsExoneres = nil;
			self.TotalRachatsImposes = nil;
			self.TotalSocialContribution = nil;

		}
		return self;
	}

	+ (CSCTaxSystem*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCTaxSystem*)[[CSCTaxSystem alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.DisplayId = [Soap getNodeValue: node withName: @"DisplayId"];
			self.EffectiveDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EffectiveDate"]];
			self.EndDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EndDate"]];
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.StartDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"StartDate"]];
			self.DeathTaxList = [[CSCArrayOfDeathTax createWithNode: [Soap getNode: node withName: @"DeathTaxList"]] object];
			self.FractionExoneree = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"FractionExoneree"]];
			self.FractionImposee = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"FractionImposee"]];
			self.Identifier = [Soap getNodeValue: node withName: @"Identifier"];
			self.LoiMadelin = [[CSCLoiMadelin createWithNode: [Soap getNode: node withName: @"LoiMadelin"]] object];
			self.Option = [Soap getNodeValue: node withName: @"Option"];
			self.Residence = [Soap getNodeValue: node withName: @"Residence"];
			self.TotalPrimesExonerees = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"TotalPrimesExonerees"]];
			self.TotalPrimesImposees = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"TotalPrimesImposees"]];
			self.TotalRachatsExoneres = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"TotalRachatsExoneres"]];
			self.TotalRachatsImposes = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"TotalRachatsImposes"]];
			self.TotalSocialContribution = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"TotalSocialContribution"]];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"TaxSystem"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.DisplayId != nil) [s appendFormat: @"<DisplayId>%@</DisplayId>", [[self.DisplayId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EffectiveDate != nil) [s appendFormat: @"<EffectiveDate>%@</EffectiveDate>", [Soap getDateString: self.EffectiveDate]];
		if (self.EndDate != nil) [s appendFormat: @"<EndDate>%@</EndDate>", [Soap getDateString: self.EndDate]];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.StartDate != nil) [s appendFormat: @"<StartDate>%@</StartDate>", [Soap getDateString: self.StartDate]];
		if (self.DeathTaxList != nil && self.DeathTaxList.count > 0) {
			[s appendFormat: @"<DeathTaxList>%@</DeathTaxList>", [CSCArrayOfDeathTax serialize: self.DeathTaxList]];
		} else {
			[s appendString: @"<DeathTaxList/>"];
		}
		if (self.FractionExoneree != nil) [s appendFormat: @"<FractionExoneree>%@</FractionExoneree>", [NSString stringWithFormat: @"%@", self.FractionExoneree]];
		if (self.FractionImposee != nil) [s appendFormat: @"<FractionImposee>%@</FractionImposee>", [NSString stringWithFormat: @"%@", self.FractionImposee]];
		if (self.Identifier != nil) [s appendFormat: @"<Identifier>%@</Identifier>", [[self.Identifier stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.LoiMadelin != nil) [s appendString: [self.LoiMadelin serialize: @"LoiMadelin"]];
		if (self.Option != nil) [s appendFormat: @"<Option>%@</Option>", [[self.Option stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Residence != nil) [s appendFormat: @"<Residence>%@</Residence>", [[self.Residence stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.TotalPrimesExonerees != nil) [s appendFormat: @"<TotalPrimesExonerees>%@</TotalPrimesExonerees>", [NSString stringWithFormat: @"%@", self.TotalPrimesExonerees]];
		if (self.TotalPrimesImposees != nil) [s appendFormat: @"<TotalPrimesImposees>%@</TotalPrimesImposees>", [NSString stringWithFormat: @"%@", self.TotalPrimesImposees]];
		if (self.TotalRachatsExoneres != nil) [s appendFormat: @"<TotalRachatsExoneres>%@</TotalRachatsExoneres>", [NSString stringWithFormat: @"%@", self.TotalRachatsExoneres]];
		if (self.TotalRachatsImposes != nil) [s appendFormat: @"<TotalRachatsImposes>%@</TotalRachatsImposes>", [NSString stringWithFormat: @"%@", self.TotalRachatsImposes]];
		if (self.TotalSocialContribution != nil) [s appendFormat: @"<TotalSocialContribution>%@</TotalSocialContribution>", [NSString stringWithFormat: @"%@", self.TotalSocialContribution]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCTaxSystem class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
