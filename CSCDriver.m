/*
	CSCDriver.h
	The implementation of properties and methods for the CSCDriver object.
	Generated by SudzC.com
*/
#import "CSCDriver.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
#import "CSCPerson.h"
@implementation CSCDriver
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize LicenseDate = _LicenseDate;
	@synthesize LicenseNumber = _LicenseNumber;
	@synthesize Person = _Person;
	@synthesize Relationship = _Relationship;

	- (id) init
	{
		if(self = [super init])
		{
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.LicenseDate = nil;
			self.LicenseNumber = nil;
			self.Person = nil; // [[CSCPerson alloc] init];
			self.Relationship = nil;

		}
		return self;
	}

	+ (CSCDriver*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCDriver*)[[CSCDriver alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.LicenseDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"LicenseDate"]];
			self.LicenseNumber = [Soap getNodeValue: node withName: @"LicenseNumber"];
			self.Person = [[CSCPerson createWithNode: [Soap getNode: node withName: @"Person"]] object];
			self.Relationship = [Soap getNodeValue: node withName: @"Relationship"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Driver"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.LicenseDate != nil) [s appendFormat: @"<LicenseDate>%@</LicenseDate>", [Soap getDateString: self.LicenseDate]];
		if (self.LicenseNumber != nil) [s appendFormat: @"<LicenseNumber>%@</LicenseNumber>", [[self.LicenseNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Person != nil) [s appendString: [self.Person serialize: @"Person"]];
		if (self.Relationship != nil) [s appendFormat: @"<Relationship>%@</Relationship>", [[self.Relationship stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCDriver class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
