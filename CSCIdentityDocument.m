/*
	CSCIdentityDocument.h
	The implementation of properties and methods for the CSCIdentityDocument object.
	Generated by SudzC.com
*/
#import "CSCIdentityDocument.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
@implementation CSCIdentityDocument
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize Authority = _Authority;
	@synthesize CodeINSEE = _CodeINSEE;
	@synthesize CountryCode = _CountryCode;
	@synthesize ExpirationDate = _ExpirationDate;
	@synthesize IssueDate = _IssueDate;
	@synthesize IssuePlace = _IssuePlace;
	@synthesize JobLevel = _JobLevel;
	@synthesize NationalNumber = _NationalNumber;
	@synthesize PersonNumber = _PersonNumber;
	@synthesize RegistrationDate = _RegistrationDate;
	@synthesize RegistrationNumber = _RegistrationNumber;
	@synthesize SerialNumber = _SerialNumber;
	@synthesize Series = _Series;
	@synthesize SocialSecurityKey = _SocialSecurityKey;
	@synthesize SocialSecurityNumber = _SocialSecurityNumber;
	@synthesize TaxPayerNumber = _TaxPayerNumber;
	@synthesize Type = _Type;
	@synthesize Valid = _Valid;

	- (id) init
	{
		if(self = [super init])
		{
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.Authority = nil;
			self.CodeINSEE = nil;
			self.CountryCode = nil;
			self.ExpirationDate = nil;
			self.IssueDate = nil;
			self.IssuePlace = nil;
			self.JobLevel = nil;
			self.NationalNumber = nil;
			self.PersonNumber = nil;
			self.RegistrationDate = nil;
			self.RegistrationNumber = nil;
			self.SerialNumber = nil;
			self.Series = nil;
			self.SocialSecurityKey = nil;
			self.SocialSecurityNumber = nil;
			self.TaxPayerNumber = nil;
			self.Type = nil;

		}
		return self;
	}

	+ (CSCIdentityDocument*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCIdentityDocument*)[[CSCIdentityDocument alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.Authority = [Soap getNodeValue: node withName: @"Authority"];
			self.CodeINSEE = [Soap getNodeValue: node withName: @"CodeINSEE"];
			self.CountryCode = [Soap getNodeValue: node withName: @"CountryCode"];
			self.ExpirationDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"ExpirationDate"]];
			self.IssueDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"IssueDate"]];
			self.IssuePlace = [Soap getNodeValue: node withName: @"IssuePlace"];
			self.JobLevel = [Soap getNodeValue: node withName: @"JobLevel"];
			self.NationalNumber = [Soap getNodeValue: node withName: @"NationalNumber"];
			self.PersonNumber = [Soap getNodeValue: node withName: @"PersonNumber"];
			self.RegistrationDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"RegistrationDate"]];
			self.RegistrationNumber = [Soap getNodeValue: node withName: @"RegistrationNumber"];
			self.SerialNumber = [Soap getNodeValue: node withName: @"SerialNumber"];
			self.Series = [Soap getNodeValue: node withName: @"Series"];
			self.SocialSecurityKey = [Soap getNodeValue: node withName: @"SocialSecurityKey"];
			self.SocialSecurityNumber = [Soap getNodeValue: node withName: @"SocialSecurityNumber"];
			self.TaxPayerNumber = [Soap getNodeValue: node withName: @"TaxPayerNumber"];
			self.Type = [Soap getNodeValue: node withName: @"Type"];
			self.Valid = [[Soap getNodeValue: node withName: @"Valid"] boolValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"IdentityDocument"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.Authority != nil) [s appendFormat: @"<Authority>%@</Authority>", [[self.Authority stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CodeINSEE != nil) [s appendFormat: @"<CodeINSEE>%@</CodeINSEE>", [[self.CodeINSEE stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CountryCode != nil) [s appendFormat: @"<CountryCode>%@</CountryCode>", [[self.CountryCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ExpirationDate != nil) [s appendFormat: @"<ExpirationDate>%@</ExpirationDate>", [Soap getDateString: self.ExpirationDate]];
		if (self.IssueDate != nil) [s appendFormat: @"<IssueDate>%@</IssueDate>", [Soap getDateString: self.IssueDate]];
		if (self.IssuePlace != nil) [s appendFormat: @"<IssuePlace>%@</IssuePlace>", [[self.IssuePlace stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.JobLevel != nil) [s appendFormat: @"<JobLevel>%@</JobLevel>", [[self.JobLevel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.NationalNumber != nil) [s appendFormat: @"<NationalNumber>%@</NationalNumber>", [[self.NationalNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.PersonNumber != nil) [s appendFormat: @"<PersonNumber>%@</PersonNumber>", [[self.PersonNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.RegistrationDate != nil) [s appendFormat: @"<RegistrationDate>%@</RegistrationDate>", [Soap getDateString: self.RegistrationDate]];
		if (self.RegistrationNumber != nil) [s appendFormat: @"<RegistrationNumber>%@</RegistrationNumber>", [[self.RegistrationNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.SerialNumber != nil) [s appendFormat: @"<SerialNumber>%@</SerialNumber>", [[self.SerialNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Series != nil) [s appendFormat: @"<Series>%@</Series>", [[self.Series stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.SocialSecurityKey != nil) [s appendFormat: @"<SocialSecurityKey>%@</SocialSecurityKey>", [[self.SocialSecurityKey stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.SocialSecurityNumber != nil) [s appendFormat: @"<SocialSecurityNumber>%@</SocialSecurityNumber>", [[self.SocialSecurityNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.TaxPayerNumber != nil) [s appendFormat: @"<TaxPayerNumber>%@</TaxPayerNumber>", [[self.TaxPayerNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Type != nil) [s appendFormat: @"<Type>%@</Type>", [[self.Type stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<Valid>%@</Valid>", (self.Valid)?@"true":@"false"];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCIdentityDocument class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
