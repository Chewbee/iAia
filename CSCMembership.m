/*
	CSCMembership.h
	The implementation of properties and methods for the CSCMembership object.
	Generated by SudzC.com
*/
#import "CSCMembership.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
#import "CSCContract.h"
#import "CSCArrayOfCoverageMembership.h"
#import "CSCMembership.h"
#import "CSCPerson.h"
#import "CSCPerson.h"
@implementation CSCMembership
	@synthesize DisplayId = _DisplayId;
	@synthesize EffectiveDate = _EffectiveDate;
	@synthesize EndDate = _EndDate;
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize StartDate = _StartDate;
	@synthesize Contract = _Contract;
	@synthesize CoverageMembershipList = _CoverageMembershipList;
	@synthesize Identifier = _Identifier;
	@synthesize Main = _Main;
	@synthesize MainMembership = _MainMembership;
	@synthesize MaximumAge = _MaximumAge;
	@synthesize Owner = _Owner;
	@synthesize Person = _Person;
	@synthesize RiskCode = _RiskCode;
	@synthesize Smoker = _Smoker;
	@synthesize Status = _Status;
	@synthesize StatusLabel = _StatusLabel;
	@synthesize Type = _Type;
	@synthesize TypeLabel = _TypeLabel;

	- (id) init
	{
		if(self = [super init])
		{
			self.DisplayId = nil;
			self.EffectiveDate = nil;
			self.EndDate = nil;
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.StartDate = nil;
			self.Contract = nil; // [[CSCContract alloc] init];
			self.CoverageMembershipList = [[NSMutableArray alloc] init];
			self.Identifier = nil;
			self.MainMembership = nil; // [[CSCMembership alloc] init];
			self.Owner = nil; // [[CSCPerson alloc] init];
			self.Person = nil; // [[CSCPerson alloc] init];
			self.Status = nil;
			self.StatusLabel = nil;
			self.Type = nil;
			self.TypeLabel = nil;

		}
		return self;
	}

	+ (CSCMembership*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCMembership*)[[CSCMembership alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.DisplayId = [Soap getNodeValue: node withName: @"DisplayId"];
			self.EffectiveDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EffectiveDate"]];
			self.EndDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EndDate"]];
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.StartDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"StartDate"]];
			self.Contract = [[CSCContract createWithNode: [Soap getNode: node withName: @"Contract"]] object];
			self.CoverageMembershipList = [[CSCArrayOfCoverageMembership createWithNode: [Soap getNode: node withName: @"CoverageMembershipList"]] object];
			self.Identifier = [Soap getNodeValue: node withName: @"Identifier"];
			self.Main = [[Soap getNodeValue: node withName: @"Main"] boolValue];
			self.MainMembership = [[CSCMembership createWithNode: [Soap getNode: node withName: @"MainMembership"]] object];
			self.MaximumAge = [[Soap getNodeValue: node withName: @"MaximumAge"] intValue];
			self.Owner = [[CSCPerson createWithNode: [Soap getNode: node withName: @"Owner"]] object];
			self.Person = [[CSCPerson createWithNode: [Soap getNode: node withName: @"Person"]] object];
			self.RiskCode = [[Soap getNodeValue: node withName: @"RiskCode"] intValue];
			self.Smoker = [[Soap getNodeValue: node withName: @"Smoker"] boolValue];
			self.Status = [Soap getNodeValue: node withName: @"Status"];
			self.StatusLabel = [Soap getNodeValue: node withName: @"StatusLabel"];
			self.Type = [Soap getNodeValue: node withName: @"Type"];
			self.TypeLabel = [Soap getNodeValue: node withName: @"TypeLabel"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Membership"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.DisplayId != nil) [s appendFormat: @"<DisplayId>%@</DisplayId>", [[self.DisplayId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EffectiveDate != nil) [s appendFormat: @"<EffectiveDate>%@</EffectiveDate>", [Soap getDateString: self.EffectiveDate]];
		if (self.EndDate != nil) [s appendFormat: @"<EndDate>%@</EndDate>", [Soap getDateString: self.EndDate]];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.StartDate != nil) [s appendFormat: @"<StartDate>%@</StartDate>", [Soap getDateString: self.StartDate]];
		if (self.Contract != nil) [s appendString: [self.Contract serialize: @"Contract"]];
		if (self.CoverageMembershipList != nil && self.CoverageMembershipList.count > 0) {
			[s appendFormat: @"<CoverageMembershipList>%@</CoverageMembershipList>", [CSCArrayOfCoverageMembership serialize: self.CoverageMembershipList]];
		} else {
			[s appendString: @"<CoverageMembershipList/>"];
		}
		if (self.Identifier != nil) [s appendFormat: @"<Identifier>%@</Identifier>", [[self.Identifier stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<Main>%@</Main>", (self.Main)?@"true":@"false"];
		if (self.MainMembership != nil) [s appendString: [self.MainMembership serialize: @"MainMembership"]];
		[s appendFormat: @"<MaximumAge>%@</MaximumAge>", [NSString stringWithFormat: @"%i", self.MaximumAge]];
		if (self.Owner != nil) [s appendString: [self.Owner serialize: @"Owner"]];
		if (self.Person != nil) [s appendString: [self.Person serialize: @"Person"]];
		[s appendFormat: @"<RiskCode>%@</RiskCode>", [NSString stringWithFormat: @"%i", self.RiskCode]];
		[s appendFormat: @"<Smoker>%@</Smoker>", (self.Smoker)?@"true":@"false"];
		if (self.Status != nil) [s appendFormat: @"<Status>%@</Status>", [[self.Status stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.StatusLabel != nil) [s appendFormat: @"<StatusLabel>%@</StatusLabel>", [[self.StatusLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Type != nil) [s appendFormat: @"<Type>%@</Type>", [[self.Type stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.TypeLabel != nil) [s appendFormat: @"<TypeLabel>%@</TypeLabel>", [[self.TypeLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCMembership class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
