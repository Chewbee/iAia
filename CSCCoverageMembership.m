/*
	CSCCoverageMembership.h
	The implementation of properties and methods for the CSCCoverageMembership object.
	Generated by SudzC.com
*/
#import "CSCCoverageMembership.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
#import "CSCContract.h"
#import "CSCCoverage.h"
#import "CSCArrayOfMedicalTreatmentGroup.h"
#import "CSCWaitingPeriod.h"
@implementation CSCCoverageMembership
	@synthesize DisplayId = _DisplayId;
	@synthesize EffectiveDate = _EffectiveDate;
	@synthesize EndDate = _EndDate;
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize StartDate = _StartDate;
	@synthesize Contract = _Contract;
	@synthesize Coverage = _Coverage;
	@synthesize DeductibleDate = _DeductibleDate;
	@synthesize GroupList = _GroupList;
	@synthesize LimitationDate = _LimitationDate;
	@synthesize WaitingPeriod = _WaitingPeriod;

	- (id) init
	{
		if(self = [super init])
		{
			self.DisplayId = nil;
			self.EffectiveDate = nil;
			self.EndDate = nil;
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.StartDate = nil;
			self.Contract = nil; // [[CSCContract alloc] init];
			self.Coverage = nil; // [[CSCCoverage alloc] init];
			self.DeductibleDate = nil;
			self.GroupList = [[NSMutableArray alloc] init];
			self.LimitationDate = nil;
			self.WaitingPeriod = nil; // [[CSCWaitingPeriod alloc] init];

		}
		return self;
	}

	+ (CSCCoverageMembership*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCCoverageMembership*)[[CSCCoverageMembership alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.DisplayId = [Soap getNodeValue: node withName: @"DisplayId"];
			self.EffectiveDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EffectiveDate"]];
			self.EndDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EndDate"]];
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.StartDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"StartDate"]];
			self.Contract = [[CSCContract createWithNode: [Soap getNode: node withName: @"Contract"]] object];
			self.Coverage = [[CSCCoverage createWithNode: [Soap getNode: node withName: @"Coverage"]] object];
			self.DeductibleDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"DeductibleDate"]];
			self.GroupList = [[CSCArrayOfMedicalTreatmentGroup createWithNode: [Soap getNode: node withName: @"GroupList"]] object];
			self.LimitationDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"LimitationDate"]];
			self.WaitingPeriod = [[CSCWaitingPeriod createWithNode: [Soap getNode: node withName: @"WaitingPeriod"]] object];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"CoverageMembership"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.DisplayId != nil) [s appendFormat: @"<DisplayId>%@</DisplayId>", [[self.DisplayId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EffectiveDate != nil) [s appendFormat: @"<EffectiveDate>%@</EffectiveDate>", [Soap getDateString: self.EffectiveDate]];
		if (self.EndDate != nil) [s appendFormat: @"<EndDate>%@</EndDate>", [Soap getDateString: self.EndDate]];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.StartDate != nil) [s appendFormat: @"<StartDate>%@</StartDate>", [Soap getDateString: self.StartDate]];
		if (self.Contract != nil) [s appendString: [self.Contract serialize: @"Contract"]];
		if (self.Coverage != nil) [s appendString: [self.Coverage serialize: @"Coverage"]];
		if (self.DeductibleDate != nil) [s appendFormat: @"<DeductibleDate>%@</DeductibleDate>", [Soap getDateString: self.DeductibleDate]];
		if (self.GroupList != nil && self.GroupList.count > 0) {
			[s appendFormat: @"<GroupList>%@</GroupList>", [CSCArrayOfMedicalTreatmentGroup serialize: self.GroupList]];
		} else {
			[s appendString: @"<GroupList/>"];
		}
		if (self.LimitationDate != nil) [s appendFormat: @"<LimitationDate>%@</LimitationDate>", [Soap getDateString: self.LimitationDate]];
		if (self.WaitingPeriod != nil) [s appendString: [self.WaitingPeriod serialize: @"WaitingPeriod"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCCoverageMembership class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
