/*
	CSCOrganization.h
	The implementation of properties and methods for the CSCOrganization object.
	Generated by SudzC.com
*/
#import "CSCOrganization.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
#import "CSCArrayOfBankAccount.h"
#import "CSCClientProfile.h"
#import "CSCArrayOfCreditCard.h"
#import "CSCArrayOfEMailAddress.h"
#import "CSCArrayOfMembership.h"
#import "CSCArrayOfPhoneAddress.h"
#import "CSCArrayOfPostalAddress.h"
#import "CSCArrayOfPartyRelationship.h"
#import "CSCArrayOfWebSiteAddress.h"
#import "CSCOrganizationDetail.h"
#import "CSCArrayOfPayPoint.h"
#import "CSCOrganizationProfile.h"
#import "CSCArrayOfPeriod.h"
#import "CSCArrayOfRegistration.h"
@implementation CSCOrganization
	@synthesize DisplayId = _DisplayId;
	@synthesize EffectiveDate = _EffectiveDate;
	@synthesize EndDate = _EndDate;
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize StartDate = _StartDate;
	@synthesize Age = _Age;
	@synthesize BankAccountList = _BankAccountList;
	@synthesize ClientNumber = _ClientNumber;
	@synthesize ClientNumber2 = _ClientNumber2;
	@synthesize ClientProfile = _ClientProfile;
	@synthesize CountryCode = _CountryCode;
	@synthesize CreditCardList = _CreditCardList;
	@synthesize EMailAddressList = _EMailAddressList;
	@synthesize FirstMembershipDate = _FirstMembershipDate;
	@synthesize Identifier = _Identifier;
	@synthesize KeyPeople = _KeyPeople;
	@synthesize Language = _Language;
	@synthesize LanguageLabel = _LanguageLabel;
	@synthesize MembershipList = _MembershipList;
	@synthesize Nationality = _Nationality;
	@synthesize PhoneAddressList = _PhoneAddressList;
	@synthesize PostalAddressList = _PostalAddressList;
	@synthesize PostalCode = _PostalCode;
	@synthesize PrimaryLanguage = _PrimaryLanguage;
	@synthesize RelationshipList = _RelationshipList;
	@synthesize RiskCode = _RiskCode;
	@synthesize SavingsProfile = _SavingsProfile;
	@synthesize WebSiteList = _WebSiteList;
	@synthesize Acronym = _Acronym;
	@synthesize ActivityDescription = _ActivityDescription;
	@synthesize BaseCollectiveAgreement = _BaseCollectiveAgreement;
	@synthesize BranchNumber = _BranchNumber;
	@synthesize BusinessClass = _BusinessClass;
	@synthesize BusinessCode = _BusinessCode;
	@synthesize CollectiveAgreement = _CollectiveAgreement;
	@synthesize DisplayId1 = _DisplayId1;
	@synthesize EnterpriseNumber = _EnterpriseNumber;
	@synthesize FoundationCountryCode = _FoundationCountryCode;
	@synthesize FoundationDate = _FoundationDate;
	@synthesize GroupIdentifier = _GroupIdentifier;
	@synthesize GroupNumber = _GroupNumber;
	@synthesize IsLargeCompany = _IsLargeCompany;
	@synthesize LegalName = _LegalName;
	@synthesize LumpSum = _LumpSum;
	@synthesize MajorAccount = _MajorAccount;
	@synthesize OrganizationDetail = _OrganizationDetail;
	@synthesize OrganizationTitle = _OrganizationTitle;
	@synthesize OrganizationType = _OrganizationType;
	@synthesize PayPointList = _PayPointList;
	@synthesize ProfessionalClass = _ProfessionalClass;
	@synthesize ProfileDetail = _ProfileDetail;
	@synthesize RCS = _RCS;
	@synthesize RM = _RM;
	@synthesize RMNumber = _RMNumber;
	@synthesize ReceivershipPeriodList = _ReceivershipPeriodList;
	@synthesize RegistrationList = _RegistrationList;
	@synthesize SIRENNumber = _SIRENNumber;
	@synthesize SIRETNumber = _SIRETNumber;
	@synthesize SiteHazard = _SiteHazard;
	@synthesize SiteHazardLabel = _SiteHazardLabel;
	@synthesize TVANumber = _TVANumber;
	@synthesize TerminationDate = _TerminationDate;
	@synthesize TerminationReason = _TerminationReason;
	@synthesize TradeName = _TradeName;
	@synthesize TradeRegisterNumber = _TradeRegisterNumber;
	@synthesize VIP = _VIP;

	- (id) init
	{
		if(self = [super init])
		{
			self.DisplayId = nil;
			self.EffectiveDate = nil;
			self.EndDate = nil;
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.StartDate = nil;
			self.BankAccountList = [[NSMutableArray alloc] init];
			self.ClientNumber = nil;
			self.ClientNumber2 = nil;
			self.ClientProfile = nil; // [[CSCClientProfile alloc] init];
			self.CountryCode = nil;
			self.CreditCardList = [[NSMutableArray alloc] init];
			self.EMailAddressList = [[NSMutableArray alloc] init];
			self.FirstMembershipDate = nil;
			self.Identifier = nil;
			self.Language = nil;
			self.LanguageLabel = nil;
			self.MembershipList = [[NSMutableArray alloc] init];
			self.Nationality = nil;
			self.PhoneAddressList = [[NSMutableArray alloc] init];
			self.PostalAddressList = [[NSMutableArray alloc] init];
			self.PostalCode = nil;
			self.PrimaryLanguage = nil;
			self.RelationshipList = [[NSMutableArray alloc] init];
			self.SavingsProfile = nil;
			self.WebSiteList = [[NSMutableArray alloc] init];
			self.Acronym = nil;
			self.ActivityDescription = nil;
			self.BaseCollectiveAgreement = nil;
			self.BranchNumber = nil;
			self.BusinessClass = nil;
			self.BusinessCode = nil;
			self.CollectiveAgreement = nil;
			self.DisplayId1 = nil;
			self.EnterpriseNumber = nil;
			self.FoundationCountryCode = nil;
			self.FoundationDate = nil;
			self.GroupIdentifier = nil;
			self.GroupNumber = nil;
			self.LegalName = nil;
			self.LumpSum = nil;
			self.OrganizationDetail = nil; // [[CSCOrganizationDetail alloc] init];
			self.OrganizationTitle = nil;
			self.OrganizationType = nil;
			self.PayPointList = [[NSMutableArray alloc] init];
			self.ProfileDetail = nil; // [[CSCOrganizationProfile alloc] init];
			self.RMNumber = nil;
			self.ReceivershipPeriodList = [[NSMutableArray alloc] init];
			self.RegistrationList = [[NSMutableArray alloc] init];
			self.SIRENNumber = nil;
			self.SIRETNumber = nil;
			self.SiteHazard = nil;
			self.SiteHazardLabel = nil;
			self.TVANumber = nil;
			self.TerminationDate = nil;
			self.TerminationReason = nil;
			self.TradeName = nil;
			self.TradeRegisterNumber = nil;

		}
		return self;
	}

	+ (CSCOrganization*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCOrganization*)[[CSCOrganization alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.DisplayId = [Soap getNodeValue: node withName: @"DisplayId"];
			self.EffectiveDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EffectiveDate"]];
			self.EndDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EndDate"]];
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.StartDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"StartDate"]];
			self.Age = [[Soap getNodeValue: node withName: @"Age"] intValue];
			self.BankAccountList = [[CSCArrayOfBankAccount createWithNode: [Soap getNode: node withName: @"BankAccountList"]] object];
			self.ClientNumber = [Soap getNodeValue: node withName: @"ClientNumber"];
			self.ClientNumber2 = [Soap getNodeValue: node withName: @"ClientNumber2"];
			self.ClientProfile = [[CSCClientProfile createWithNode: [Soap getNode: node withName: @"ClientProfile"]] object];
			self.CountryCode = [Soap getNodeValue: node withName: @"CountryCode"];
			self.CreditCardList = [[CSCArrayOfCreditCard createWithNode: [Soap getNode: node withName: @"CreditCardList"]] object];
			self.EMailAddressList = [[CSCArrayOfEMailAddress createWithNode: [Soap getNode: node withName: @"EMailAddressList"]] object];
			self.FirstMembershipDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"FirstMembershipDate"]];
			self.Identifier = [Soap getNodeValue: node withName: @"Identifier"];
			self.KeyPeople = [[Soap getNodeValue: node withName: @"KeyPeople"] boolValue];
			self.Language = [Soap getNodeValue: node withName: @"Language"];
			self.LanguageLabel = [Soap getNodeValue: node withName: @"LanguageLabel"];
			self.MembershipList = [[CSCArrayOfMembership createWithNode: [Soap getNode: node withName: @"MembershipList"]] object];
			self.Nationality = [Soap getNodeValue: node withName: @"Nationality"];
			self.PhoneAddressList = [[CSCArrayOfPhoneAddress createWithNode: [Soap getNode: node withName: @"PhoneAddressList"]] object];
			self.PostalAddressList = [[CSCArrayOfPostalAddress createWithNode: [Soap getNode: node withName: @"PostalAddressList"]] object];
			self.PostalCode = [Soap getNodeValue: node withName: @"PostalCode"];
			self.PrimaryLanguage = [Soap getNodeValue: node withName: @"PrimaryLanguage"];
			self.RelationshipList = [[CSCArrayOfPartyRelationship createWithNode: [Soap getNode: node withName: @"RelationshipList"]] object];
			self.RiskCode = [[Soap getNodeValue: node withName: @"RiskCode"] intValue];
			self.SavingsProfile = [Soap getNodeValue: node withName: @"SavingsProfile"];
			self.WebSiteList = [[CSCArrayOfWebSiteAddress createWithNode: [Soap getNode: node withName: @"WebSiteList"]] object];
			self.Acronym = [Soap getNodeValue: node withName: @"Acronym"];
			self.ActivityDescription = [Soap getNodeValue: node withName: @"ActivityDescription"];
			self.BaseCollectiveAgreement = [Soap getNodeValue: node withName: @"BaseCollectiveAgreement"];
			self.BranchNumber = [Soap getNodeValue: node withName: @"BranchNumber"];
			self.BusinessClass = [Soap getNodeValue: node withName: @"BusinessClass"];
			self.BusinessCode = [Soap getNodeValue: node withName: @"BusinessCode"];
			self.CollectiveAgreement = [Soap getNodeValue: node withName: @"CollectiveAgreement"];
			self.DisplayId1 = [Soap getNodeValue: node withName: @"DisplayId1"];
			self.EnterpriseNumber = [Soap getNodeValue: node withName: @"EnterpriseNumber"];
			self.FoundationCountryCode = [Soap getNodeValue: node withName: @"FoundationCountryCode"];
			self.FoundationDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"FoundationDate"]];
			self.GroupIdentifier = [Soap getNodeValue: node withName: @"GroupIdentifier"];
			self.GroupNumber = [Soap getNodeValue: node withName: @"GroupNumber"];
			self.IsLargeCompany = [[Soap getNodeValue: node withName: @"IsLargeCompany"] boolValue];
			self.LegalName = [Soap getNodeValue: node withName: @"LegalName"];
			self.LumpSum = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"LumpSum"]];
			self.MajorAccount = [[Soap getNodeValue: node withName: @"MajorAccount"] boolValue];
			self.OrganizationDetail = [[CSCOrganizationDetail createWithNode: [Soap getNode: node withName: @"OrganizationDetail"]] object];
			self.OrganizationTitle = [Soap getNodeValue: node withName: @"OrganizationTitle"];
			self.OrganizationType = [Soap getNodeValue: node withName: @"OrganizationType"];
			self.PayPointList = [[CSCArrayOfPayPoint createWithNode: [Soap getNode: node withName: @"PayPointList"]] object];
			self.ProfessionalClass = [[Soap getNodeValue: node withName: @"ProfessionalClass"] intValue];
			self.ProfileDetail = [[CSCOrganizationProfile createWithNode: [Soap getNode: node withName: @"ProfileDetail"]] object];
			self.RCS = [[Soap getNodeValue: node withName: @"RCS"] boolValue];
			self.RM = [[Soap getNodeValue: node withName: @"RM"] boolValue];
			self.RMNumber = [Soap getNodeValue: node withName: @"RMNumber"];
			self.ReceivershipPeriodList = [[CSCArrayOfPeriod createWithNode: [Soap getNode: node withName: @"ReceivershipPeriodList"]] object];
			self.RegistrationList = [[CSCArrayOfRegistration createWithNode: [Soap getNode: node withName: @"RegistrationList"]] object];
			self.SIRENNumber = [Soap getNodeValue: node withName: @"SIRENNumber"];
			self.SIRETNumber = [Soap getNodeValue: node withName: @"SIRETNumber"];
			self.SiteHazard = [Soap getNodeValue: node withName: @"SiteHazard"];
			self.SiteHazardLabel = [Soap getNodeValue: node withName: @"SiteHazardLabel"];
			self.TVANumber = [Soap getNodeValue: node withName: @"TVANumber"];
			self.TerminationDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"TerminationDate"]];
			self.TerminationReason = [Soap getNodeValue: node withName: @"TerminationReason"];
			self.TradeName = [Soap getNodeValue: node withName: @"TradeName"];
			self.TradeRegisterNumber = [Soap getNodeValue: node withName: @"TradeRegisterNumber"];
			self.VIP = [[Soap getNodeValue: node withName: @"VIP"] boolValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Organization"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.DisplayId != nil) [s appendFormat: @"<DisplayId>%@</DisplayId>", [[self.DisplayId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EffectiveDate != nil) [s appendFormat: @"<EffectiveDate>%@</EffectiveDate>", [Soap getDateString: self.EffectiveDate]];
		if (self.EndDate != nil) [s appendFormat: @"<EndDate>%@</EndDate>", [Soap getDateString: self.EndDate]];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.StartDate != nil) [s appendFormat: @"<StartDate>%@</StartDate>", [Soap getDateString: self.StartDate]];
		[s appendFormat: @"<Age>%@</Age>", [NSString stringWithFormat: @"%i", self.Age]];
		if (self.BankAccountList != nil && self.BankAccountList.count > 0) {
			[s appendFormat: @"<BankAccountList>%@</BankAccountList>", [CSCArrayOfBankAccount serialize: self.BankAccountList]];
		} else {
			[s appendString: @"<BankAccountList/>"];
		}
		if (self.ClientNumber != nil) [s appendFormat: @"<ClientNumber>%@</ClientNumber>", [[self.ClientNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ClientNumber2 != nil) [s appendFormat: @"<ClientNumber2>%@</ClientNumber2>", [[self.ClientNumber2 stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ClientProfile != nil) [s appendString: [self.ClientProfile serialize: @"ClientProfile"]];
		if (self.CountryCode != nil) [s appendFormat: @"<CountryCode>%@</CountryCode>", [[self.CountryCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CreditCardList != nil && self.CreditCardList.count > 0) {
			[s appendFormat: @"<CreditCardList>%@</CreditCardList>", [CSCArrayOfCreditCard serialize: self.CreditCardList]];
		} else {
			[s appendString: @"<CreditCardList/>"];
		}
		if (self.EMailAddressList != nil && self.EMailAddressList.count > 0) {
			[s appendFormat: @"<EMailAddressList>%@</EMailAddressList>", [CSCArrayOfEMailAddress serialize: self.EMailAddressList]];
		} else {
			[s appendString: @"<EMailAddressList/>"];
		}
		if (self.FirstMembershipDate != nil) [s appendFormat: @"<FirstMembershipDate>%@</FirstMembershipDate>", [Soap getDateString: self.FirstMembershipDate]];
		if (self.Identifier != nil) [s appendFormat: @"<Identifier>%@</Identifier>", [[self.Identifier stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<KeyPeople>%@</KeyPeople>", (self.KeyPeople)?@"true":@"false"];
		if (self.Language != nil) [s appendFormat: @"<Language>%@</Language>", [[self.Language stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.LanguageLabel != nil) [s appendFormat: @"<LanguageLabel>%@</LanguageLabel>", [[self.LanguageLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.MembershipList != nil && self.MembershipList.count > 0) {
			[s appendFormat: @"<MembershipList>%@</MembershipList>", [CSCArrayOfMembership serialize: self.MembershipList]];
		} else {
			[s appendString: @"<MembershipList/>"];
		}
		if (self.Nationality != nil) [s appendFormat: @"<Nationality>%@</Nationality>", [[self.Nationality stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.PhoneAddressList != nil && self.PhoneAddressList.count > 0) {
			[s appendFormat: @"<PhoneAddressList>%@</PhoneAddressList>", [CSCArrayOfPhoneAddress serialize: self.PhoneAddressList]];
		} else {
			[s appendString: @"<PhoneAddressList/>"];
		}
		if (self.PostalAddressList != nil && self.PostalAddressList.count > 0) {
			[s appendFormat: @"<PostalAddressList>%@</PostalAddressList>", [CSCArrayOfPostalAddress serialize: self.PostalAddressList]];
		} else {
			[s appendString: @"<PostalAddressList/>"];
		}
		if (self.PostalCode != nil) [s appendFormat: @"<PostalCode>%@</PostalCode>", [[self.PostalCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.PrimaryLanguage != nil) [s appendFormat: @"<PrimaryLanguage>%@</PrimaryLanguage>", [[self.PrimaryLanguage stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.RelationshipList != nil && self.RelationshipList.count > 0) {
			[s appendFormat: @"<RelationshipList>%@</RelationshipList>", [CSCArrayOfPartyRelationship serialize: self.RelationshipList]];
		} else {
			[s appendString: @"<RelationshipList/>"];
		}
		[s appendFormat: @"<RiskCode>%@</RiskCode>", [NSString stringWithFormat: @"%i", self.RiskCode]];
		if (self.SavingsProfile != nil) [s appendFormat: @"<SavingsProfile>%@</SavingsProfile>", [[self.SavingsProfile stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.WebSiteList != nil && self.WebSiteList.count > 0) {
			[s appendFormat: @"<WebSiteList>%@</WebSiteList>", [CSCArrayOfWebSiteAddress serialize: self.WebSiteList]];
		} else {
			[s appendString: @"<WebSiteList/>"];
		}
		if (self.Acronym != nil) [s appendFormat: @"<Acronym>%@</Acronym>", [[self.Acronym stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ActivityDescription != nil) [s appendFormat: @"<ActivityDescription>%@</ActivityDescription>", [[self.ActivityDescription stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.BaseCollectiveAgreement != nil) [s appendFormat: @"<BaseCollectiveAgreement>%@</BaseCollectiveAgreement>", [[self.BaseCollectiveAgreement stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.BranchNumber != nil) [s appendFormat: @"<BranchNumber>%@</BranchNumber>", [[self.BranchNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.BusinessClass != nil) [s appendFormat: @"<BusinessClass>%@</BusinessClass>", [[self.BusinessClass stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.BusinessCode != nil) [s appendFormat: @"<BusinessCode>%@</BusinessCode>", [[self.BusinessCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CollectiveAgreement != nil) [s appendFormat: @"<CollectiveAgreement>%@</CollectiveAgreement>", [[self.CollectiveAgreement stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.DisplayId1 != nil) [s appendFormat: @"<DisplayId1>%@</DisplayId1>", [[self.DisplayId1 stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EnterpriseNumber != nil) [s appendFormat: @"<EnterpriseNumber>%@</EnterpriseNumber>", [[self.EnterpriseNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.FoundationCountryCode != nil) [s appendFormat: @"<FoundationCountryCode>%@</FoundationCountryCode>", [[self.FoundationCountryCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.FoundationDate != nil) [s appendFormat: @"<FoundationDate>%@</FoundationDate>", [Soap getDateString: self.FoundationDate]];
		if (self.GroupIdentifier != nil) [s appendFormat: @"<GroupIdentifier>%@</GroupIdentifier>", [[self.GroupIdentifier stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.GroupNumber != nil) [s appendFormat: @"<GroupNumber>%@</GroupNumber>", [[self.GroupNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<IsLargeCompany>%@</IsLargeCompany>", (self.IsLargeCompany)?@"true":@"false"];
		if (self.LegalName != nil) [s appendFormat: @"<LegalName>%@</LegalName>", [[self.LegalName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.LumpSum != nil) [s appendFormat: @"<LumpSum>%@</LumpSum>", [NSString stringWithFormat: @"%@", self.LumpSum]];
		[s appendFormat: @"<MajorAccount>%@</MajorAccount>", (self.MajorAccount)?@"true":@"false"];
		if (self.OrganizationDetail != nil) [s appendString: [self.OrganizationDetail serialize: @"OrganizationDetail"]];
		if (self.OrganizationTitle != nil) [s appendFormat: @"<OrganizationTitle>%@</OrganizationTitle>", [[self.OrganizationTitle stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.OrganizationType != nil) [s appendFormat: @"<OrganizationType>%@</OrganizationType>", [[self.OrganizationType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.PayPointList != nil && self.PayPointList.count > 0) {
			[s appendFormat: @"<PayPointList>%@</PayPointList>", [CSCArrayOfPayPoint serialize: self.PayPointList]];
		} else {
			[s appendString: @"<PayPointList/>"];
		}
		[s appendFormat: @"<ProfessionalClass>%@</ProfessionalClass>", [NSString stringWithFormat: @"%i", self.ProfessionalClass]];
		if (self.ProfileDetail != nil) [s appendString: [self.ProfileDetail serialize: @"ProfileDetail"]];
		[s appendFormat: @"<RCS>%@</RCS>", (self.RCS)?@"true":@"false"];
		[s appendFormat: @"<RM>%@</RM>", (self.RM)?@"true":@"false"];
		if (self.RMNumber != nil) [s appendFormat: @"<RMNumber>%@</RMNumber>", [[self.RMNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ReceivershipPeriodList != nil && self.ReceivershipPeriodList.count > 0) {
			[s appendFormat: @"<ReceivershipPeriodList>%@</ReceivershipPeriodList>", [CSCArrayOfPeriod serialize: self.ReceivershipPeriodList]];
		} else {
			[s appendString: @"<ReceivershipPeriodList/>"];
		}
		if (self.RegistrationList != nil && self.RegistrationList.count > 0) {
			[s appendFormat: @"<RegistrationList>%@</RegistrationList>", [CSCArrayOfRegistration serialize: self.RegistrationList]];
		} else {
			[s appendString: @"<RegistrationList/>"];
		}
		if (self.SIRENNumber != nil) [s appendFormat: @"<SIRENNumber>%@</SIRENNumber>", [[self.SIRENNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.SIRETNumber != nil) [s appendFormat: @"<SIRETNumber>%@</SIRETNumber>", [[self.SIRETNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.SiteHazard != nil) [s appendFormat: @"<SiteHazard>%@</SiteHazard>", [[self.SiteHazard stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.SiteHazardLabel != nil) [s appendFormat: @"<SiteHazardLabel>%@</SiteHazardLabel>", [[self.SiteHazardLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.TVANumber != nil) [s appendFormat: @"<TVANumber>%@</TVANumber>", [[self.TVANumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.TerminationDate != nil) [s appendFormat: @"<TerminationDate>%@</TerminationDate>", [Soap getDateString: self.TerminationDate]];
		if (self.TerminationReason != nil) [s appendFormat: @"<TerminationReason>%@</TerminationReason>", [[self.TerminationReason stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.TradeName != nil) [s appendFormat: @"<TradeName>%@</TradeName>", [[self.TradeName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.TradeRegisterNumber != nil) [s appendFormat: @"<TradeRegisterNumber>%@</TradeRegisterNumber>", [[self.TradeRegisterNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<VIP>%@</VIP>", (self.VIP)?@"true":@"false"];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCOrganization class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
