/*
	CSCCoverageFund.h
	The implementation of properties and methods for the CSCCoverageFund object.
	Generated by SudzC.com
*/
#import "CSCCoverageFund.h"

#import "CSCObject.h"
#import "CSCArrayOfExtensionElement.h"
#import "CSCArrayOfBeneficiary.h"
#import "CSCArrayOfClause.h"
#import "CSCInterestFund.h"
#import "CSCArrayOfPenaltyRate.h"
#import "CSCArrayOfSavingsFlow.h"
#import "CSCSavingsPool.h"
#import "CSCUnitLinkedFund.h"
@implementation CSCCoverageFund
	@synthesize DisplayId = _DisplayId;
	@synthesize EffectiveDate = _EffectiveDate;
	@synthesize EndDate = _EndDate;
	@synthesize Extension = _Extension;
	@synthesize ExtensionList = _ExtensionList;
	@synthesize StartDate = _StartDate;
	@synthesize BeneficiaryList = _BeneficiaryList;
	@synthesize ClauseList = _ClauseList;
	@synthesize Eligibility = _Eligibility;
	@synthesize Identifier = _Identifier;
	@synthesize Label = _Label;
	@synthesize Mandatory = _Mandatory;
	@synthesize Number = _Number;
	@synthesize GrossCashValue = _GrossCashValue;
	@synthesize InterestFund = _InterestFund;
	@synthesize NetCashValue = _NetCashValue;
	@synthesize PenaltyRateList = _PenaltyRateList;
	@synthesize SavingsCalculation = _SavingsCalculation;
	@synthesize SavingsFlowList = _SavingsFlowList;
	@synthesize SavingsPool = _SavingsPool;
	@synthesize Type = _Type;
	@synthesize UnitLinkedFund = _UnitLinkedFund;
	@synthesize Units = _Units;

	- (id) init
	{
		if(self = [super init])
		{
			self.DisplayId = nil;
			self.EffectiveDate = nil;
			self.EndDate = nil;
			self.Extension = nil; // [[CSCObject alloc] init];
			self.ExtensionList = [[NSMutableArray alloc] init];
			self.StartDate = nil;
			self.BeneficiaryList = [[NSMutableArray alloc] init];
			self.ClauseList = [[NSMutableArray alloc] init];
			self.Eligibility = nil;
			self.Identifier = nil;
			self.Label = nil;
			self.GrossCashValue = nil;
			self.InterestFund = nil; // [[CSCInterestFund alloc] init];
			self.NetCashValue = nil;
			self.PenaltyRateList = [[NSMutableArray alloc] init];
			self.SavingsCalculation = nil;
			self.SavingsFlowList = [[NSMutableArray alloc] init];
			self.SavingsPool = nil; // [[CSCSavingsPool alloc] init];
			self.Type = nil;
			self.UnitLinkedFund = nil; // [[CSCUnitLinkedFund alloc] init];
			self.Units = nil;

		}
		return self;
	}

	+ (CSCCoverageFund*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (CSCCoverageFund*)[[CSCCoverageFund alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.DisplayId = [Soap getNodeValue: node withName: @"DisplayId"];
			self.EffectiveDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EffectiveDate"]];
			self.EndDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EndDate"]];
			self.Extension = [[CSCObject createWithNode: [Soap getNode: node withName: @"Extension"]] object];
			self.ExtensionList = [[CSCArrayOfExtensionElement createWithNode: [Soap getNode: node withName: @"ExtensionList"]] object];
			self.StartDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"StartDate"]];
			self.BeneficiaryList = [[CSCArrayOfBeneficiary createWithNode: [Soap getNode: node withName: @"BeneficiaryList"]] object];
			self.ClauseList = [[CSCArrayOfClause createWithNode: [Soap getNode: node withName: @"ClauseList"]] object];
			self.Eligibility = [Soap getNodeValue: node withName: @"Eligibility"];
			self.Identifier = [Soap getNodeValue: node withName: @"Identifier"];
			self.Label = [Soap getNodeValue: node withName: @"Label"];
			self.Mandatory = [[Soap getNodeValue: node withName: @"Mandatory"] boolValue];
			self.Number = [[Soap getNodeValue: node withName: @"Number"] intValue];
			self.GrossCashValue = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"GrossCashValue"]];
			self.InterestFund = [[CSCInterestFund createWithNode: [Soap getNode: node withName: @"InterestFund"]] object];
			self.NetCashValue = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"NetCashValue"]];
			self.PenaltyRateList = [[CSCArrayOfPenaltyRate createWithNode: [Soap getNode: node withName: @"PenaltyRateList"]] object];
			self.SavingsCalculation = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"SavingsCalculation"]];
			self.SavingsFlowList = [[CSCArrayOfSavingsFlow createWithNode: [Soap getNode: node withName: @"SavingsFlowList"]] object];
			self.SavingsPool = [[CSCSavingsPool createWithNode: [Soap getNode: node withName: @"SavingsPool"]] object];
			self.Type = [Soap getNodeValue: node withName: @"Type"];
			self.UnitLinkedFund = [[CSCUnitLinkedFund createWithNode: [Soap getNode: node withName: @"UnitLinkedFund"]] object];
			self.Units = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"Units"]];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"CoverageFund"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.DisplayId != nil) [s appendFormat: @"<DisplayId>%@</DisplayId>", [[self.DisplayId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EffectiveDate != nil) [s appendFormat: @"<EffectiveDate>%@</EffectiveDate>", [Soap getDateString: self.EffectiveDate]];
		if (self.EndDate != nil) [s appendFormat: @"<EndDate>%@</EndDate>", [Soap getDateString: self.EndDate]];
		if (self.Extension != nil) [s appendString: [self.Extension serialize: @"Extension"]];
		if (self.ExtensionList != nil && self.ExtensionList.count > 0) {
			[s appendFormat: @"<ExtensionList>%@</ExtensionList>", [CSCArrayOfExtensionElement serialize: self.ExtensionList]];
		} else {
			[s appendString: @"<ExtensionList/>"];
		}
		if (self.StartDate != nil) [s appendFormat: @"<StartDate>%@</StartDate>", [Soap getDateString: self.StartDate]];
		if (self.BeneficiaryList != nil && self.BeneficiaryList.count > 0) {
			[s appendFormat: @"<BeneficiaryList>%@</BeneficiaryList>", [CSCArrayOfBeneficiary serialize: self.BeneficiaryList]];
		} else {
			[s appendString: @"<BeneficiaryList/>"];
		}
		if (self.ClauseList != nil && self.ClauseList.count > 0) {
			[s appendFormat: @"<ClauseList>%@</ClauseList>", [CSCArrayOfClause serialize: self.ClauseList]];
		} else {
			[s appendString: @"<ClauseList/>"];
		}
		if (self.Eligibility != nil) [s appendFormat: @"<Eligibility>%@</Eligibility>", [[self.Eligibility stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Identifier != nil) [s appendFormat: @"<Identifier>%@</Identifier>", [[self.Identifier stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Label != nil) [s appendFormat: @"<Label>%@</Label>", [[self.Label stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<Mandatory>%@</Mandatory>", (self.Mandatory)?@"true":@"false"];
		[s appendFormat: @"<Number>%@</Number>", [NSString stringWithFormat: @"%i", self.Number]];
		if (self.GrossCashValue != nil) [s appendFormat: @"<GrossCashValue>%@</GrossCashValue>", [NSString stringWithFormat: @"%@", self.GrossCashValue]];
		if (self.InterestFund != nil) [s appendString: [self.InterestFund serialize: @"InterestFund"]];
		if (self.NetCashValue != nil) [s appendFormat: @"<NetCashValue>%@</NetCashValue>", [NSString stringWithFormat: @"%@", self.NetCashValue]];
		if (self.PenaltyRateList != nil && self.PenaltyRateList.count > 0) {
			[s appendFormat: @"<PenaltyRateList>%@</PenaltyRateList>", [CSCArrayOfPenaltyRate serialize: self.PenaltyRateList]];
		} else {
			[s appendString: @"<PenaltyRateList/>"];
		}
		if (self.SavingsCalculation != nil) [s appendFormat: @"<SavingsCalculation>%@</SavingsCalculation>", [NSString stringWithFormat: @"%@", self.SavingsCalculation]];
		if (self.SavingsFlowList != nil && self.SavingsFlowList.count > 0) {
			[s appendFormat: @"<SavingsFlowList>%@</SavingsFlowList>", [CSCArrayOfSavingsFlow serialize: self.SavingsFlowList]];
		} else {
			[s appendString: @"<SavingsFlowList/>"];
		}
		if (self.SavingsPool != nil) [s appendString: [self.SavingsPool serialize: @"SavingsPool"]];
		if (self.Type != nil) [s appendFormat: @"<Type>%@</Type>", [[self.Type stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.UnitLinkedFund != nil) [s appendString: [self.UnitLinkedFund serialize: @"UnitLinkedFund"]];
		if (self.Units != nil) [s appendFormat: @"<Units>%@</Units>", [NSString stringWithFormat: @"%@", self.Units]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[CSCCoverageFund class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
